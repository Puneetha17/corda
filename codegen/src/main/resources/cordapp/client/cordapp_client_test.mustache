package {{apiPackage}}

{{#imports}}import {{import}}
{{/imports}}

import io.bluebank.braid.server.Braid
import org.junit.jupiter.api.AfterAll
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.BeforeAll
import org.junit.jupiter.api.Test
import org.web3j.corda.protocol.Corda
import org.web3j.corda.protocol.CordaService
import org.web3j.corda.testcontainers.DockerBasedIntegrationTest
import org.web3j.corda.util.convert
import javax.annotation.Generated

@Generated(
value = ["org.web3j.corda.codegen.CorDappClientGenerator"],
date = "{{currentDate}}"
)
class {{classname}}Test: DockerBasedIntegrationTest() {

{{#operations}}
{{#flows}}
lateinit var {{#camelcase}}{{inputClass}}{{/camelcase}}: {{inputClass}}

@Test
fun `start the {{#titlecase}}{{#camelcase}}{{flowId}}{{/camelcase}}{{/titlecase}} flow`() {

// TODO Initialize {{#camelcase}}{{inputClass}}{{/camelcase}}

val result = {{classname}}.load(corda)
.flows.{{#camelcase}}{{flowId}}{{/camelcase}}.start({{#camelcase}}{{inputClass}}{{/camelcase}})

// TODO Add assertions 
}
{{/flows}}
{{/operations}}

companion object {

@BeforeAll
@JvmStatic
fun setUp() {
val container = createNodeContainer(
"Notary",
"London",
"GB",
10005,
10006,
10007,
true
).apply {
start()
}

Braid(
port = 9000,
userName = "user1",
password = "test",
nodeAddress = net.corda.core.utilities.NetworkHostAndPort("localhost", container.getMappedPort(10009))
).startServer()

corda = Corda.build(CordaService("http://localhost:9000"))
Thread.sleep(10000)
}
}
}
