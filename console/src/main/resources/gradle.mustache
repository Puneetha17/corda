buildscript {
    Properties constants = new Properties()
    file("constants.properties").withInputStream { constants.load(it) }

    ext {
        corda_release_group = constants.getProperty("cordaReleaseGroup")
        corda_release_version = constants.getProperty("cordaVersion")
        corda_gradle_plugins_version = constants.getProperty("gradlePluginsVersion")
        kotlin_version = constants.getProperty("kotlinVersion")
        junit_version = constants.getProperty("junitVersion")
        quasar_version = constants.getProperty("quasarVersion")
        log4j_version = constants.getProperty("log4jVersion")
        slf4j_version = constants.getProperty("slf4jVersion")
        corda_platform_version = constants.getProperty("platformVersion")
        jersey_version = constants.getProperty("jerseyVersion")
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

apply from: 'repositories.gradle'

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    contract {
        name "{{CorDappName}} CorDapp"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
    workflow {
        name "{{CorDappName}} CorDapp"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"


    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: jersey_version
    implementation group: 'org.glassfish.jersey.core', name: 'jersey-client', version: jersey_version
    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jersey_version
    implementation group: 'org.glassfish.jersey.ext', name: 'jersey-proxy-client', version: jersey_version
    implementation group: 'org.glassfish.jersey.ext', name: 'jersey-bean-validation', version: jersey_version

    implementation 'org.web3j.corda:web3j-corda-core:0.1.0-SNAPSHOT'

    // Corda dependencies.
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    cordaRuntime "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"

    // CorDapp dependencies.
    testImplementation group: 'io.bluebank.braid', name: 'braid-server', version: '4.1.2-SNAPSHOT', changing: true

    testImplementation "org.testcontainers:testcontainers:1.11.2"

    testImplementation 'org.web3j.corda:web3j-corda-common:0.1.0-SNAPSHOT:integrationTest'

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.4.2"
}

jar {
    // CorDapps do not configure a Node's logging.
    exclude '**/log4j2*.xml'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}