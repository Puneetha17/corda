{
  "swagger" : "2.0",
  "info" : {
    "description" : "",
    "version" : "1.0.0",
    "title" : "",
    "contact" : { }
  },
  "host" : "localhost:8080",
  "basePath" : "/api/rest/",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/network/nodes" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "Retrieves all nodes if neither query parameter is supplied. Otherwise returns a list of one node matching the supplied query parameter.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "host-and-port",
          "in" : "query",
          "description" : "[host]:[port] for the Corda P2P of the node",
          "required" : false,
          "type" : "string",
          "minItems" : 0,
          "x-example" : "localhost:10000"
        }, {
          "name" : "x500-name",
          "in" : "query",
          "description" : "the X500 name for the node",
          "required" : false,
          "type" : "string",
          "minItems" : 0,
          "x-example" : "O=PartyB, L=New York, C=US"
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SimpleNodeInfo"
              }
            }
          },
          "200" : {
            "description" : "default response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SimpleNodeInfo"
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/network/notaries" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x500-name",
          "in" : "query",
          "description" : "the X500 name for the node",
          "required" : false,
          "type" : "string",
          "minItems" : 0,
          "x-example" : "O=PartyB, L=New York, C=US"
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Party"
              }
            }
          },
          "200" : {
            "description" : "default response",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Party"
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/network/nodes/self" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "Retrieves all nodes if neither query parameter is supplied. Otherwise returns a list of one node matching the supplied query parameter.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "schema" : {
              "$ref" : "#/definitions/SimpleNodeInfo"
            }
          },
          "200" : {
            "description" : "default response",
            "schema" : {
              "$ref" : "#/definitions/SimpleNodeInfo"
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/flows" : {
      "get" : {
        "tags" : [ "network" ],
        "description" : "Retrieves a list of callable flows. Example [\"net.corda.core.flows.ContractUpgradeFlow$Authorise\"]",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "200" : {
            "description" : "default response",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "500" : {
            "description" : "server failure"
          }
        }
      }
    },
    "/cordapps/sample-cordapp/flows/org.web3j.corda$Sample": {
      "post" : {
        "tags" : [ "network" ],
        "description" : "",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Party"
          }
        } ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    }
  },
  "definitions" : {
    "PartialTree": {
      "type": "object"
    },
    "CoreTransaction": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "networkParametersHash": {
          "$ref": "#/definitions/SecureHash"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "outputStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractState"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionStateContractState"
          }
        },
        "id": {
          "$ref": "#/definitions/SecureHash"
        }
      }
    },
    "PartialMerkleTree": {
      "type": "object",
      "properties": {
        "root": {
          "$ref": "#/definitions/PartialTree"
        }
      }
    },
    "SignatureMetadata": {
      "type": "object",
      "properties": {
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "schemeNumberID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PublicKey": {
      "type": "object",
      "properties": {
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "algorithm": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "TransactionSignature": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "bytes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "by": {
          "$ref": "#/definitions/PublicKey"
        },
        "signatureMetadata": {
          "$ref": "#/definitions/SignatureMetadata"
        },
        "partialMerkleTree": {
          "$ref": "#/definitions/PartialMerkleTree"
        }
      }
    },
    "NotaryChangeWireTransaction": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "newNotary": {
          "$ref": "#/definitions/Party"
        },
        "serializedComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpaqueBytes"
          }
        },
        "id": {
          "$ref": "#/definitions/SecureHash"
        },
        "networkParametersHash": {
          "$ref": "#/definitions/SecureHash"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionStateContractState"
          }
        },
        "outputStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractState"
          }
        }
      }
    },
    "SecureHash": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "bytes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "WireTransaction": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecureHash"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionStateContractState"
          }
        },
        "commands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandObject"
          }
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "timeWindow": {
          "$ref": "#/definitions/TimeWindow"
        },
        "networkParametersHash": {
          "$ref": "#/definitions/SecureHash"
        },
        "componentGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentGroup"
          }
        },
        "privacySalt": {
          "$ref": "#/definitions/PrivacySalt"
        },
        "id": {
          "$ref": "#/definitions/SecureHash"
        },
        "requiredSigningKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PublicKey"
          }
        },
        "merkleTree": {
          "$ref": "#/definitions/MerkleTree"
        },
        "groupHashes$core": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecureHash"
          }
        },
        "groupsMerkleRoots$core": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SecureHash"
          }
        },
        "availableComponentNonces$core": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SecureHash"
            }
          }
        },
        "availableComponentHashes$core": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SecureHash"
            }
          }
        },
        "availableComponentGroups": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "outputStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractState"
          }
        }
      }
    },
    "SerializedBytesCoreTransaction": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "bytes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "hash": {
          "$ref": "#/definitions/SecureHash"
        }
      }
    },
    "SignedTransaction": {
      "type": "object",
      "properties": {
        "txBits": {
          "$ref": "#/definitions/SerializedBytesCoreTransaction"
        },
        "sigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionSignature"
          }
        },
        "id": {
          "$ref": "#/definitions/SecureHash"
        },
        "tx": {
          "$ref": "#/definitions/WireTransaction"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "networkParametersHash": {
          "$ref": "#/definitions/SecureHash"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "requiredSigningKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PublicKey"
          }
        },
        "coreTransaction": {
          "$ref": "#/definitions/CoreTransaction"
        },
        "notaryChangeTx": {
          "$ref": "#/definitions/NotaryChangeWireTransaction"
        },
        "notaryChangeTransaction": {
          "type": "boolean"
        },
        "missingSigners": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PublicKey"
          }
        }
      }
    },
    "NetworkHostAndPort" : {
      "type" : "object",
      "properties" : {
        "host" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Party" : {
      "type" : "object",
      "properties" : {
        "owningKey" : {
          "type" : "string",
          "description" : "Base 58 Encoded Public Key"
        },
        "name" : {
          "type" : "string",
          "description" : "CordaX500Name encoded Party"
        }
      }
    },
    "SimpleNodeInfo" : {
      "type" : "object",
      "properties" : {
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkHostAndPort"
          }
        },
        "legalIdentities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Party"
          }
        }
      }
    },
    "AbstractParty" : {
      "type" : "object",
      "properties" : {
        "owningKey" : {
          "type" : "string",
          "description" : "Base 58 Encoded Public Key"
        }
      }
    },
    "AttachmentConstraint" : {
      "type" : "object"
    },
    "ContractState" : {
      "type" : "object",
      "properties" : {
        "participants" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AbstractParty"
          }
        }
      }
    },
    "ContractUpgradeFlow_AuthorisePayload" : {
      "type" : "object",
      "properties" : {
        "stateAndRef" : {
          "$ref" : "#/definitions/StateAndRefObject"
        }
      }
    },
    "StateAndRef" : {
      "type" : "object",
      "properties" : {
        "state" : {
          "$ref" : "#/definitions/TransactionStateContractState"
        },
        "ref" : {
          "$ref" : "#/definitions/StateRef"
        }
      }
    },
    "StateAndRefObject" : {
      "type" : "object",
      "properties" : {
        "state" : {
          "$ref" : "#/definitions/TransactionStateObject"
        },
        "ref" : {
          "$ref" : "#/definitions/StateRef"
        }
      }
    },
    "StateRef" : {
      "type" : "object",
      "properties" : {
        "txhash" : {
          "type" : "string",
          "description" : "Base 58 Encoded Secure Hash"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TransactionState" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ContractState"
        },
        "contract" : {
          "type" : "string"
        },
        "notary" : {
          "$ref" : "#/definitions/Party"
        },
        "encumbrance" : {
          "type" : "integer",
          "format" : "int32"
        },
        "constraint" : {
          "$ref" : "#/definitions/AttachmentConstraint"
        }
      }
    },
    "TransactionStateContractState" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ContractState"
        },
        "contract" : {
          "type" : "string"
        },
        "notary" : {
          "$ref" : "#/definitions/Party"
        },
        "encumbrance" : {
          "type" : "integer",
          "format" : "int32"
        },
        "constraint" : {
          "$ref" : "#/definitions/AttachmentConstraint"
        }
      }
    },
    "TransactionStateObject" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object"
        },
        "contract" : {
          "type" : "string"
        },
        "notary" : {
          "$ref" : "#/definitions/Party"
        },
        "encumbrance" : {
          "type" : "integer",
          "format" : "int32"
        },
        "constraint" : {
          "$ref" : "#/definitions/AttachmentConstraint"
        }
      }
    },
    "ContractUpgradeFlow_DeauthorisePayload" : {
      "type" : "object",
      "properties" : {
        "stateRef" : {
          "$ref" : "#/definitions/StateRef"
        }
      }
    }
  }
}