{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "",
    "contact": {}
  },
  "host": "localhost:8080",
  "basePath": "/api/rest/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/network/nodes": {
      "get": {
        "tags": [
          "network"
        ],
        "description": "Retrieves all nodes if neither query parameter is supplied. Otherwise returns a list of one node matching the supplied query parameter.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host-and-port",
            "in": "query",
            "description": "[host]:[port] for the Corda P2P of the node",
            "required": false,
            "type": "string",
            "minItems": 0,
            "x-example": "localhost:10000"
          },
          {
            "name": "x500-name",
            "in": "query",
            "description": "the X500 name for the node",
            "required": false,
            "type": "string",
            "minItems": 0,
            "x-example": "O=PartyB, L=New York, C=US"
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleNodeInfo"
              }
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SimpleNodeInfo"
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/network/notaries": {
      "get": {
        "tags": [
          "network"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x500-name",
            "in": "query",
            "description": "the X500 name for the node",
            "required": false,
            "type": "string",
            "minItems": 0,
            "x-example": "O=PartyB, L=New York, C=US"
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Party"
              }
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Party"
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/network/nodes/self": {
      "get": {
        "tags": [
          "network"
        ],
        "description": "Retrieves all nodes if neither query parameter is supplied. Otherwise returns a list of one node matching the supplied query parameter.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SimpleNodeInfo"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SimpleNodeInfo"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/flows": {
      "get": {
        "tags": [
          "cordapps"
        ],
        "description": "Retrieves a list of callable flows. Example [\"net.corda.core.flows.ContractUpgradeFlow$Authorise\"]",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Authorise": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractUpgradeFlow_AuthorisePayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "empty response"
          },
          "200": {
            "description": "empty response"
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Deauthorise": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractUpgradeFlow_DeauthorisePayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "empty response"
          },
          "200": {
            "description": "empty response"
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Initiate": {},
    "/cordapps/obligation/flows/net.corda.examples.obligation.flows.IssueObligation$Initiator": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueObligation_InitiatorPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/obligation/flows/net.corda.examples.obligation.flows.SettleObligation$Initiator": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SettleObligation_InitiatorPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/obligation/flows/net.corda.examples.obligation.flows.TransferObligation$Initiator": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferObligation_InitiatorPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/SignedTransaction"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashExitFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashExitFlowPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueAndPaymentFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashIssueAndPaymentFlowPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashIssueFlowPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashPaymentFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashPaymentFlowPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.internal.CashConfigDataFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashConfigDataFlowPayload"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/CashConfiguration"
            }
          },
          "200": {
            "description": "default response",
            "schema": {
              "$ref": "#/definitions/CashConfiguration"
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    }
  },
  "definitions": {
    "NetworkHostAndPort": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Party": {
      "type": "object",
      "properties": {
        "owningKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        },
        "name": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        }
      }
    },
    "SimpleNodeInfo": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostAndPort"
          }
        },
        "legalIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        }
      }
    },
    "AbstractParty": {
      "type": "object",
      "properties": {
        "owningKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "AttachmentConstraint": {
      "type": "object"
    },
    "ContractState": {
      "type": "object",
      "properties": {
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        }
      }
    },
    "ContractUpgradeFlow_AuthorisePayload": {
      "type": "object",
      "properties": {
        "stateAndRef": {
          "$ref": "#/definitions/StateAndRefObject"
        }
      }
    },
    "StateAndRef": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/TransactionStateContractState"
        },
        "ref": {
          "$ref": "#/definitions/StateRef"
        }
      }
    },
    "StateAndRefObject": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/TransactionStateObject"
        },
        "ref": {
          "$ref": "#/definitions/StateRef"
        }
      }
    },
    "StateRef": {
      "type": "object",
      "properties": {
        "txhash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TransactionState": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ContractState"
        },
        "contract": {
          "type": "string"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "encumbrance": {
          "type": "integer",
          "format": "int32"
        },
        "constraint": {
          "$ref": "#/definitions/AttachmentConstraint"
        }
      }
    },
    "TransactionStateContractState": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ContractState"
        },
        "contract": {
          "type": "string"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "encumbrance": {
          "type": "integer",
          "format": "int32"
        },
        "constraint": {
          "$ref": "#/definitions/AttachmentConstraint"
        }
      }
    },
    "TransactionStateObject": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "contract": {
          "type": "string"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "encumbrance": {
          "type": "integer",
          "format": "int32"
        },
        "constraint": {
          "$ref": "#/definitions/AttachmentConstraint"
        }
      }
    },
    "ContractUpgradeFlow_DeauthorisePayload": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/StateRef"
        }
      }
    },
    "Command": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/CommandData"
        },
        "signers": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "CommandData": {
      "type": "object"
    },
    "CommandObject": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "signers": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "ComponentGroup": {
      "type": "object",
      "properties": {
        "groupIndex": {
          "type": "integer",
          "format": "int32"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "736F6D654279746573",
            "description": "Hex encoded Byte Array"
          }
        }
      }
    },
    "CoreTransaction": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "networkParametersHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionStateContractState"
          }
        },
        "outputStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractState"
          }
        },
        "id": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "Duration": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "integer",
          "format": "int64"
        },
        "units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemporalUnit"
          }
        },
        "negative": {
          "type": "boolean"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "zero": {
          "type": "boolean"
        }
      }
    },
    "MerkleTree": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "NotaryChangeWireTransaction": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "newNotary": {
          "$ref": "#/definitions/Party"
        },
        "serializedComponents": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "736F6D654279746573",
            "description": "Hex encoded Byte Array"
          }
        },
        "id": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "networkParametersHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionStateContractState"
          }
        },
        "outputStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractState"
          }
        }
      }
    },
    "SignedTransaction": {
      "type": "object",
      "properties": {
        "txBits": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "sigs": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "736F6D654279746573",
            "description": "Hex encoded Byte Array"
          }
        },
        "id": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "tx": {
          "$ref": "#/definitions/WireTransaction"
        },
        "coreTransaction": {
          "$ref": "#/definitions/CoreTransaction"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "networkParametersHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "requiredSigningKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        },
        "notaryChangeTx": {
          "$ref": "#/definitions/NotaryChangeWireTransaction"
        },
        "notaryChangeTransaction": {
          "type": "boolean"
        },
        "missingSigners": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "TemporalUnit": {
      "type": "object",
      "properties": {
        "dateBased": {
          "type": "boolean"
        },
        "timeBased": {
          "type": "boolean"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "durationEstimated": {
          "type": "boolean"
        }
      }
    },
    "TimeWindow": {
      "type": "object",
      "properties": {
        "length": {
          "$ref": "#/definitions/Duration"
        },
        "untilTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "midpoint": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WireTransaction": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionStateContractState"
          }
        },
        "commands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandObject"
          }
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "timeWindow": {
          "$ref": "#/definitions/TimeWindow"
        },
        "networkParametersHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "componentGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentGroup"
          }
        },
        "privacySalt": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "id": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "requiredSigningKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        },
        "merkleTree": {
          "$ref": "#/definitions/MerkleTree"
        },
        "groupHashes$core": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "groupsMerkleRoots$core": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "availableComponentNonces$core": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
              "description": "Base 58 Encoded Secure Hash"
            }
          }
        },
        "availableComponentHashes$core": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
              "description": "Base 58 Encoded Secure Hash"
            }
          }
        },
        "availableComponentGroups": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "outputStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractState"
          }
        }
      }
    },
    "AmountCurrency": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "total amount in minor units"
        },
        "displayTokenSize": {
          "type": "number",
          "example": 0.01
        },
        "token": {
          "type": "string",
          "example": "GBP"
        }
      }
    },
    "IssueObligation_InitiatorPayload": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "lender": {
          "$ref": "#/definitions/Party"
        },
        "anonymous": {
          "type": "boolean"
        }
      }
    },
    "SettleObligation_InitiatorPayload": {
      "type": "object",
      "properties": {
        "linearId": {
          "$ref": "#/definitions/UniqueIdentifier"
        },
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "anonymous": {
          "type": "boolean"
        }
      }
    },
    "UniqueIdentifier": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "TransferObligation_InitiatorPayload": {
      "type": "object",
      "properties": {
        "linearId": {
          "$ref": "#/definitions/UniqueIdentifier"
        },
        "newLender": {
          "$ref": "#/definitions/Party"
        },
        "anonymous": {
          "type": "boolean"
        }
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "stx": {
          "$ref": "#/definitions/SignedTransaction"
        },
        "recipient": {
          "$ref": "#/definitions/AbstractParty"
        }
      }
    },
    "CashExitFlowPayload": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "issuerRef": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "CashIssueAndPaymentFlowPayload": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "issueRef": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "recipient": {
          "$ref": "#/definitions/Party"
        },
        "anonymous": {
          "type": "boolean"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "CashIssueFlowPayload": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "issuerBankPartyRef": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "CashPaymentFlowPayload": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "recipient": {
          "$ref": "#/definitions/Party"
        },
        "anonymous": {
          "type": "boolean"
        },
        "issuerConstraint": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "notary": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "CashConfiguration": {
      "type": "object",
      "properties": {
        "issuableCurrencies": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GBP",
            "description": "3 digit ISO 4217 code of the currency"
          }
        },
        "supportedCurrencies": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GBP",
            "description": "3 digit ISO 4217 code of the currency"
          }
        }
      }
    },
    "CashConfigDataFlowPayload": {
      "type": "object"
    },
    "CommonCliConstants": {
      "type": "object"
    },
    "CordaSystemUtils": {
      "type": "object",
      "properties": {
        "osWindows": {
          "type": "boolean"
        },
        "osName": {
          "type": "string"
        },
        "osMac": {
          "type": "boolean"
        }
      }
    },
    "CordaVersionProvider": {
      "type": "object",
      "properties": {
        "version": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExitCodes": {
      "type": "object"
    },
    "InstallShellExtensionsParser": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "LoggingLevelConverter": {
      "type": "object"
    },
    "ShellConstants": {
      "type": "object"
    },
    "DefaultImpls": {
      "type": "object"
    },
    "CordaVersion": {
      "type": "object",
      "properties": {
        "version": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ErrorCodeRewritePolicy": {
      "type": "object"
    },
    "CertificateOwnershipAssertion": {
      "type": "object",
      "properties": {
        "x500Name": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        },
        "publicKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "IdentitySyncFlow": {
      "type": "object"
    },
    "Observable": {
      "type": "object"
    },
    "ObservableChange": {
      "type": "object"
    },
    "RECEIVING_CERTIFICATES": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RECEIVING_IDENTITIES": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SYNCING_IDENTITIES": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "SwapIdentitiesException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "AWAITING_IDENTITY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GENERATING_IDENTITY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SIGNING_IDENTITY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VERIFYING_IDENTITY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IdentityWithSignature": {
      "type": "object",
      "properties": {
        "identity": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "signature": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "Utils": {
      "type": "object"
    },
    "ConcurrencyUtils": {
      "type": "object"
    },
    "Actor": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/Id"
        },
        "serviceId": {
          "$ref": "#/definitions/AuthServiceId"
        },
        "owningLegalIdentity": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        }
      }
    },
    "AuthServiceId": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "Id": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "InvocationContext": {
      "type": "object",
      "properties": {
        "writer": {
          "$ref": "#/definitions/RenderPrintWriter"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "session": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "InvocationId": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InvocationOrigin": {
      "type": "object"
    },
    "SessionId": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Trace": {
      "type": "object",
      "properties": {
        "invocationId": {
          "$ref": "#/definitions/InvocationId"
        },
        "sessionId": {
          "$ref": "#/definitions/SessionId"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "party": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        }
      }
    },
    "RPC": {
      "type": "object",
      "properties": {
        "actor": {
          "$ref": "#/definitions/Actor"
        }
      }
    },
    "Scheduled": {
      "type": "object",
      "properties": {
        "scheduledState": {
          "$ref": "#/definitions/ScheduledStateRef"
        }
      }
    },
    "ScheduledStateRef": {
      "type": "object",
      "properties": {
        "ref": {
          "$ref": "#/definitions/StateRef"
        },
        "scheduledAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "serviceClassName": {
          "type": "string"
        },
        "owningLegalIdentity": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        }
      }
    },
    "Shell": {
      "type": "object"
    },
    "AmountTransfer": {
      "type": "object",
      "properties": {
        "quantityDelta": {
          "type": "integer",
          "format": "int64"
        },
        "token": {
          "type": "object"
        },
        "source": {
          "type": "object"
        },
        "destination": {
          "type": "object"
        }
      }
    },
    "Amount": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "total amount in minor units"
        },
        "displayTokenSize": {
          "type": "number",
          "example": 0.01
        },
        "token": {
          "type": "string",
          "example": "GBP"
        },
        "_tokenType": {
          "type": "string",
          "example": "net.corda.core.contracts.Issued"
        }
      }
    },
    "InsufficientBalanceException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "amountMissing": {
          "$ref": "#/definitions/Amount"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "LinearPointer": {
      "type": "object",
      "properties": {
        "pointer": {
          "$ref": "#/definitions/UniqueIdentifier"
        }
      }
    },
    "ReferencedStateAndRef": {
      "type": "object",
      "properties": {
        "stateAndRef": {
          "$ref": "#/definitions/StateAndRefContractState"
        }
      }
    },
    "StateAndRefContractState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/TransactionStateContractState"
        },
        "ref": {
          "$ref": "#/definitions/StateRef"
        }
      }
    },
    "SourceAndAmount": {
      "type": "object",
      "properties": {
        "source": {
          "type": "object"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "ref": {
          "type": "object"
        }
      }
    },
    "StaticPointer": {
      "type": "object",
      "properties": {
        "pointer": {
          "$ref": "#/definitions/StateRef"
        }
      }
    },
    "UnknownParametersException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "hash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "InvalidAttachmentException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "txId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "attachmentHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "PackageOwnershipException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "txId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "attachmentHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "invalidClassName": {
          "type": "string"
        },
        "packageName": {
          "type": "string"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "AddressFormatException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "ByteArrayOutputStream": {
      "type": "object"
    },
    "State": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "exitKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        },
        "dueBefore": {
          "type": "integer",
          "format": "int64"
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "owner": {
          "$ref": "#/definitions/AbstractParty"
        },
        "lifecycle": {
          "type": "string",
          "enum": [
            "NORMAL",
            "DEFAULTED"
          ]
        },
        "obligor": {
          "$ref": "#/definitions/AbstractParty"
        },
        "template": {
          "$ref": "#/definitions/TermsObject"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "beneficiary": {
          "$ref": "#/definitions/AbstractParty"
        },
        "bilateralNetState": {
          "$ref": "#/definitions/BilateralNetStateObject"
        },
        "multilateralNetState": {
          "$ref": "#/definitions/MultilateralNetStateObject"
        }
      }
    },
    "NullPublicKey": {
      "type": "object",
      "properties": {
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "algorithm": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "SHA256": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "bytes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "AliasPrivateKey": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "algorithm": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "destroyed": {
          "type": "boolean"
        }
      }
    },
    "Instances": {
      "type": "object"
    },
    "APPROVING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VERIFYING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NOTARY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SIGNING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Proposal": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/StateRef"
        },
        "modification": {
          "type": "object"
        }
      }
    },
    "UpgradeTx": {
      "type": "object",
      "properties": {
        "stx": {
          "$ref": "#/definitions/SignedTransaction"
        }
      }
    },
    "COLLECTING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ContractUpgradeFlow": {
      "type": "object"
    },
    "DataVendingFlow$WhenMappings": {
      "type": "object"
    },
    "BROADCASTING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NOTARISING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FlowException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "FlowInfo": {
      "type": "object",
      "properties": {
        "flowVersion": {
          "type": "integer",
          "format": "int32"
        },
        "appName": {
          "type": "string"
        }
      }
    },
    "FlowStackSnapshot": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "flowClass": {
          "type": "string"
        },
        "stackFrames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Frame"
          }
        }
      }
    },
    "Frame": {
      "type": "object",
      "properties": {
        "stackTraceElement": {
          "$ref": "#/definitions/StackTraceElement"
        },
        "stackObjects": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "IllegalFlowLogicException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "NotarisationPayload": {
      "type": "object",
      "properties": {
        "transaction": {
          "type": "object"
        },
        "requestSignature": {
          "$ref": "#/definitions/NotarisationRequestSignature"
        },
        "coreTransaction": {
          "$ref": "#/definitions/CoreTransaction"
        },
        "signedTransaction": {
          "$ref": "#/definitions/SignedTransaction"
        }
      }
    },
    "NotarisationRequestSignature": {
      "type": "object",
      "properties": {
        "digitalSignature": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NotarisationRequest": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "statesToConsume": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        }
      }
    },
    "NotarisationResponse": {
      "type": "object",
      "properties": {
        "signatures": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "736F6D654279746573",
            "description": "Hex encoded Byte Array"
          }
        }
      }
    },
    "Conflict": {
      "type": "object",
      "properties": {
        "txId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "consumedStates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StateConsumptionDetails"
          }
        }
      }
    },
    "StateConsumptionDetails": {
      "type": "object",
      "properties": {
        "hashOfTransactionId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "type": {
          "type": "string",
          "enum": [
            "INPUT_STATE",
            "REFERENCE_INPUT_STATE"
          ]
        }
      }
    },
    "General": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "RequestSignatureInvalid": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "TimeWindowInvalid": {
      "type": "object",
      "properties": {
        "currentTime": {
          "type": "integer",
          "format": "int64"
        },
        "txTimeWindow": {
          "$ref": "#/definitions/TimeWindow"
        }
      }
    },
    "TransactionInvalid": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "WrongNotary": {
      "type": "object"
    },
    "NotaryError": {
      "type": "object"
    },
    "NotaryException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "error": {
          "$ref": "#/definitions/NotaryError"
        },
        "txId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "NotaryFlow": {
      "type": "object"
    },
    "AttachmentStorage": {
      "type": "object"
    },
    "CertPath": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        },
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "encodings": {
          "$ref": "#/definitions/IteratorString"
        }
      }
    },
    "CertStore": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "certStoreParameters": {
          "$ref": "#/definitions/CertStoreParameters"
        }
      }
    },
    "CertStoreParameters": {
      "type": "object"
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "publicKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "ClassLoader": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/ClassLoader"
        }
      }
    },
    "Client": {
      "type": "object"
    },
    "Clock": {
      "type": "object",
      "properties": {
        "zone": {
          "$ref": "#/definitions/ZoneId"
        }
      }
    },
    "ContractUpgradeService": {
      "type": "object"
    },
    "CordaFuture": {
      "type": "object",
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "CordaFutureObject": {
      "type": "object",
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "CordaFutureVoid": {
      "type": "object",
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "Cordapp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "services": {
          "type": "array"
        },
        "info": {
          "$ref": "#/definitions/Info"
        },
        "targetPlatformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "rpcFlows": {
          "type": "array"
        },
        "serializationWhitelists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SerializationWhitelist"
          }
        },
        "initiatedFlows": {
          "type": "array"
        },
        "minimumPlatformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "jarHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "allFlows": {
          "type": "array"
        },
        "jarPath": {
          "type": "string",
          "format": "url"
        },
        "contractClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cordappClasses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schedulableFlows": {
          "type": "array"
        },
        "customSchemas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MappedSchema"
          }
        },
        "serviceFlows": {
          "type": "array"
        },
        "serializationCustomSerializers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SerializationCustomSerializerObjectObject"
          }
        }
      }
    },
    "CordappConfig": {
      "type": "object"
    },
    "CordappContext": {
      "type": "object",
      "properties": {
        "cordapp": {
          "$ref": "#/definitions/Cordapp"
        },
        "attachmentId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "classLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "config": {
          "$ref": "#/definitions/CordappConfig"
        }
      }
    },
    "CordappProvider": {
      "type": "object",
      "properties": {
        "appContext": {
          "$ref": "#/definitions/CordappContext"
        }
      }
    },
    "FlowLogic": {
      "type": "object",
      "properties": {
        "progressTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHub"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "ourIdentityAndCert": {
          "$ref": "#/definitions/PartyAndCertificate"
        },
        "runId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "FlowLogicObject": {
      "type": "object",
      "properties": {
        "progressTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHub"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "ourIdentityAndCert": {
          "$ref": "#/definitions/PartyAndCertificate"
        },
        "runId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "FlowStateMachine": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHub"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "logic": {
          "$ref": "#/definitions/FlowLogicObject"
        },
        "resultFuture": {
          "$ref": "#/definitions/CordaFutureObject"
        },
        "ourSenderUUID": {
          "type": "string"
        }
      }
    },
    "FlowStateMachineObject": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHub"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "logic": {
          "$ref": "#/definitions/FlowLogicObject"
        },
        "resultFuture": {
          "$ref": "#/definitions/CordaFutureObject"
        },
        "ourSenderUUID": {
          "type": "string"
        }
      }
    },
    "IdentityService": {
      "type": "object",
      "properties": {
        "caCertStore": {
          "$ref": "#/definitions/CertStore"
        },
        "trustAnchor": {
          "$ref": "#/definitions/TrustAnchor"
        },
        "allIdentities": {
          "$ref": "#/definitions/IterablePartyAndCertificate"
        },
        "trustRoot": {
          "$ref": "#/definitions/X509Certificate"
        }
      }
    },
    "Info": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "licence": {
          "type": "string"
        }
      }
    },
    "Iterable": {
      "type": "object"
    },
    "IterableClass": {
      "type": "object"
    },
    "IterablePartyAndCertificate": {
      "type": "object"
    },
    "Iterator": {
      "type": "object"
    },
    "IteratorString": {
      "type": "object"
    },
    "KeyManagementService": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "LocalTime": {
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Logger": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "handlers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Handler"
          }
        },
        "useParentHandlers": {
          "type": "boolean"
        },
        "filter": {
          "$ref": "#/definitions/Filter"
        },
        "parent": {
          "$ref": "#/definitions/Logger"
        },
        "level": {
          "$ref": "#/definitions/Level"
        },
        "resourceBundleName": {
          "type": "string"
        },
        "resourceBundle": {
          "$ref": "#/definitions/ResourceBundle"
        }
      }
    },
    "MappedSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "NetworkMapCache": {
      "type": "object",
      "properties": {
        "notaryIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "nodeReady": {
          "$ref": "#/definitions/CordaFutureVoid"
        },
        "changed": {
          "$ref": "#/definitions/ObservableMapChange"
        },
        "allNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInfo"
          }
        }
      }
    },
    "NetworkParameters": {
      "type": "object",
      "properties": {
        "minimumPlatformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "notaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotaryInfo"
          }
        },
        "maxMessageSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxTransactionSize": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "epoch": {
          "type": "integer",
          "format": "int32"
        },
        "whitelistedContractImplementations": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
              "description": "Base 58 Encoded Secure Hash"
            }
          }
        },
        "eventHorizon": {
          "$ref": "#/definitions/Duration"
        },
        "packageOwnership": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "NetworkParametersService": {
      "type": "object",
      "properties": {
        "defaultHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "currentHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "NodeInfo": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostAndPort"
          }
        },
        "legalIdentitiesAndCerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyAndCertificate"
          }
        },
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "serial": {
          "type": "integer",
          "format": "int64"
        },
        "legalIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        }
      }
    },
    "NotaryInfo": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/Party"
        },
        "validating": {
          "type": "boolean"
        }
      }
    },
    "ObservableInteger": {
      "type": "object"
    },
    "ObservableListPairIntegerString": {
      "type": "object"
    },
    "ObservableMapChange": {
      "type": "object"
    },
    "ObservableSignedTransaction": {
      "type": "object"
    },
    "ObservableUpdateContractState": {
      "type": "object"
    },
    "Pair": {
      "type": "object",
      "properties": {
        "first": {
          "type": "object"
        },
        "second": {
          "type": "object"
        }
      }
    },
    "PairIntegerStep": {
      "type": "object",
      "properties": {
        "first": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "$ref": "#/definitions/Step"
        }
      }
    },
    "PairIntegerString": {
      "type": "object",
      "properties": {
        "first": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "string"
        }
      }
    },
    "PartyAndCertificate": {
      "type": "object",
      "properties": {
        "certificate": {
          "$ref": "#/definitions/X509Certificate"
        },
        "party": {
          "$ref": "#/definitions/Party"
        },
        "certPath": {
          "$ref": "#/definitions/CertPath"
        },
        "name": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        },
        "owningKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "Principal": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ProgressTracker": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          }
        },
        "stepIndex": {
          "type": "integer",
          "format": "int32"
        },
        "stepsTreeIndex": {
          "type": "integer",
          "format": "int32"
        },
        "parent": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "currentStep": {
          "$ref": "#/definitions/Step"
        },
        "allStepsLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PairIntegerString"
          }
        },
        "stepsTreeChanges": {
          "$ref": "#/definitions/ObservableListPairIntegerString"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "stepsTreeIndexChanges": {
          "$ref": "#/definitions/ObservableInteger"
        },
        "hasEnded": {
          "type": "boolean"
        },
        "currentStepRecursive": {
          "$ref": "#/definitions/Step"
        },
        "topLevelTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "allSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PairIntegerStep"
          }
        }
      }
    },
    "SerializationCustomSerializer": {
      "type": "object"
    },
    "SerializationCustomSerializerObjectObject": {
      "type": "object"
    },
    "SerializationWhitelist": {
      "type": "object",
      "properties": {
        "whitelist": {
          "type": "array"
        }
      }
    },
    "ServiceHub": {
      "type": "object",
      "properties": {
        "networkMapCache": {
          "$ref": "#/definitions/NetworkMapCache"
        },
        "keyManagementService": {
          "$ref": "#/definitions/KeyManagementService"
        },
        "contractUpgradeService": {
          "$ref": "#/definitions/ContractUpgradeService"
        },
        "clock": {
          "$ref": "#/definitions/Clock"
        },
        "validatedTransactions": {
          "$ref": "#/definitions/TransactionStorage"
        },
        "transactionVerifierService": {
          "$ref": "#/definitions/TransactionVerifierService"
        },
        "vaultService": {
          "$ref": "#/definitions/VaultService"
        },
        "myInfo": {
          "$ref": "#/definitions/NodeInfo"
        },
        "appContext": {
          "$ref": "#/definitions/CordappContext"
        },
        "networkParametersService": {
          "$ref": "#/definitions/NetworkParametersService"
        },
        "attachments": {
          "$ref": "#/definitions/AttachmentStorage"
        },
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProvider"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "StateMachineRunId": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Step": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PairStringDiffTree"
          }
        }
      }
    },
    "TransactionStorage": {
      "type": "object",
      "properties": {
        "updates": {
          "$ref": "#/definitions/ObservableSignedTransaction"
        }
      }
    },
    "TransactionVerifierService": {
      "type": "object"
    },
    "TrustAnchor": {
      "type": "object",
      "properties": {
        "trustedCert": {
          "$ref": "#/definitions/X509Certificate"
        },
        "ca": {
          "$ref": "#/definitions/X500Principal"
        },
        "caname": {
          "type": "string"
        },
        "capublicKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        },
        "nameConstraints": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "VaultService": {
      "type": "object",
      "properties": {
        "updates": {
          "$ref": "#/definitions/ObservableUpdateContractState"
        },
        "rawUpdates": {
          "$ref": "#/definitions/ObservableUpdateContractState"
        }
      }
    },
    "X500Principal": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "X509Certificate": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "subjectX500Principal": {
          "$ref": "#/definitions/X500Principal"
        },
        "issuerX500Principal": {
          "$ref": "#/definitions/X500Principal"
        },
        "signature": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "basicConstraints": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "issuerDN": {
          "$ref": "#/definitions/Principal"
        },
        "subjectDN": {
          "$ref": "#/definitions/Principal"
        },
        "serialNumber": {
          "type": "integer"
        },
        "tbscertificate": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "extendedKeyUsage": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notBefore": {
          "type": "string",
          "format": "date-time"
        },
        "notAfter": {
          "type": "string",
          "format": "date-time"
        },
        "sigAlgName": {
          "type": "string"
        },
        "sigAlgOID": {
          "type": "string"
        },
        "sigAlgParams": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "issuerUniqueID": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "subjectUniqueID": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "keyUsage": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "subjectAlternativeNames": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "issuerAlternativeNames": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "criticalExtensionOIDs": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "nonCriticalExtensionOIDs": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "publicKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "ZoneId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        }
      }
    },
    "ZoneOffset": {
      "type": "object",
      "properties": {
        "totalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        }
      }
    },
    "ZoneOffsetTransition": {
      "type": "object",
      "properties": {
        "offsetBefore": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetAfter": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "dateTimeBefore": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "gap": {
          "type": "boolean"
        },
        "overlap": {
          "type": "boolean"
        },
        "dateTimeAfter": {
          "type": "string",
          "format": "date-time"
        },
        "instant": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ZoneOffsetTransitionRule": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "timeDefinition": {
          "type": "string",
          "enum": [
            "UTC",
            "WALL",
            "STANDARD"
          ]
        },
        "standardOffset": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetBefore": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetAfter": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOfMonthIndicator": {
          "type": "integer",
          "format": "int32"
        },
        "localTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "midnightEndOfDay": {
          "type": "boolean"
        }
      }
    },
    "ZoneRules": {
      "type": "object",
      "properties": {
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransition"
          }
        },
        "transitionRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransitionRule"
          }
        },
        "fixedOffset": {
          "type": "boolean"
        }
      }
    },
    "REQUESTING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VALIDATING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RECEIVING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "StackFrameDataToken": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        }
      }
    },
    "StateReplacementException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "UnexpectedFlowEndException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "WaitTimeUpdate": {
      "type": "object",
      "properties": {
        "waitTime": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "ATTEMPT": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RETRYING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SUCCESS": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IdentityUtils": {
      "type": "object"
    },
    "ClientRpcSslOptions": {
      "type": "object",
      "properties": {
        "trustStorePath": {
          "$ref": "#/definitions/Path"
        },
        "trustStorePassword": {
          "type": "string"
        },
        "trustStoreProvider": {
          "type": "string"
        }
      }
    },
    "FileSystem": {
      "type": "object",
      "properties": {
        "separator": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "rootDirectories": {
          "$ref": "#/definitions/IterablePath"
        },
        "fileStores": {
          "$ref": "#/definitions/IterableFileStore"
        },
        "userPrincipalLookupService": {
          "$ref": "#/definitions/UserPrincipalLookupService"
        }
      }
    },
    "IterableFileStore": {
      "type": "object"
    },
    "IterablePath": {
      "type": "object"
    },
    "Path": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/Path"
        },
        "absolute": {
          "type": "boolean"
        },
        "root": {
          "$ref": "#/definitions/Path"
        },
        "fileSystem": {
          "$ref": "#/definitions/FileSystem"
        },
        "fileName": {
          "$ref": "#/definitions/Path"
        },
        "nameCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserPrincipalLookupService": {
      "type": "object"
    },
    "DataFeed": {
      "type": "object",
      "properties": {
        "snapshot": {
          "type": "object"
        },
        "updates": {
          "$ref": "#/definitions/ObservableObject"
        }
      }
    },
    "ObservableObject": {
      "type": "object"
    },
    "FlowHandleImpl": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "returnValue": {
          "$ref": "#/definitions/CordaFutureObject"
        }
      }
    },
    "DataFeedIntegerInteger": {
      "type": "object",
      "properties": {
        "snapshot": {
          "type": "integer",
          "format": "int32"
        },
        "updates": {
          "$ref": "#/definitions/ObservableInteger"
        }
      }
    },
    "DataFeedListPairIntegerStringListPairIntegerString": {
      "type": "object",
      "properties": {
        "snapshot": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PairIntegerString"
          }
        },
        "updates": {
          "$ref": "#/definitions/ObservableListPairIntegerString"
        }
      }
    },
    "FlowProgressHandleImpl": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "returnValue": {
          "$ref": "#/definitions/CordaFutureObject"
        },
        "progress": {
          "$ref": "#/definitions/ObservableString"
        },
        "stepsTreeIndexFeed": {
          "$ref": "#/definitions/DataFeedIntegerInteger"
        },
        "stepsTreeFeed": {
          "$ref": "#/definitions/DataFeedListPairIntegerStringListPairIntegerString"
        }
      }
    },
    "ObservableString": {
      "type": "object"
    },
    "ParametersUpdateInfo": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "parameters": {
          "$ref": "#/definitions/NetworkParameters"
        },
        "description": {
          "type": "string"
        },
        "updateDeadline": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DataFeedStringString": {
      "type": "object",
      "properties": {
        "snapshot": {
          "type": "string"
        },
        "updates": {
          "$ref": "#/definitions/ObservableString"
        }
      }
    },
    "FlowInitiator": {
      "type": "object",
      "properties": {
        "invocationContext": {
          "$ref": "#/definitions/InvocationContext"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "StateMachineInfo": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "flowLogicClassName": {
          "type": "string"
        },
        "initiator": {
          "$ref": "#/definitions/FlowInitiator"
        },
        "progressTrackerStepAndUpdates": {
          "$ref": "#/definitions/DataFeedStringString"
        },
        "invocationContext": {
          "$ref": "#/definitions/InvocationContext"
        }
      }
    },
    "StateMachineTransactionMapping": {
      "type": "object",
      "properties": {
        "stateMachineRunId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "transactionId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "Added": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/NodeInfo"
        }
      }
    },
    "Removed": {
      "type": "object",
      "properties": {
        "logic": {
          "$ref": "#/definitions/FlowLogicObject"
        },
        "result": {
          "$ref": "#/definitions/TryObject"
        }
      }
    },
    "Try": {
      "type": "object",
      "properties": {
        "orThrow": {
          "type": "object"
        },
        "success": {
          "type": "boolean"
        },
        "failure": {
          "type": "boolean"
        }
      }
    },
    "TryObject": {
      "type": "object",
      "properties": {
        "orThrow": {
          "type": "object"
        },
        "success": {
          "type": "boolean"
        },
        "failure": {
          "type": "boolean"
        }
      }
    },
    "ZoneVersionTooLowException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "Modified": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/NodeInfo"
        },
        "previousNode": {
          "$ref": "#/definitions/NodeInfo"
        }
      }
    },
    "DistributedNode": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "SingleNode": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/Party"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostAndPort"
          }
        }
      }
    },
    "StatesNotAvailableException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "UnknownAnonymousPartyException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "IterableStateAndRefContractState": {
      "type": "object"
    },
    "Vault": {
      "type": "object",
      "properties": {
        "states": {
          "$ref": "#/definitions/IterableStateAndRefContractState"
        }
      }
    },
    "ConstraintInfo": {
      "type": "object",
      "properties": {
        "constraint": {
          "$ref": "#/definitions/AttachmentConstraint"
        }
      }
    },
    "Vault$ConstraintInfo$Companion$WhenMappings": {
      "type": "object"
    },
    "Vault$ConstraintInfo$WhenMappings": {
      "type": "object"
    },
    "Page": {
      "type": "object",
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateAndRefContractState"
          }
        },
        "statesMetadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateMetadata"
          }
        },
        "totalStatesAvailable": {
          "type": "integer",
          "format": "int64"
        },
        "stateTypes": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "otherResults": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "StateMetadata": {
      "type": "object",
      "properties": {
        "ref": {
          "$ref": "#/definitions/StateRef"
        },
        "contractStateClassName": {
          "type": "string"
        },
        "recordedTime": {
          "type": "integer",
          "format": "int64"
        },
        "consumedTime": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "notary": {
          "$ref": "#/definitions/AbstractParty"
        },
        "lockId": {
          "type": "string"
        },
        "lockUpdateTime": {
          "type": "integer",
          "format": "int64"
        },
        "relevancyStatus": {
          "type": "string",
          "enum": [
            "RELEVANT",
            "NOT_RELEVANT",
            "ALL"
          ]
        },
        "constraintInfo": {
          "$ref": "#/definitions/ConstraintInfo"
        }
      }
    },
    "Update": {
      "type": "object",
      "properties": {
        "consumed": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/StateAndRefContractState"
          }
        },
        "produced": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/StateAndRefContractState"
          }
        },
        "flowId": {
          "type": "string",
          "format": "uuid"
        },
        "type": {
          "type": "string",
          "enum": [
            "GENERAL",
            "NOTARY_CHANGE",
            "CONTRACT_UPGRADE"
          ]
        },
        "references": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/StateAndRefContractState"
          }
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "Vault$Update$WhenMappings": {
      "type": "object"
    },
    "VaultQueryException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "AndComposition": {
      "type": "object",
      "properties": {
        "a": {
          "$ref": "#/definitions/QueryCriteria"
        },
        "b": {
          "$ref": "#/definitions/QueryCriteria"
        }
      }
    },
    "AttachmentQueryCriteria": {
      "type": "object"
    },
    "AttachmentsQueryCriteria": {
      "type": "object",
      "properties": {
        "uploaderCondition": {
          "$ref": "#/definitions/ColumnPredicateString"
        },
        "filenameCondition": {
          "$ref": "#/definitions/ColumnPredicateString"
        },
        "uploadDateCondition": {
          "$ref": "#/definitions/ColumnPredicateInstant"
        },
        "contractClassNamesCondition": {
          "$ref": "#/definitions/ColumnPredicateListString"
        },
        "signersCondition": {
          "$ref": "#/definitions/ColumnPredicateListPublicKey"
        },
        "versionCondition": {
          "$ref": "#/definitions/ColumnPredicateInteger"
        }
      }
    },
    "ColumnPredicate": {
      "type": "object"
    },
    "ColumnPredicateInstant": {
      "type": "object"
    },
    "ColumnPredicateInteger": {
      "type": "object"
    },
    "ColumnPredicateListPublicKey": {
      "type": "object"
    },
    "ColumnPredicateListString": {
      "type": "object"
    },
    "ColumnPredicateString": {
      "type": "object"
    },
    "OrComposition": {
      "type": "object",
      "properties": {
        "a": {
          "$ref": "#/definitions/QueryCriteria"
        },
        "b": {
          "$ref": "#/definitions/QueryCriteria"
        }
      }
    },
    "AttachmentSort": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentSortColumn"
          }
        }
      }
    },
    "AttachmentSortColumn": {
      "type": "object",
      "properties": {
        "sortAttribute": {
          "type": "string",
          "enum": [
            "INSERTION_DATE",
            "UPLOADER",
            "FILENAME",
            "VERSION"
          ]
        },
        "direction": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      }
    },
    "Builder": {
      "type": "object"
    },
    "Column": {
      "type": "object",
      "properties": {
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "$ref": "#/definitions/Value"
        },
        "typeIndex": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "nullable": {
          "type": "boolean"
        },
        "unique": {
          "type": "boolean"
        },
        "sqlType": {
          "type": "string"
        },
        "sqlTypeCode": {
          "type": "integer",
          "format": "int32"
        },
        "quoted": {
          "type": "boolean"
        },
        "checkConstraint": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "customWrite": {
          "type": "string"
        },
        "customRead": {
          "type": "string"
        },
        "canonicalName": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "formula": {
          "type": "boolean"
        },
        "quotedName": {
          "type": "string"
        },
        "writeExpr": {
          "type": "string"
        }
      }
    },
    "AggregateFunction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "COUNT",
            "AVG",
            "MIN",
            "MAX",
            "SUM"
          ]
        }
      }
    },
    "Between": {
      "type": "object",
      "properties": {
        "rightFromLiteral": {
          "$ref": "#/definitions/Comparable"
        },
        "rightToLiteral": {
          "$ref": "#/definitions/Comparable"
        }
      }
    },
    "Comparable": {
      "type": "object"
    },
    "BinaryComparison": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL"
          ]
        },
        "rightLiteral": {
          "$ref": "#/definitions/Comparable"
        }
      }
    },
    "CollectionExpression": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "IN",
            "NOT_IN",
            "IN_IGNORE_CASE",
            "NOT_IN_IGNORE_CASE"
          ]
        },
        "rightLiteral": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "EqualityComparison": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "EQUAL",
            "NOT_EQUAL",
            "EQUAL_IGNORE_CASE",
            "NOT_EQUAL_IGNORE_CASE"
          ]
        },
        "rightLiteral": {
          "type": "object"
        }
      }
    },
    "Likeness": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "LIKE",
            "NOT_LIKE",
            "LIKE_IGNORE_CASE",
            "NOT_LIKE_IGNORE_CASE"
          ]
        },
        "rightLiteral": {
          "type": "string"
        }
      }
    },
    "NullExpression": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "IS_NULL",
            "NOT_NULL"
          ]
        }
      }
    },
    "AggregateFunctionExpression": {
      "type": "object",
      "properties": {
        "column": {
          "$ref": "#/definitions/ColumnObjectObject"
        },
        "predicate": {
          "$ref": "#/definitions/ColumnPredicateObject"
        },
        "groupByColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnObjectObject"
          }
        },
        "orderBy": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      }
    },
    "ColumnObjectObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ColumnPredicateObject": {
      "type": "object"
    },
    "BinaryLogical": {
      "type": "object",
      "properties": {
        "left": {
          "$ref": "#/definitions/CriteriaExpressionObjectBoolean"
        },
        "right": {
          "$ref": "#/definitions/CriteriaExpressionObjectBoolean"
        },
        "operator": {
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        }
      }
    },
    "CriteriaExpression": {
      "type": "object"
    },
    "CriteriaExpressionObjectBoolean": {
      "type": "object"
    },
    "ColumnPredicateExpression": {
      "type": "object",
      "properties": {
        "column": {
          "$ref": "#/definitions/ColumnObjectObject"
        },
        "predicate": {
          "$ref": "#/definitions/ColumnPredicateObject"
        }
      }
    },
    "Not": {
      "type": "object",
      "properties": {
        "expression": {
          "$ref": "#/definitions/CriteriaExpressionObjectBoolean"
        }
      }
    },
    "FieldInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "PageSpecification": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "QueryCriteria": {
      "type": "object"
    },
    "ColumnPredicateLong": {
      "type": "object"
    },
    "FungibleAssetQueryCriteria": {
      "type": "object",
      "properties": {
        "relevancyStatus": {
          "type": "string",
          "enum": [
            "RELEVANT",
            "NOT_RELEVANT",
            "ALL"
          ]
        },
        "constraintTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ALWAYS_ACCEPT",
              "HASH",
              "CZ_WHITELISTED",
              "SIGNATURE"
            ]
          }
        },
        "constraints": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ConstraintInfo"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "owner": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "quantity": {
          "$ref": "#/definitions/ColumnPredicateLong"
        },
        "issuer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "issuerRef": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "736F6D654279746573",
            "description": "Hex encoded Byte Array"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "contractStateTypes": {
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "FungibleStateQueryCriteria": {
      "type": "object",
      "properties": {
        "relevancyStatus": {
          "type": "string",
          "enum": [
            "RELEVANT",
            "NOT_RELEVANT",
            "ALL"
          ]
        },
        "constraintTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ALWAYS_ACCEPT",
              "HASH",
              "CZ_WHITELISTED",
              "SIGNATURE"
            ]
          }
        },
        "constraints": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ConstraintInfo"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "quantity": {
          "$ref": "#/definitions/ColumnPredicateLong"
        },
        "status": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "contractStateTypes": {
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "LinearStateQueryCriteria": {
      "type": "object",
      "properties": {
        "relevancyStatus": {
          "type": "string",
          "enum": [
            "RELEVANT",
            "NOT_RELEVANT",
            "ALL"
          ]
        },
        "constraintTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ALWAYS_ACCEPT",
              "HASH",
              "CZ_WHITELISTED",
              "SIGNATURE"
            ]
          }
        },
        "constraints": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ConstraintInfo"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "uuid": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "externalId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "contractStateTypes": {
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "SoftLockingCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UNLOCKED_ONLY",
            "LOCKED_ONLY",
            "SPECIFIED",
            "UNLOCKED_AND_SPECIFIED"
          ]
        },
        "lockIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "TimeCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RECORDED",
            "CONSUMED"
          ]
        },
        "predicate": {
          "$ref": "#/definitions/ColumnPredicateInstant"
        }
      }
    },
    "CriteriaExpressionStatePersistableBoolean": {
      "type": "object"
    },
    "VaultCustomQueryCriteria": {
      "type": "object",
      "properties": {
        "relevancyStatus": {
          "type": "string",
          "enum": [
            "RELEVANT",
            "NOT_RELEVANT",
            "ALL"
          ]
        },
        "constraintTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ALWAYS_ACCEPT",
              "HASH",
              "CZ_WHITELISTED",
              "SIGNATURE"
            ]
          }
        },
        "constraints": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ConstraintInfo"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "expression": {
          "$ref": "#/definitions/CriteriaExpressionStatePersistableBoolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "contractStateTypes": {
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "VaultQueryCriteria": {
      "type": "object",
      "properties": {
        "relevancyStatus": {
          "type": "string",
          "enum": [
            "RELEVANT",
            "NOT_RELEVANT",
            "ALL"
          ]
        },
        "constraintTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ALWAYS_ACCEPT",
              "HASH",
              "CZ_WHITELISTED",
              "SIGNATURE"
            ]
          }
        },
        "constraints": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ConstraintInfo"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "contractStateTypes": {
          "type": "array",
          "uniqueItems": true
        },
        "stateRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "notary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "softLockingCondition": {
          "$ref": "#/definitions/SoftLockingCondition"
        },
        "timeCondition": {
          "$ref": "#/definitions/TimeCondition"
        }
      }
    },
    "QueryCriteriaUtils": {
      "type": "object"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortColumn"
          }
        }
      }
    },
    "SortAttribute": {
      "type": "object"
    },
    "SortColumn": {
      "type": "object",
      "properties": {
        "sortAttribute": {
          "$ref": "#/definitions/SortAttribute"
        },
        "direction": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      }
    },
    "Custom": {
      "type": "object",
      "properties": {
        "entityStateColumnName": {
          "type": "string"
        }
      }
    },
    "Attribute": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        }
      }
    },
    "Standard": {
      "type": "object",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/Attribute"
        }
      }
    },
    "CommonSchema": {
      "type": "object"
    },
    "CommonSchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "FungibleState": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "participants": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "owner": {
          "$ref": "#/definitions/AbstractParty"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "issuer": {
          "$ref": "#/definitions/AbstractParty"
        },
        "issuerRef": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "PersistentStateRef": {
      "type": "object",
      "properties": {
        "txId": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinearState": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "participants": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "externalId": {
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "MappedSchemaValidator": {
      "type": "object"
    },
    "SchemaCrossReferenceReport": {
      "type": "object"
    },
    "ByteSequence": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "bytes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "ClassWhitelist": {
      "type": "object"
    },
    "EncodingWhitelist": {
      "type": "object"
    },
    "ObjectWithCompatibleContext": {
      "type": "object",
      "properties": {
        "obj": {
          "type": "object"
        },
        "context": {
          "$ref": "#/definitions/SerializationContext"
        }
      }
    },
    "SerializationContext": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "encoding": {
          "$ref": "#/definitions/SerializationEncoding"
        },
        "whitelist": {
          "$ref": "#/definitions/ClassWhitelist"
        },
        "deserializationClassLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "lenientCarpenterEnabled": {
          "type": "boolean"
        },
        "customSerializers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SerializationCustomSerializerObjectObject"
          }
        },
        "preventDataLoss": {
          "type": "boolean"
        },
        "preferredSerializationVersion": {
          "$ref": "#/definitions/ByteSequence"
        },
        "objectReferencesEnabled": {
          "type": "boolean"
        },
        "useCase": {
          "type": "string",
          "enum": [
            "P2P",
            "RPCServer",
            "RPCClient",
            "Storage",
            "Testing"
          ]
        },
        "carpenterDisabled": {
          "type": "boolean"
        },
        "encodingWhitelist": {
          "$ref": "#/definitions/EncodingWhitelist"
        }
      }
    },
    "SerializationEncoding": {
      "type": "object"
    },
    "AttachmentURLStreamHandlerFactory": {
      "type": "object"
    },
    "AttachmentsClassLoader": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/ClassLoader"
        },
        "params": {
          "$ref": "#/definitions/NetworkParameters"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "url"
          }
        }
      }
    },
    "AttachmentsClassLoaderBuilder": {
      "type": "object"
    },
    "CheckpointSerializationContext": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "encoding": {
          "$ref": "#/definitions/SerializationEncoding"
        },
        "whitelist": {
          "$ref": "#/definitions/ClassWhitelist"
        },
        "deserializationClassLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "objectReferencesEnabled": {
          "type": "boolean"
        },
        "encodingWhitelist": {
          "$ref": "#/definitions/EncodingWhitelist"
        }
      }
    },
    "CheckpointSerializationDefaults": {
      "type": "object",
      "properties": {
        "checkpoint_CONTEXT": {
          "$ref": "#/definitions/CheckpointSerializationContext"
        },
        "checkpoint_SERIALIZER": {
          "$ref": "#/definitions/CheckpointSerializer"
        }
      }
    },
    "CheckpointSerializer": {
      "type": "object"
    },
    "FilteredComponent": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "nonce": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "Position": {
      "type": "object",
      "properties": {
        "progressTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "tracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "newStep": {
          "$ref": "#/definitions/Step"
        }
      }
    },
    "Rendering": {
      "type": "object",
      "properties": {
        "progressTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "tracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "ofStep": {
          "$ref": "#/definitions/Step"
        }
      }
    },
    "Structural": {
      "type": "object",
      "properties": {
        "progressTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "tracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "parent": {
          "$ref": "#/definitions/Step"
        }
      }
    },
    "Obligation": {
      "type": "object"
    },
    "CordaRPCOps": {
      "type": "object",
      "properties": {
        "flowsDrainingModeEnabled": {
          "type": "boolean"
        },
        "waitingForShutdown": {
          "type": "boolean"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        },
        "protocolVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ObligationApi": {
      "type": "object",
      "properties": {
        "rpcOps": {
          "$ref": "#/definitions/CordaRPCOps"
        },
        "cashBalances": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AmountCurrency"
          }
        }
      }
    },
    "ObligationContract": {
      "type": "object"
    },
    "Issue": {
      "type": "object"
    },
    "Settle": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "Transfer": {
      "type": "object"
    },
    "Function": {
      "type": "object"
    },
    "FunctionCordaRPCOpsObject": {
      "type": "object"
    },
    "ObligationPlugin": {
      "type": "object",
      "properties": {
        "webApis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionCordaRPCOpsObject"
          }
        },
        "staticServeDirs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IdentitySyncFlowWrapper": {
      "type": "object"
    },
    "SYNCING_WRAPPER": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IssueObligation": {
      "type": "object"
    },
    "BUILDING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FINALISING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "INITIALISING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SettleObligation": {
      "type": "object"
    },
    "PREPARATION": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TransferObligation": {
      "type": "object"
    },
    "BUILD_TRANSACTION": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CHECK_INITIATOR": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "COLLECT_SIGS": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FINALISE": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GET_OBLIGATION": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SIGN_TRANSACTION": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SYNC_OTHER_IDENTITIES": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SYNC_OUR_IDENTITY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SYNC_FIRST_IDENTITY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SYNC_SECOND_IDENTITY": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Currencies": {
      "type": "object"
    },
    "BusinessCalendar": {
      "type": "object",
      "properties": {
        "holidayDates": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "CommercialPaper": {
      "type": "object"
    },
    "Move": {
      "type": "object"
    },
    "Redeem": {
      "type": "object"
    },
    "PartyAndReference": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/AbstractParty"
        },
        "reference": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "Commodity": {
      "type": "object",
      "properties": {
        "commodityCode": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "defaultFractionDigits": {
          "type": "integer",
          "format": "int32"
        },
        "displayTokenSize": {
          "type": "number"
        }
      }
    },
    "Expression": {
      "type": "object",
      "properties": {
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "Fix": {
      "type": "object",
      "properties": {
        "of": {
          "$ref": "#/definitions/FixOf"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "FixOf": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "forDay": {
          "type": "string",
          "format": "date"
        },
        "ofTenor": {
          "$ref": "#/definitions/Tenor"
        }
      }
    },
    "Tenor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "JavaCommercialPaper": {
      "type": "object"
    },
    "Tenor$WhenMappings": {
      "type": "object"
    },
    "BilateralNetState": {
      "type": "object",
      "properties": {
        "partyKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "template": {
          "$ref": "#/definitions/TermsObject"
        }
      }
    },
    "Issued": {
      "type": "object",
      "properties": {
        "issuer": {
          "$ref": "#/definitions/PartyAndReference"
        },
        "product": {
          "type": "object"
        },
        "_productType": {
          "type": "string",
          "example": "java.util.Currency"
        }
      }
    },
    "Terms": {
      "type": "object",
      "properties": {
        "acceptableContracts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "acceptableIssuedProducts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Issued"
          }
        },
        "dueBefore": {
          "type": "integer",
          "format": "int64"
        },
        "timeTolerance": {
          "$ref": "#/definitions/Duration"
        },
        "product": {
          "type": "object"
        }
      }
    },
    "TermsObject": {
      "type": "object",
      "properties": {
        "acceptableContracts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "acceptableIssuedProducts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Issued"
          }
        },
        "dueBefore": {
          "type": "integer",
          "format": "int64"
        },
        "timeTolerance": {
          "$ref": "#/definitions/Duration"
        },
        "product": {
          "type": "object"
        }
      }
    },
    "Cash": {
      "type": "object"
    },
    "Exit": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "CashUtilities": {
      "type": "object"
    },
    "MultilateralNetState": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/TermsObject"
        }
      }
    },
    "Net": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CLOSE_OUT",
            "PAYMENT"
          ]
        }
      }
    },
    "SetLifecycle": {
      "type": "object",
      "properties": {
        "lifecycle": {
          "type": "string",
          "enum": [
            "NORMAL",
            "DEFAULTED"
          ]
        },
        "inverse": {
          "type": "string",
          "enum": [
            "NORMAL",
            "DEFAULTED"
          ]
        }
      }
    },
    "Obligation$Commands$SetLifecycle$WhenMappings": {
      "type": "object"
    },
    "BilateralNetStateObject": {
      "type": "object",
      "properties": {
        "partyKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        },
        "template": {
          "$ref": "#/definitions/TermsObject"
        }
      }
    },
    "MultilateralNetStateObject": {
      "type": "object",
      "properties": {
        "template": {
          "$ref": "#/definitions/TermsObject"
        }
      }
    },
    "Obligation$State$WhenMappings": {
      "type": "object"
    },
    "Obligation$WhenMappings": {
      "type": "object"
    },
    "PartyAndAmount": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/AbstractParty"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        }
      }
    },
    "StateSumming": {
      "type": "object"
    },
    "FINALISING_TX": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GENERATING_ID": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GENERATING_TX": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SIGNING_TX": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CashException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "ExitRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "issuerRef": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "IssueAndPaymentRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "issueRef": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "recipient": {
          "$ref": "#/definitions/Party"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "anonymous": {
          "type": "boolean"
        }
      }
    },
    "IssueRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "issueRef": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "PaymentRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "recipient": {
          "$ref": "#/definitions/Party"
        },
        "anonymous": {
          "type": "boolean"
        },
        "issuerConstraint": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "notary": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "TwoPartyDealFlow": {
      "type": "object"
    },
    "AutoOffer": {
      "type": "object",
      "properties": {
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "dealBeingOffered": {
          "$ref": "#/definitions/DealState"
        }
      }
    },
    "DealState": {
      "type": "object",
      "properties": {
        "linearId": {
          "$ref": "#/definitions/UniqueIdentifier"
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractParty"
          }
        }
      }
    },
    "AnonymousParty": {
      "type": "object",
      "properties": {
        "owningKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "Handshake": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        },
        "primaryIdentity": {
          "$ref": "#/definitions/AnonymousParty"
        },
        "secondaryIdentity": {
          "$ref": "#/definitions/AnonymousParty"
        }
      }
    },
    "SENDING_PROPOSAL": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "COLLECTING_SIGNATURES": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RECORDING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TwoPartyTradeFlow": {
      "type": "object"
    },
    "AssetMismatchException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "expectedTypeName": {
          "type": "string"
        },
        "typeName": {
          "type": "string"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "SharedTx": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/TransactionBuilder"
        },
        "cashSigningPubKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "TransactionBuilder": {
      "type": "object",
      "properties": {
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "lockId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "AWAITING_PROPOSAL": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VERIFYING_AND_SIGNING": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "extraAuditData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SellerTradeInfo": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/AmountCurrency"
        },
        "payToIdentity": {
          "$ref": "#/definitions/PartyAndCertificate"
        }
      }
    },
    "UnacceptablePriceException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "CashSchema": {
      "type": "object"
    },
    "CashSchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "PersistentCashState": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "owner": {
          "$ref": "#/definitions/AbstractParty"
        },
        "pennies": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "issuerPartyHash": {
          "type": "string"
        },
        "issuerRef": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "CommercialPaperSchema": {
      "type": "object"
    },
    "CommercialPaperSchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "PersistentCommercialPaperState": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "issuancePartyHash": {
          "type": "string"
        },
        "issuanceRef": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "ownerHash": {
          "type": "string"
        },
        "maturity": {
          "type": "integer",
          "format": "int64"
        },
        "faceValue": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "faceValueIssuerPartyHash": {
          "type": "string"
        },
        "faceValueIssuerRef": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "CommercialPaperUtils": {
      "type": "object"
    },
    "GetBalances": {
      "type": "object"
    },
    "CashUtils": {
      "type": "object"
    },
    "ObligationUtils": {
      "type": "object"
    },
    "ObligationUtils$WhenMappings": {
      "type": "object"
    },
    "CashSelectionH2Impl": {
      "type": "object"
    },
    "CashSelectionPostgreSQLImpl": {
      "type": "object"
    },
    "CashSelectionSQLServerImpl": {
      "type": "object"
    },
    "BusinessCalendarWrapper": {
      "type": "object",
      "properties": {
        "holidayDates": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "AnnotatedElement": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "AnnotatedMember": {
      "type": "object",
      "properties": {
        "member": {
          "$ref": "#/definitions/Member"
        },
        "fullName": {
          "type": "string"
        },
        "typeContext": {
          "$ref": "#/definitions/TypeResolutionContext"
        },
        "allAnnotations": {
          "$ref": "#/definitions/AnnotationMap"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/JavaType"
        },
        "genericType": {
          "$ref": "#/definitions/Type"
        },
        "public": {
          "type": "boolean"
        },
        "annotated": {
          "$ref": "#/definitions/AnnotatedElement"
        }
      }
    },
    "Annotation": {
      "type": "object"
    },
    "AnnotationMap": {
      "type": "object"
    },
    "CalendarDeserializer": {
      "type": "object",
      "properties": {
        "cachable": {
          "type": "boolean"
        },
        "delegatee": {
          "$ref": "#/definitions/JsonDeserializerObject"
        },
        "knownPropertyNames": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nullValue": {
          "$ref": "#/definitions/BusinessCalendar"
        },
        "nullAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyValue": {
          "type": "object"
        },
        "objectIdReader": {
          "$ref": "#/definitions/ObjectIdReader"
        }
      }
    },
    "JavaType": {
      "type": "object",
      "properties": {
        "interface": {
          "type": "boolean"
        },
        "primitive": {
          "type": "boolean"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JavaType"
          }
        },
        "abstract": {
          "type": "boolean"
        },
        "genericSignature": {
          "type": "string"
        },
        "final": {
          "type": "boolean"
        },
        "superClass": {
          "$ref": "#/definitions/JavaType"
        },
        "contentType": {
          "$ref": "#/definitions/JavaType"
        },
        "bindings": {
          "$ref": "#/definitions/TypeBindings"
        },
        "javaLangObject": {
          "type": "boolean"
        },
        "containerType": {
          "type": "boolean"
        },
        "concrete": {
          "type": "boolean"
        },
        "throwable": {
          "type": "boolean"
        },
        "arrayType": {
          "type": "boolean"
        },
        "enumType": {
          "type": "boolean"
        },
        "collectionLikeType": {
          "type": "boolean"
        },
        "mapLikeType": {
          "type": "boolean"
        },
        "keyType": {
          "$ref": "#/definitions/JavaType"
        },
        "referencedType": {
          "$ref": "#/definitions/JavaType"
        },
        "valueHandler": {
          "type": "object"
        },
        "typeHandler": {
          "type": "object"
        },
        "contentValueHandler": {
          "type": "object"
        },
        "contentTypeHandler": {
          "type": "object"
        },
        "erasedSignature": {
          "type": "string"
        },
        "typeName": {
          "type": "string"
        },
        "referenceType": {
          "type": "boolean"
        }
      }
    },
    "JsonDeserializer": {
      "type": "object",
      "properties": {
        "cachable": {
          "type": "boolean"
        },
        "knownPropertyNames": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nullValue": {
          "type": "object"
        },
        "nullAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyValue": {
          "type": "object"
        },
        "objectIdReader": {
          "$ref": "#/definitions/ObjectIdReader"
        }
      }
    },
    "JsonDeserializerObject": {
      "type": "object",
      "properties": {
        "cachable": {
          "type": "boolean"
        },
        "delegatee": {
          "$ref": "#/definitions/JsonDeserializerObject"
        },
        "knownPropertyNames": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nullValue": {
          "type": "object"
        },
        "nullAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyValue": {
          "type": "object"
        },
        "objectIdReader": {
          "$ref": "#/definitions/ObjectIdReader"
        }
      }
    },
    "Member": {
      "type": "object",
      "properties": {
        "modifiers": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "synthetic": {
          "type": "boolean"
        }
      }
    },
    "MergeInfo": {
      "type": "object",
      "properties": {
        "getter": {
          "$ref": "#/definitions/AnnotatedMember"
        },
        "fromDefaults": {
          "type": "boolean"
        }
      }
    },
    "NullValueProvider": {
      "type": "object",
      "properties": {
        "nullAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        }
      }
    },
    "ObjectIdGenerator": {
      "type": "object"
    },
    "ObjectIdGeneratorObject": {
      "type": "object"
    },
    "ObjectIdInfo": {
      "type": "object",
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/PropertyName"
        },
        "alwaysAsId": {
          "type": "boolean"
        }
      }
    },
    "ObjectIdReader": {
      "type": "object",
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/PropertyName"
        },
        "generator": {
          "$ref": "#/definitions/ObjectIdGeneratorObject"
        },
        "resolver": {
          "$ref": "#/definitions/ObjectIdResolver"
        },
        "idProperty": {
          "$ref": "#/definitions/SettableBeanProperty"
        },
        "idType": {
          "$ref": "#/definitions/JavaType"
        }
      }
    },
    "ObjectIdResolver": {
      "type": "object"
    },
    "PropertyMetadata": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "required": {
          "type": "boolean"
        },
        "mergeInfo": {
          "$ref": "#/definitions/MergeInfo"
        },
        "valueNulls": {
          "type": "string",
          "enum": [
            "SET",
            "SKIP",
            "FAIL",
            "AS_EMPTY",
            "DEFAULT"
          ]
        },
        "contentNulls": {
          "type": "string",
          "enum": [
            "SET",
            "SKIP",
            "FAIL",
            "AS_EMPTY",
            "DEFAULT"
          ]
        }
      }
    },
    "PropertyName": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "simpleName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "SettableBeanProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/JavaType"
        },
        "member": {
          "$ref": "#/definitions/AnnotatedMember"
        },
        "fullName": {
          "$ref": "#/definitions/PropertyName"
        },
        "wrapperName": {
          "$ref": "#/definitions/PropertyName"
        },
        "objectIdInfo": {
          "$ref": "#/definitions/ObjectIdInfo"
        },
        "managedReferenceName": {
          "type": "string"
        },
        "ignorable": {
          "type": "boolean"
        },
        "valueTypeDeserializer": {
          "$ref": "#/definitions/TypeDeserializer"
        },
        "nullValueProvider": {
          "$ref": "#/definitions/NullValueProvider"
        },
        "propertyIndex": {
          "type": "integer",
          "format": "int32"
        },
        "creatorIndex": {
          "type": "integer",
          "format": "int32"
        },
        "injectableValueId": {
          "type": "object"
        },
        "virtual": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/PropertyMetadata"
        }
      }
    },
    "Type": {
      "type": "object",
      "properties": {
        "typeName": {
          "type": "string"
        }
      }
    },
    "TypeBindings": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JavaType"
          }
        }
      }
    },
    "TypeDeserializer": {
      "type": "object",
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "typeInclusion": {
          "type": "string",
          "enum": [
            "PROPERTY",
            "WRAPPER_OBJECT",
            "WRAPPER_ARRAY",
            "EXTERNAL_PROPERTY",
            "EXISTING_PROPERTY"
          ]
        },
        "typeIdResolver": {
          "$ref": "#/definitions/TypeIdResolver"
        }
      }
    },
    "TypeIdResolver": {
      "type": "object",
      "properties": {
        "descForKnownTypeIds": {
          "type": "string"
        },
        "mechanism": {
          "type": "string",
          "enum": [
            "NONE",
            "CLASS",
            "MINIMAL_CLASS",
            "NAME",
            "CUSTOM"
          ]
        }
      }
    },
    "TypeResolutionContext": {
      "type": "object"
    },
    "CalendarSerializer": {
      "type": "object",
      "properties": {
        "delegatee": {
          "$ref": "#/definitions/JsonSerializerObject"
        },
        "unwrappingSerializer": {
          "type": "boolean"
        }
      }
    },
    "JsonSerializer": {
      "type": "object",
      "properties": {
        "unwrappingSerializer": {
          "type": "boolean"
        }
      }
    },
    "JsonSerializerObject": {
      "type": "object",
      "properties": {
        "delegatee": {
          "$ref": "#/definitions/JsonSerializerObject"
        },
        "unwrappingSerializer": {
          "type": "boolean"
        }
      }
    },
    "ExpressionDeserializer": {
      "type": "object",
      "properties": {
        "cachable": {
          "type": "boolean"
        },
        "delegatee": {
          "$ref": "#/definitions/JsonDeserializerObject"
        },
        "knownPropertyNames": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nullValue": {
          "$ref": "#/definitions/Expression"
        },
        "nullAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyValue": {
          "type": "object"
        },
        "objectIdReader": {
          "$ref": "#/definitions/ObjectIdReader"
        }
      }
    },
    "ExpressionSerializer": {
      "type": "object",
      "properties": {
        "delegatee": {
          "$ref": "#/definitions/JsonSerializerObject"
        },
        "unwrappingSerializer": {
          "type": "boolean"
        }
      }
    },
    "FinanceJSONSupport": {
      "type": "object"
    },
    "Corda": {
      "type": "object"
    },
    "InitialRegistrationCmdLineOptions": {
      "type": "object",
      "properties": {
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        },
        "unknownConfigKeysPolicy": {
          "type": "string",
          "enum": [
            "FAIL",
            "IGNORE"
          ]
        },
        "devMode": {
          "type": "boolean"
        },
        "configFile": {
          "$ref": "#/definitions/Path"
        }
      }
    },
    "JolokiaSlf4jAdapter": {
      "type": "object"
    },
    "NodeCmdLineOptions": {
      "type": "object",
      "properties": {
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        },
        "unknownConfigKeysPolicy": {
          "type": "string",
          "enum": [
            "FAIL",
            "IGNORE"
          ]
        },
        "devMode": {
          "type": "boolean"
        },
        "sshdServer": {
          "type": "boolean"
        },
        "sshdServerPort": {
          "type": "integer",
          "format": "int32"
        },
        "noLocalShell": {
          "type": "boolean"
        },
        "justGenerateNodeInfo": {
          "type": "boolean"
        },
        "justGenerateRpcSslCerts": {
          "type": "boolean"
        },
        "clearNetworkMapCache": {
          "type": "boolean"
        },
        "networkRootTrustStorePathParameter": {
          "$ref": "#/definitions/Path"
        },
        "networkRootTrustStorePassword": {
          "type": "string"
        },
        "registration": {
          "type": "boolean"
        },
        "configFile": {
          "$ref": "#/definitions/Path"
        }
      }
    },
    "NodeRegistrationOption": {
      "type": "object",
      "properties": {
        "networkRootTrustStorePath": {
          "$ref": "#/definitions/Path"
        },
        "networkRootTrustStorePassword": {
          "type": "string"
        }
      }
    },
    "SerialFilter": {
      "type": "object"
    },
    "SharedNodeCmdLineOptions": {
      "type": "object",
      "properties": {
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        },
        "unknownConfigKeysPolicy": {
          "type": "string",
          "enum": [
            "FAIL",
            "IGNORE"
          ]
        },
        "devMode": {
          "type": "boolean"
        },
        "configFile": {
          "$ref": "#/definitions/Path"
        }
      }
    },
    "ObservableLong": {
      "type": "object"
    },
    "SimpleClock": {
      "type": "object",
      "properties": {
        "mutations": {
          "$ref": "#/definitions/ObservableLong"
        },
        "zone": {
          "$ref": "#/definitions/ZoneId"
        }
      }
    },
    "VersionInfo": {
      "type": "object",
      "properties": {
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "releaseVersion": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        }
      }
    },
    "DatabaseConfigurationException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "AnnotatedType": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "ArchiveDescriptorFactory": {
      "type": "object"
    },
    "AttachmentStorageInternal": {
      "type": "object"
    },
    "AttributeConverterInfo": {
      "type": "object"
    },
    "AttributeObjectObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        }
      }
    },
    "AttributeSource": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/IterableAttributeDefinition"
        }
      }
    },
    "AuditService": {
      "type": "object"
    },
    "AuthService": {
      "type": "object",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "id": {
          "$ref": "#/definitions/AuthServiceId"
        },
        "options": {
          "$ref": "#/definitions/Options"
        }
      }
    },
    "AuxiliaryDatabaseObject": {
      "type": "object",
      "properties": {
        "exportIdentifier": {
          "type": "string"
        }
      }
    },
    "BFTSmartConfig": {
      "type": "object",
      "properties": {
        "replicaId": {
          "type": "integer",
          "format": "int32"
        },
        "clusterAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostAndPort"
          }
        },
        "debug": {
          "type": "boolean"
        },
        "exposeRaces": {
          "type": "boolean"
        }
      }
    },
    "BaselineSessionEventsListenerBuilder": {
      "type": "object",
      "properties": {
        "logSessionMetrics": {
          "type": "boolean"
        }
      }
    },
    "BasicType": {
      "type": "object",
      "properties": {
        "registrationKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "mutable": {
          "type": "boolean"
        },
        "associationType": {
          "type": "boolean"
        },
        "entityType": {
          "type": "boolean"
        },
        "anyType": {
          "type": "boolean"
        },
        "componentType": {
          "type": "boolean"
        },
        "collectionType": {
          "type": "boolean"
        }
      }
    },
    "BasicTypeRegistration": {
      "type": "object",
      "properties": {
        "basicType": {
          "$ref": "#/definitions/BasicType"
        },
        "registrationKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BasicTypeRegistry": {
      "type": "object"
    },
    "BatchLoadSizingStrategy": {
      "type": "object"
    },
    "BootstrapContext": {
      "type": "object",
      "properties": {
        "serviceRegistry": {
          "$ref": "#/definitions/StandardServiceRegistry"
        },
        "typeConfiguration": {
          "$ref": "#/definitions/TypeConfiguration"
        },
        "metadataBuildingOptions": {
          "$ref": "#/definitions/MetadataBuildingOptions"
        },
        "jpaBootstrap": {
          "type": "boolean"
        },
        "jpaCompliance": {
          "$ref": "#/definitions/MutableJpaCompliance"
        },
        "classLoaderAccess": {
          "$ref": "#/definitions/ClassLoaderAccess"
        },
        "archiveDescriptorFactory": {
          "$ref": "#/definitions/ArchiveDescriptorFactory"
        },
        "jpaTempClassLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "classmateContext": {
          "$ref": "#/definitions/ClassmateContext"
        },
        "scanOptions": {
          "$ref": "#/definitions/ScanOptions"
        },
        "scanEnvironment": {
          "$ref": "#/definitions/ScanEnvironment"
        },
        "scanner": {
          "type": "object"
        },
        "reflectionManager": {
          "$ref": "#/definitions/ReflectionManager"
        },
        "jandexView": {
          "$ref": "#/definitions/IndexView"
        },
        "sqlFunctions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SQLFunction"
          }
        },
        "auxiliaryDatabaseObjectList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuxiliaryDatabaseObject"
          }
        },
        "attributeConverters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeConverterInfo"
          }
        },
        "cacheRegionDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CacheRegionDefinition"
          }
        }
      }
    },
    "BrokerRpcSslOptions": {
      "type": "object",
      "properties": {
        "keyStorePath": {
          "$ref": "#/definitions/Path"
        },
        "keyStorePassword": {
          "type": "string"
        }
      }
    },
    "BytecodeEnhancementMetadata": {
      "type": "object",
      "properties": {
        "enhancedForLazyLoading": {
          "type": "boolean"
        },
        "lazyAttributesMetadata": {
          "$ref": "#/definitions/LazyAttributesMetadata"
        },
        "entityName": {
          "type": "string"
        }
      }
    },
    "Cache": {
      "type": "object"
    },
    "CacheEntryStructure": {
      "type": "object"
    },
    "CacheImplementor": {
      "type": "object",
      "properties": {
        "secondLevelCacheRegionNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sessionFactory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "defaultQueryResultsCache": {
          "$ref": "#/definitions/QueryResultsCache"
        },
        "regionFactory": {
          "$ref": "#/definitions/RegionFactory"
        },
        "cacheRegionNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "timestampsCache": {
          "$ref": "#/definitions/TimestampsCache"
        },
        "updateTimestampsCache": {
          "$ref": "#/definitions/UpdateTimestampsCache"
        },
        "queryCache": {
          "$ref": "#/definitions/QueryCache"
        },
        "defaultQueryCache": {
          "$ref": "#/definitions/QueryCache"
        }
      }
    },
    "CacheRegionDefinition": {
      "type": "object",
      "properties": {
        "regionType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "COLLECTION",
            "QUERY"
          ]
        },
        "role": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "cacheLazy": {
          "type": "boolean"
        }
      }
    },
    "CallableStatementSupport": {
      "type": "object"
    },
    "CascadeStyle": {
      "type": "object"
    },
    "CertChainPolicyConfig": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        }
      }
    },
    "CertificateStore": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/X509KeyStore"
        },
        "password": {
          "type": "string"
        },
        "entryPassword": {
          "type": "string"
        }
      }
    },
    "ClassInfo": {
      "type": "object"
    },
    "ClassLoaderAccess": {
      "type": "object"
    },
    "ClassLoaderDelegate": {
      "type": "object"
    },
    "ClassMetadata": {
      "type": "object",
      "properties": {
        "inherited": {
          "type": "boolean"
        },
        "mutable": {
          "type": "boolean"
        },
        "propertyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "identifierPropertyName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "propertyNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identifierType": {
          "$ref": "#/definitions/Type"
        },
        "versioned": {
          "type": "boolean"
        },
        "versionProperty": {
          "type": "integer",
          "format": "int32"
        },
        "propertyNullability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyLaziness": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "naturalIdentifierProperties": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ClassmateContext": {
      "type": "object",
      "properties": {
        "typeResolver": {
          "$ref": "#/definitions/TypeResolver"
        },
        "memberResolver": {
          "$ref": "#/definitions/MemberResolver"
        }
      }
    },
    "Collection": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/MetadataImplementor"
        },
        "owner": {
          "$ref": "#/definitions/PersistentClass"
        },
        "key": {
          "$ref": "#/definitions/KeyValue"
        },
        "element": {
          "$ref": "#/definitions/Value"
        },
        "collectionTable": {
          "$ref": "#/definitions/Table"
        },
        "role": {
          "type": "string"
        },
        "lazy": {
          "type": "boolean"
        },
        "extraLazy": {
          "type": "boolean"
        },
        "inverse": {
          "type": "boolean"
        },
        "mutable": {
          "type": "boolean"
        },
        "subselectLoadable": {
          "type": "boolean"
        },
        "cacheConcurrencyStrategy": {
          "type": "string"
        },
        "cacheRegionName": {
          "type": "string"
        },
        "orderBy": {
          "type": "string"
        },
        "where": {
          "type": "string"
        },
        "manyToManyWhere": {
          "type": "string"
        },
        "referencedPropertyName": {
          "type": "string"
        },
        "mappedByProperty": {
          "type": "string"
        },
        "sorted": {
          "type": "boolean"
        },
        "comparator": {
          "$ref": "#/definitions/Comparator"
        },
        "comparatorClassName": {
          "type": "string"
        },
        "batchSize": {
          "type": "integer",
          "format": "int32"
        },
        "fetchMode": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "JOIN",
            "SELECT"
          ]
        },
        "optimisticLocked": {
          "type": "boolean"
        },
        "typeName": {
          "type": "string"
        },
        "typeParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "manyToManyFilters": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "synchronizedTables": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "customSQLInsert": {
          "type": "string"
        },
        "customInsertCallable": {
          "type": "boolean"
        },
        "customSQLUpdate": {
          "type": "string"
        },
        "customUpdateCallable": {
          "type": "boolean"
        },
        "customSQLDelete": {
          "type": "string"
        },
        "customDeleteCallable": {
          "type": "boolean"
        },
        "customSQLDeleteAll": {
          "type": "string"
        },
        "customDeleteAllCallable": {
          "type": "boolean"
        },
        "loaderName": {
          "type": "string"
        },
        "array": {
          "type": "boolean"
        },
        "set": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "table": {
          "$ref": "#/definitions/Table"
        },
        "primitiveArray": {
          "type": "boolean"
        },
        "serviceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        },
        "nullable": {
          "type": "boolean"
        },
        "map": {
          "type": "boolean"
        },
        "oneToMany": {
          "type": "boolean"
        },
        "collectionType": {
          "$ref": "#/definitions/CollectionType"
        },
        "customSQLInsertCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "customSQLUpdateCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "customSQLDeleteCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "columnIterator": {
          "$ref": "#/definitions/IteratorSelectable"
        },
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        },
        "indexed": {
          "type": "boolean"
        },
        "defaultCollectionType": {
          "$ref": "#/definitions/CollectionType"
        },
        "ownerEntityName": {
          "type": "string"
        },
        "manyToManyOrdering": {
          "type": "string"
        },
        "identified": {
          "type": "boolean"
        },
        "alternateUniqueKey": {
          "type": "boolean"
        },
        "simpleValue": {
          "type": "boolean"
        },
        "customSQLDeleteAllCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "columnInsertability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "columnUpdateability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        }
      }
    },
    "CollectionDataAccess": {
      "type": "object",
      "properties": {
        "region": {
          "$ref": "#/definitions/DomainDataRegion"
        },
        "accessType": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "READ_WRITE",
            "NONSTRICT_READ_WRITE",
            "TRANSACTIONAL"
          ]
        }
      }
    },
    "CollectionDefinition": {
      "type": "object",
      "properties": {
        "collectionType": {
          "$ref": "#/definitions/CollectionType"
        },
        "collectionPersister": {
          "$ref": "#/definitions/CollectionPersister"
        },
        "indexDefinition": {
          "$ref": "#/definitions/CollectionIndexDefinition"
        },
        "elementDefinition": {
          "$ref": "#/definitions/CollectionElementDefinition"
        }
      }
    },
    "CollectionElementDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type"
        },
        "collectionDefinition": {
          "$ref": "#/definitions/CollectionDefinition"
        }
      }
    },
    "CollectionIndexDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type"
        },
        "collectionDefinition": {
          "$ref": "#/definitions/CollectionDefinition"
        }
      }
    },
    "CollectionMetadata": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "primitiveArray": {
          "type": "boolean"
        },
        "elementType": {
          "$ref": "#/definitions/Type"
        },
        "keyType": {
          "$ref": "#/definitions/Type"
        },
        "role": {
          "type": "string"
        },
        "indexType": {
          "$ref": "#/definitions/Type"
        },
        "lazy": {
          "type": "boolean"
        }
      }
    },
    "CollectionPersister": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "factory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "primitiveArray": {
          "type": "boolean"
        },
        "mutable": {
          "type": "boolean"
        },
        "elementType": {
          "$ref": "#/definitions/Type"
        },
        "keyType": {
          "$ref": "#/definitions/Type"
        },
        "role": {
          "type": "string"
        },
        "oneToMany": {
          "type": "boolean"
        },
        "collectionType": {
          "$ref": "#/definitions/CollectionType"
        },
        "indexType": {
          "$ref": "#/definitions/Type"
        },
        "lazy": {
          "type": "boolean"
        },
        "batchSize": {
          "type": "integer",
          "format": "int32"
        },
        "collectionMetadata": {
          "$ref": "#/definitions/CollectionMetadata"
        },
        "identifierType": {
          "$ref": "#/definitions/Type"
        },
        "versioned": {
          "type": "boolean"
        },
        "identifierGenerator": {
          "$ref": "#/definitions/IdentifierGenerator"
        },
        "navigableRole": {
          "$ref": "#/definitions/NavigableRole"
        },
        "cacheEntryStructure": {
          "$ref": "#/definitions/CacheEntryStructure"
        },
        "cacheAccessStrategy": {
          "$ref": "#/definitions/CollectionDataAccess"
        },
        "manyToMany": {
          "type": "boolean"
        },
        "inverse": {
          "type": "boolean"
        },
        "ownerEntityPersister": {
          "$ref": "#/definitions/EntityPersister"
        },
        "collectionSpaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Serializable"
          }
        },
        "cascadeDeleteEnabled": {
          "type": "boolean"
        },
        "extraLazy": {
          "type": "boolean"
        },
        "mappedByProperty": {
          "type": "string"
        },
        "collectionPersister": {
          "$ref": "#/definitions/CollectionPersister"
        },
        "indexDefinition": {
          "$ref": "#/definitions/CollectionIndexDefinition"
        },
        "elementDefinition": {
          "$ref": "#/definitions/CollectionElementDefinition"
        }
      }
    },
    "CollectionType": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mutable": {
          "type": "boolean"
        },
        "arrayType": {
          "type": "boolean"
        },
        "alwaysDirtyChecked": {
          "type": "boolean"
        },
        "associationType": {
          "type": "boolean"
        },
        "collectionType": {
          "type": "boolean"
        },
        "foreignKeyDirection": {
          "type": "string",
          "enum": [
            "TO_PARENT",
            "FROM_PARENT"
          ]
        },
        "rhsuniqueKeyPropertyName": {
          "type": "string"
        },
        "lhspropertyName": {
          "type": "string"
        },
        "entityType": {
          "type": "boolean"
        },
        "anyType": {
          "type": "boolean"
        },
        "componentType": {
          "type": "boolean"
        }
      }
    },
    "ColumnAliasExtractor": {
      "type": "object"
    },
    "Comparator": {
      "type": "object"
    },
    "ComparatorObject": {
      "type": "object"
    },
    "Component": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/MetadataImplementor"
        },
        "typeName": {
          "type": "string"
        },
        "typeParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identifierGeneratorProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identifierGeneratorStrategy": {
          "type": "string"
        },
        "nullValue": {
          "type": "string"
        },
        "table": {
          "$ref": "#/definitions/Table"
        },
        "foreignKeyName": {
          "type": "string"
        },
        "foreignKeyDefinition": {
          "type": "string"
        },
        "alternateUniqueKey": {
          "type": "boolean"
        },
        "cascadeDeleteEnabled": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "componentClassName": {
          "type": "string"
        },
        "embedded": {
          "type": "boolean"
        },
        "parentProperty": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/PersistentClass"
        },
        "dynamic": {
          "type": "boolean"
        },
        "metaAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "roleName": {
          "type": "string"
        },
        "propertySpan": {
          "type": "integer",
          "format": "int32"
        },
        "propertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "tuplizerMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "columnIterator": {
          "$ref": "#/definitions/IteratorSelectable"
        },
        "key": {
          "type": "boolean"
        },
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        },
        "columnInsertability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "columnUpdateability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "serviceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        },
        "nullable": {
          "type": "boolean"
        },
        "updateable": {
          "type": "boolean"
        },
        "lob": {
          "type": "boolean"
        },
        "nationalized": {
          "type": "boolean"
        },
        "constraintColumns": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "typeSpecified": {
          "type": "boolean"
        },
        "version": {
          "type": "boolean"
        },
        "fetchMode": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "JOIN",
            "SELECT"
          ]
        },
        "simpleValue": {
          "type": "boolean"
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "resolved": {
          "type": "boolean"
        }
      }
    },
    "Connection": {
      "type": "object",
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean"
        },
        "autoCommit": {
          "type": "boolean"
        },
        "metaData": {
          "$ref": "#/definitions/DatabaseMetaData"
        },
        "catalog": {
          "type": "string"
        },
        "transactionIsolation": {
          "type": "integer",
          "format": "int32"
        },
        "warnings": {
          "$ref": "#/definitions/SQLWarning"
        },
        "typeMap": {
          "type": "object"
        },
        "holdability": {
          "type": "integer",
          "format": "int32"
        },
        "clientInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "schema": {
          "type": "string"
        },
        "networkTimeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConverterAutoApplyHandler": {
      "type": "object"
    },
    "CordaPersistence": {
      "type": "object",
      "properties": {
        "jdbcUrl": {
          "type": "string"
        },
        "closeConnection": {
          "type": "boolean"
        },
        "entityManagerFactory": {
          "$ref": "#/definitions/SessionFactory"
        },
        "hikariPoolThreadLocal": {
          "$ref": "#/definitions/ThreadLocalListObject"
        },
        "hibernateConfig": {
          "$ref": "#/definitions/HibernateConfiguration"
        },
        "dataSource": {
          "$ref": "#/definitions/DataSource"
        }
      }
    },
    "CordappImpl": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cordappClasses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "initiatedFlows": {
          "type": "array"
        },
        "rpcFlows": {
          "type": "array"
        },
        "serviceFlows": {
          "type": "array"
        },
        "schedulableFlows": {
          "type": "array"
        },
        "services": {
          "type": "array"
        },
        "serializationWhitelists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SerializationWhitelist"
          }
        },
        "serializationCustomSerializers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SerializationCustomSerializerObjectObject"
          }
        },
        "customSchemas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MappedSchema"
          }
        },
        "allFlows": {
          "type": "array"
        },
        "jarPath": {
          "type": "string",
          "format": "url"
        },
        "info": {
          "$ref": "#/definitions/Info"
        },
        "jarHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "minimumPlatformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "targetPlatformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "loaded": {
          "type": "boolean"
        }
      }
    },
    "CordappProviderInternal": {
      "type": "object",
      "properties": {
        "cordapps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CordappImpl"
          }
        },
        "appContext": {
          "$ref": "#/definitions/CordappContext"
        }
      }
    },
    "Counter": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CriteriaBuilder": {
      "type": "object"
    },
    "CurrentTenantIdentifierResolver": {
      "type": "object"
    },
    "CustomEntityDirtinessStrategy": {
      "type": "object"
    },
    "DBTransactionMappingStorage": {
      "type": "object",
      "properties": {
        "updates": {
          "$ref": "#/definitions/PublishSubjectStateMachineTransactionMapping"
        }
      }
    },
    "DataSource": {
      "type": "object",
      "properties": {
        "connection": {
          "$ref": "#/definitions/Connection"
        },
        "logWriter": {
          "$ref": "#/definitions/PrintWriter"
        },
        "loginTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "parentLogger": {
          "$ref": "#/definitions/Logger"
        }
      }
    },
    "Database": {
      "type": "object",
      "properties": {
        "dialect": {
          "$ref": "#/definitions/Dialect"
        },
        "buildingOptions": {
          "$ref": "#/definitions/MetadataBuildingOptions"
        },
        "jdbcEnvironment": {
          "$ref": "#/definitions/JdbcEnvironment"
        },
        "auxiliaryDatabaseObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuxiliaryDatabaseObject"
          }
        },
        "initCommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InitCommand"
          }
        },
        "defaultNamespace": {
          "$ref": "#/definitions/Namespace"
        },
        "namespaces": {
          "$ref": "#/definitions/IterableNamespace"
        },
        "physicalNamingStrategy": {
          "$ref": "#/definitions/PhysicalNamingStrategy"
        }
      }
    },
    "DatabaseConfig": {
      "type": "object",
      "properties": {
        "initialiseSchema": {
          "type": "boolean"
        },
        "initialiseAppSchema": {
          "type": "string",
          "enum": [
            "NONE",
            "VALIDATE",
            "UPDATE"
          ]
        },
        "transactionIsolationLevel": {
          "type": "string",
          "enum": [
            "NONE",
            "READ_UNCOMMITTED",
            "READ_COMMITTED",
            "REPEATABLE_READ",
            "SERIALIZABLE"
          ]
        },
        "exportHibernateJMXStatistics": {
          "type": "boolean"
        },
        "mappedSchemaCacheSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DatabaseMetaData": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "connection": {
          "$ref": "#/definitions/Connection"
        },
        "typeInfo": {
          "$ref": "#/definitions/ResultSet"
        },
        "driverName": {
          "type": "string"
        },
        "databaseProductName": {
          "type": "string"
        },
        "databaseProductVersion": {
          "type": "string"
        },
        "driverVersion": {
          "type": "string"
        },
        "driverMajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "driverMinorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "identifierQuoteString": {
          "type": "string"
        },
        "sqlkeywords": {
          "type": "string"
        },
        "numericFunctions": {
          "type": "string"
        },
        "stringFunctions": {
          "type": "string"
        },
        "systemFunctions": {
          "type": "string"
        },
        "timeDateFunctions": {
          "type": "string"
        },
        "searchStringEscape": {
          "type": "string"
        },
        "extraNameCharacters": {
          "type": "string"
        },
        "schemaTerm": {
          "type": "string"
        },
        "procedureTerm": {
          "type": "string"
        },
        "catalogTerm": {
          "type": "string"
        },
        "catalogAtStart": {
          "type": "boolean"
        },
        "catalogSeparator": {
          "type": "string"
        },
        "maxBinaryLiteralLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxCharLiteralLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInGroupBy": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInIndex": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInOrderBy": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInSelect": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInTable": {
          "type": "integer",
          "format": "int32"
        },
        "maxConnections": {
          "type": "integer",
          "format": "int32"
        },
        "maxCursorNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxIndexLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxSchemaNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxProcedureNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxCatalogNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxRowSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxStatementLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxStatements": {
          "type": "integer",
          "format": "int32"
        },
        "maxTableNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxTablesInSelect": {
          "type": "integer",
          "format": "int32"
        },
        "maxUserNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "defaultTransactionIsolation": {
          "type": "integer",
          "format": "int32"
        },
        "schemas": {
          "$ref": "#/definitions/ResultSet"
        },
        "catalogs": {
          "$ref": "#/definitions/ResultSet"
        },
        "tableTypes": {
          "$ref": "#/definitions/ResultSet"
        },
        "resultSetHoldability": {
          "type": "integer",
          "format": "int32"
        },
        "databaseMajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "databaseMinorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "jdbcmajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "jdbcminorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "sqlstateType": {
          "type": "integer",
          "format": "int32"
        },
        "rowIdLifetime": {
          "type": "string",
          "enum": [
            "ROWID_UNSUPPORTED",
            "ROWID_VALID_OTHER",
            "ROWID_VALID_SESSION",
            "ROWID_VALID_TRANSACTION",
            "ROWID_VALID_FOREVER"
          ]
        },
        "clientInfoProperties": {
          "$ref": "#/definitions/ResultSet"
        },
        "maxLogicalLobSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DeserializationResolver": {
      "type": "object"
    },
    "DevModeOptions": {
      "type": "object",
      "properties": {
        "disableCheckpointChecker": {
          "type": "boolean"
        },
        "allowCompatibilityZone": {
          "type": "boolean"
        }
      }
    },
    "Dialect": {
      "type": "object",
      "properties": {
        "uniqueDelegate": {
          "$ref": "#/definitions/UniqueDelegate"
        },
        "tableExporter": {
          "$ref": "#/definitions/ExporterTable"
        },
        "sequenceExporter": {
          "$ref": "#/definitions/ExporterSequence"
        },
        "indexExporter": {
          "$ref": "#/definitions/ExporterIndex"
        },
        "foreignKeyExporter": {
          "$ref": "#/definitions/ExporterForeignKey"
        },
        "uniqueKeyExporter": {
          "$ref": "#/definitions/ExporterConstraint"
        },
        "functions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SQLFunction"
          }
        },
        "defaultProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "currentTimestampSQLFunctionName": {
          "type": "string"
        },
        "lobMergeStrategy": {
          "$ref": "#/definitions/LobMergeStrategy"
        },
        "nativeIdentifierGeneratorStrategy": {
          "type": "string"
        },
        "identityColumnSupport": {
          "$ref": "#/definitions/IdentityColumnSupport"
        },
        "querySequencesString": {
          "type": "string"
        },
        "sequenceInformationExtractor": {
          "$ref": "#/definitions/SequenceInformationExtractor"
        },
        "selectGUIDString": {
          "type": "string"
        },
        "limitHandler": {
          "$ref": "#/definitions/LimitHandler"
        },
        "lockTimeoutParameterized": {
          "type": "boolean"
        },
        "forUpdateString": {
          "type": "string"
        },
        "forUpdateNowaitString": {
          "type": "string"
        },
        "forUpdateSkipLockedString": {
          "type": "string"
        },
        "createTableString": {
          "type": "string"
        },
        "createMultisetTableString": {
          "type": "string"
        },
        "defaultMultiTableBulkIdStrategy": {
          "$ref": "#/definitions/MultiTableBulkIdStrategy"
        },
        "currentTimestampSelectStringCallable": {
          "type": "boolean"
        },
        "currentTimestampSelectString": {
          "type": "string"
        },
        "violatedConstraintNameExtracter": {
          "$ref": "#/definitions/ViolatedConstraintNameExtracter"
        },
        "noColumnsInsertString": {
          "type": "string"
        },
        "lowercaseFunction": {
          "type": "string"
        },
        "caseInsensitiveLike": {
          "type": "string"
        },
        "maxAliasLength": {
          "type": "integer",
          "format": "int32"
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "auxiliaryDatabaseObjectExporter": {
          "$ref": "#/definitions/ExporterAuxiliaryDatabaseObject"
        },
        "currentSchemaCommand": {
          "type": "string"
        },
        "schemaNameResolver": {
          "$ref": "#/definitions/SchemaNameResolver"
        },
        "addColumnString": {
          "type": "string"
        },
        "addColumnSuffixString": {
          "type": "string"
        },
        "dropForeignKeyString": {
          "type": "string"
        },
        "tableTypeString": {
          "type": "string"
        },
        "nullColumnString": {
          "type": "string"
        },
        "cascadeConstraintsString": {
          "type": "string"
        },
        "crossJoinSeparator": {
          "type": "string"
        },
        "columnAliasExtractor": {
          "$ref": "#/definitions/ColumnAliasExtractor"
        },
        "inExpressionCountLimit": {
          "type": "integer",
          "format": "int32"
        },
        "callableStatementSupport": {
          "$ref": "#/definitions/CallableStatementSupport"
        },
        "nameQualifierSupport": {
          "type": "string",
          "enum": [
            "CATALOG",
            "SCHEMA",
            "BOTH",
            "NONE"
          ]
        },
        "defaultBatchLoadSizingStrategy": {
          "$ref": "#/definitions/BatchLoadSizingStrategy"
        },
        "jdbcLogWarningsEnabledByDefault": {
          "type": "boolean"
        },
        "legacyLimitHandlerBehaviorEnabled": {
          "type": "boolean"
        }
      }
    },
    "DomainDataRegion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "regionFactory": {
          "$ref": "#/definitions/RegionFactory"
        }
      }
    },
    "EmbeddableType": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "EmbeddableTypeObject": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "EntityDataAccess": {
      "type": "object",
      "properties": {
        "region": {
          "$ref": "#/definitions/DomainDataRegion"
        },
        "accessType": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "READ_WRITE",
            "NONSTRICT_READ_WRITE",
            "TRANSACTIONAL"
          ]
        }
      }
    },
    "EntityDefinition": {
      "type": "object",
      "properties": {
        "entityKeyDefinition": {
          "$ref": "#/definitions/EntityIdentifierDefinition"
        },
        "entityPersister": {
          "$ref": "#/definitions/EntityPersister"
        },
        "attributes": {
          "$ref": "#/definitions/IterableAttributeDefinition"
        }
      }
    },
    "EntityEntryFactory": {
      "type": "object"
    },
    "EntityIdentifierDefinition": {
      "type": "object",
      "properties": {
        "entityDefinition": {
          "$ref": "#/definitions/EntityDefinition"
        },
        "encapsulated": {
          "type": "boolean"
        }
      }
    },
    "EntityManagerFactory": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "cache": {
          "$ref": "#/definitions/Cache"
        },
        "open": {
          "type": "boolean"
        },
        "criteriaBuilder": {
          "$ref": "#/definitions/CriteriaBuilder"
        },
        "metamodel": {
          "$ref": "#/definitions/Metamodel"
        },
        "persistenceUnitUtil": {
          "$ref": "#/definitions/PersistenceUnitUtil"
        }
      }
    },
    "EntityMetamodel": {
      "type": "object",
      "properties": {
        "sessionFactory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "name": {
          "type": "string"
        },
        "rootName": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/EntityType"
        },
        "versioned": {
          "type": "boolean"
        },
        "propertySpan": {
          "type": "integer",
          "format": "int32"
        },
        "versionPropertyIndex": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NonIdentifierAttribute"
          }
        },
        "propertyNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "propertyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "propertyLaziness": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyUpdateability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "nonlazyPropertyUpdateability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyCheckability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyInsertability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyNullability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyVersionability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "cascadeStyles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CascadeStyle"
          }
        },
        "inMemoryValueGenerationStrategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMemoryValueGenerationStrategy"
          }
        },
        "inDatabaseValueGenerationStrategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InDatabaseValueGenerationStrategy"
          }
        },
        "lazy": {
          "type": "boolean"
        },
        "mutable": {
          "type": "boolean"
        },
        "selectBeforeUpdate": {
          "type": "boolean"
        },
        "dynamicUpdate": {
          "type": "boolean"
        },
        "dynamicInsert": {
          "type": "boolean"
        },
        "optimisticLockStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "VERSION",
            "DIRTY",
            "ALL"
          ]
        },
        "polymorphic": {
          "type": "boolean"
        },
        "superclass": {
          "type": "string"
        },
        "explicitPolymorphism": {
          "type": "boolean"
        },
        "inherited": {
          "type": "boolean"
        },
        "subclassEntityNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "entityMode": {
          "type": "string",
          "enum": [
            "POJO",
            "MAP"
          ]
        },
        "bytecodeEnhancementMetadata": {
          "$ref": "#/definitions/BytecodeEnhancementMetadata"
        },
        "abstract": {
          "type": "boolean"
        },
        "instrumented": {
          "type": "boolean"
        },
        "tuplizer": {
          "$ref": "#/definitions/EntityTuplizer"
        },
        "naturalIdentifierInsertGenerated": {
          "type": "boolean"
        },
        "versionGenerated": {
          "type": "boolean"
        },
        "naturalIdentifierCached": {
          "type": "boolean"
        },
        "identifierProperty": {
          "$ref": "#/definitions/IdentifierProperty"
        },
        "versionProperty": {
          "$ref": "#/definitions/VersionProperty"
        },
        "naturalIdentifierProperties": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "EntityNameResolver": {
      "type": "object"
    },
    "EntityNotFoundDelegate": {
      "type": "object"
    },
    "EntityPersister": {
      "type": "object",
      "properties": {
        "factory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "inherited": {
          "type": "boolean"
        },
        "mutable": {
          "type": "boolean"
        },
        "instrumented": {
          "type": "boolean"
        },
        "querySpaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Serializable"
          }
        },
        "versionType": {
          "$ref": "#/definitions/VersionType"
        },
        "propertyUpdateability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyCheckability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyInsertability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyVersionability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "entityMode": {
          "type": "string",
          "enum": [
            "POJO",
            "MAP"
          ]
        },
        "classMetadata": {
          "$ref": "#/definitions/ClassMetadata"
        },
        "propertyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "identifierPropertyName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "propertyNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identifierType": {
          "$ref": "#/definitions/Type"
        },
        "versioned": {
          "type": "boolean"
        },
        "versionProperty": {
          "type": "integer",
          "format": "int32"
        },
        "propertyNullability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "propertyLaziness": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "naturalIdentifierProperties": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "identifierGenerator": {
          "$ref": "#/definitions/IdentifierGenerator"
        },
        "navigableRole": {
          "$ref": "#/definitions/NavigableRole"
        },
        "entityEntryFactory": {
          "$ref": "#/definitions/EntityEntryFactory"
        },
        "rootEntityName": {
          "type": "string"
        },
        "entityMetamodel": {
          "$ref": "#/definitions/EntityMetamodel"
        },
        "propertySpaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Serializable"
          }
        },
        "identifierAssignedByInsert": {
          "type": "boolean"
        },
        "cacheEntryStructure": {
          "$ref": "#/definitions/CacheEntryStructure"
        },
        "naturalIdCacheAccessStrategy": {
          "$ref": "#/definitions/NaturalIdDataAccess"
        },
        "batchLoadable": {
          "type": "boolean"
        },
        "selectBeforeUpdateRequired": {
          "type": "boolean"
        },
        "versionPropertyGenerated": {
          "type": "boolean"
        },
        "entityTuplizer": {
          "$ref": "#/definitions/EntityTuplizer"
        },
        "instrumentationMetadata": {
          "$ref": "#/definitions/BytecodeEnhancementMetadata"
        },
        "propertyInsertGenerationInclusions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NONE",
              "FULL",
              "PARTIAL"
            ]
          }
        },
        "propertyUpdateGenerationInclusions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NONE",
              "FULL",
              "PARTIAL"
            ]
          }
        },
        "propertyCascadeStyles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CascadeStyle"
          }
        },
        "cacheInvalidationRequired": {
          "type": "boolean"
        },
        "lazyPropertiesCacheable": {
          "type": "boolean"
        },
        "cacheAccessStrategy": {
          "$ref": "#/definitions/EntityDataAccess"
        },
        "entityKeyDefinition": {
          "$ref": "#/definitions/EntityIdentifierDefinition"
        },
        "entityPersister": {
          "$ref": "#/definitions/EntityPersister"
        },
        "attributes": {
          "$ref": "#/definitions/IterableAttributeDefinition"
        }
      }
    },
    "EntityTuplizer": {
      "type": "object",
      "properties": {
        "lifecycleImplementor": {
          "type": "boolean"
        },
        "identifierGetter": {
          "$ref": "#/definitions/Getter"
        },
        "versionGetter": {
          "$ref": "#/definitions/Getter"
        },
        "entityNameResolvers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityNameResolver"
          }
        },
        "entityMode": {
          "type": "string",
          "enum": [
            "POJO",
            "MAP"
          ]
        }
      }
    },
    "EntityTuplizerFactory": {
      "type": "object"
    },
    "EntityType": {
      "type": "object",
      "properties": {
        "associatedEntityName": {
          "type": "string"
        },
        "referenceToPrimaryKey": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "mutable": {
          "type": "boolean"
        },
        "propertyName": {
          "type": "string"
        },
        "associationType": {
          "type": "boolean"
        },
        "entityType": {
          "type": "boolean"
        },
        "logicalOneToOne": {
          "type": "boolean"
        },
        "oneToOne": {
          "type": "boolean"
        },
        "rhsuniqueKeyPropertyName": {
          "type": "string"
        },
        "lhspropertyName": {
          "type": "string"
        },
        "alwaysDirtyChecked": {
          "type": "boolean"
        },
        "foreignKeyDirection": {
          "type": "string",
          "enum": [
            "TO_PARENT",
            "FROM_PARENT"
          ]
        },
        "anyType": {
          "type": "boolean"
        },
        "componentType": {
          "type": "boolean"
        },
        "collectionType": {
          "type": "boolean"
        }
      }
    },
    "EntityTypeObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "supertype": {
          "$ref": "#/definitions/IdentifiableTypeObject"
        },
        "idClassAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "idType": {
          "$ref": "#/definitions/TypeObject"
        },
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "Enumeration": {
      "type": "object"
    },
    "EnumerationRefAddr": {
      "type": "object"
    },
    "EnumerationString": {
      "type": "object"
    },
    "ErrorManager": {
      "type": "object"
    },
    "Executable": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "modifiers": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "synthetic": {
          "type": "boolean"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeVariableObject"
          }
        },
        "parameterTypes": {
          "type": "array"
        },
        "varArgs": {
          "type": "boolean"
        },
        "annotatedParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotatedType"
          }
        },
        "parameterCount": {
          "type": "integer",
          "format": "int32"
        },
        "parameterAnnotations": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Annotation"
            }
          }
        },
        "genericParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "exceptionTypes": {
          "type": "array"
        },
        "genericExceptionTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "annotatedReturnType": {
          "$ref": "#/definitions/AnnotatedType"
        },
        "annotatedReceiverType": {
          "$ref": "#/definitions/AnnotatedType"
        },
        "annotatedExceptionTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotatedType"
          }
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "accessible": {
          "type": "boolean"
        }
      }
    },
    "Exporter": {
      "type": "object"
    },
    "ExporterAuxiliaryDatabaseObject": {
      "type": "object"
    },
    "ExporterConstraint": {
      "type": "object"
    },
    "ExporterForeignKey": {
      "type": "object"
    },
    "ExporterIndex": {
      "type": "object"
    },
    "ExporterSequence": {
      "type": "object"
    },
    "ExporterTable": {
      "type": "object"
    },
    "ExtractedDatabaseMetaData": {
      "type": "object",
      "properties": {
        "jdbcEnvironment": {
          "$ref": "#/definitions/JdbcEnvironment"
        },
        "connectionCatalogName": {
          "type": "string"
        },
        "connectionSchemaName": {
          "type": "string"
        },
        "typeInfoSet": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TypeInfo"
          }
        },
        "extraKeywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sqlStateType": {
          "type": "string",
          "enum": [
            "XOpen",
            "SQL99",
            "UNKNOWN"
          ]
        }
      }
    },
    "Fetch": {
      "type": "object",
      "properties": {
        "entity": {
          "type": "string"
        },
        "association": {
          "type": "string"
        },
        "style": {
          "type": "string"
        }
      }
    },
    "FetchProfile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "enum": [
            "HBM",
            "ANNOTATIONS",
            "OTHER"
          ]
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Fetch"
          }
        }
      }
    },
    "FileBasedCertificateStoreSupplier": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/Path"
        },
        "storePassword": {
          "type": "string"
        },
        "entryPassword": {
          "type": "string"
        },
        "optional": {
          "$ref": "#/definitions/CertificateStore"
        }
      }
    },
    "Filter": {
      "type": "object"
    },
    "FilterDefinition": {
      "type": "object",
      "properties": {
        "filterName": {
          "type": "string"
        },
        "defaultFilterCondition": {
          "type": "string"
        },
        "parameterTypes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Type"
          }
        },
        "parameterNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FlowOverride": {
      "type": "object",
      "properties": {
        "initiator": {
          "type": "string"
        },
        "responder": {
          "type": "string"
        }
      }
    },
    "FlowOverrideConfig": {
      "type": "object",
      "properties": {
        "overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlowOverride"
          }
        }
      }
    },
    "FlowTimeoutConfiguration": {
      "type": "object",
      "properties": {
        "timeout": {
          "$ref": "#/definitions/Duration"
        },
        "maxRestartCount": {
          "type": "integer",
          "format": "int32"
        },
        "backoffBase": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "FlowsDrainingModeOperations": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "values": {
          "$ref": "#/definitions/ObservablePairBooleanBoolean"
        }
      }
    },
    "ForeignKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Column"
          }
        },
        "table": {
          "$ref": "#/definitions/Table"
        },
        "referencedTable": {
          "$ref": "#/definitions/Table"
        },
        "referencedEntityName": {
          "type": "string"
        },
        "keyDefinition": {
          "type": "string"
        },
        "cascadeDeleteEnabled": {
          "type": "boolean"
        },
        "referencedColumns": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "creationEnabled": {
          "type": "boolean"
        },
        "exportIdentifier": {
          "type": "string"
        },
        "referenceToPrimaryKey": {
          "type": "boolean"
        },
        "physicalConstraint": {
          "type": "boolean"
        },
        "columnIterator": {
          "$ref": "#/definitions/IteratorColumn"
        },
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Formatter": {
      "type": "object"
    },
    "Gauge": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        }
      }
    },
    "GenericDeclaration": {
      "type": "object",
      "properties": {
        "typeParameters": {
          "type": "array"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "Getter": {
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/Method"
        },
        "methodName": {
          "type": "string"
        },
        "member": {
          "$ref": "#/definitions/Member"
        }
      }
    },
    "Handler": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/Filter"
        },
        "formatter": {
          "$ref": "#/definitions/Formatter"
        },
        "errorManager": {
          "$ref": "#/definitions/ErrorManager"
        },
        "encoding": {
          "type": "string"
        },
        "level": {
          "$ref": "#/definitions/Level"
        }
      }
    },
    "HibernateConfiguration": {
      "type": "object",
      "properties": {
        "sessionFactoryForRegisteredSchemas": {
          "$ref": "#/definitions/SessionFactory"
        },
        "customClassLoader": {
          "$ref": "#/definitions/ClassLoader"
        }
      }
    },
    "Histogram": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "$ref": "#/definitions/Snapshot"
        }
      }
    },
    "IdGeneratorStrategyInterpreter": {
      "type": "object"
    },
    "IdentifiableType": {
      "type": "object",
      "properties": {
        "idClassAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "idType": {
          "$ref": "#/definitions/TypeObject"
        },
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "IdentifiableTypeObject": {
      "type": "object",
      "properties": {
        "supertype": {
          "$ref": "#/definitions/IdentifiableTypeObject"
        },
        "idClassAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "idType": {
          "$ref": "#/definitions/TypeObject"
        },
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "canonicalName": {
          "type": "string"
        },
        "quoted": {
          "type": "boolean"
        }
      }
    },
    "IdentifierGenerator": {
      "type": "object"
    },
    "IdentifierGeneratorFactory": {
      "type": "object",
      "properties": {
        "dialect": {
          "$ref": "#/definitions/Dialect"
        }
      }
    },
    "IdentifierHelper": {
      "type": "object"
    },
    "IdentifierProperty": {
      "type": "object",
      "properties": {
        "virtual": {
          "type": "boolean"
        },
        "embedded": {
          "type": "boolean"
        },
        "unsavedValue": {
          "$ref": "#/definitions/IdentifierValue"
        },
        "identifierGenerator": {
          "$ref": "#/definitions/IdentifierGenerator"
        },
        "identifierAssignedByInsert": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "node": {
          "type": "string"
        }
      }
    },
    "IdentifierValue": {
      "type": "object"
    },
    "IdentityColumnSupport": {
      "type": "object",
      "properties": {
        "identityInsertString": {
          "type": "string"
        }
      }
    },
    "ImplicitNamingStrategy": {
      "type": "object"
    },
    "InDatabaseValueGenerationStrategy": {
      "type": "object",
      "properties": {
        "generationTiming": {
          "type": "string",
          "enum": [
            "NEVER",
            "INSERT",
            "ALWAYS"
          ]
        },
        "referencedColumnValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InFlightMetadataCollector": {
      "type": "object",
      "properties": {
        "bootstrapContext": {
          "$ref": "#/definitions/BootstrapContext"
        },
        "entityBindingMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PersistentClass"
          }
        },
        "classmateContext": {
          "$ref": "#/definitions/ClassmateContext"
        },
        "attributeConverterAutoApplyHandler": {
          "$ref": "#/definitions/ConverterAutoApplyHandler"
        },
        "inSecondPass": {
          "type": "boolean"
        },
        "identifierGeneratorFactory": {
          "$ref": "#/definitions/IdentifierGeneratorFactory"
        },
        "typeResolver": {
          "$ref": "#/definitions/TypeResolver"
        },
        "typeConfiguration": {
          "$ref": "#/definitions/TypeConfiguration"
        },
        "mappedSuperclassMappingsCopy": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MappedSuperclass"
          }
        },
        "metadataBuildingOptions": {
          "$ref": "#/definitions/MetadataBuildingOptions"
        },
        "database": {
          "$ref": "#/definitions/Database"
        },
        "sessionFactoryBuilder": {
          "$ref": "#/definitions/SessionFactoryBuilder"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "entityBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersistentClass"
          }
        },
        "collectionBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          }
        },
        "imports": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namedQueryDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedQueryDefinition"
          }
        },
        "namedNativeQueryDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedSQLQueryDefinition"
          }
        },
        "namedProcedureCallDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedProcedureCallDefinition"
          }
        },
        "resultSetMappingDefinitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResultSetMappingDefinition"
          }
        },
        "filterDefinitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FilterDefinition"
          }
        },
        "fetchProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchProfile"
          }
        },
        "namedEntityGraphs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NamedEntityGraphDefinition"
          }
        },
        "sqlFunctionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SQLFunction"
          }
        }
      }
    },
    "InMemoryValueGenerationStrategy": {
      "type": "object",
      "properties": {
        "generationTiming": {
          "type": "string",
          "enum": [
            "NEVER",
            "INSERT",
            "ALWAYS"
          ]
        },
        "valueGenerator": {
          "$ref": "#/definitions/ValueGenerator"
        }
      }
    },
    "IndexView": {
      "type": "object",
      "properties": {
        "knownClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassInfo"
          }
        }
      }
    },
    "InitCommand": {
      "type": "object",
      "properties": {
        "initCommands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Interceptor": {
      "type": "object"
    },
    "IterableAttributeDefinition": {
      "type": "object"
    },
    "IterableEntryStringLockMode": {
      "type": "object"
    },
    "IterableNamespace": {
      "type": "object"
    },
    "IterableSequence": {
      "type": "object"
    },
    "IteratorColumn": {
      "type": "object"
    },
    "IteratorEntryStringLockMode": {
      "type": "object"
    },
    "IteratorIndex": {
      "type": "object"
    },
    "IteratorSelectable": {
      "type": "object"
    },
    "IteratorUniqueKey": {
      "type": "object"
    },
    "JavaTypeDescriptorRegistry": {
      "type": "object"
    },
    "JdbcConnectionAccess": {
      "type": "object"
    },
    "JdbcEnvironment": {
      "type": "object",
      "properties": {
        "dialect": {
          "$ref": "#/definitions/Dialect"
        },
        "sqlExceptionHelper": {
          "$ref": "#/definitions/SqlExceptionHelper"
        },
        "nameQualifierSupport": {
          "type": "string",
          "enum": [
            "CATALOG",
            "SCHEMA",
            "BOTH",
            "NONE"
          ]
        },
        "identifierHelper": {
          "$ref": "#/definitions/IdentifierHelper"
        },
        "currentCatalog": {
          "$ref": "#/definitions/Identifier"
        },
        "lobCreatorBuilder": {
          "$ref": "#/definitions/LobCreatorBuilder"
        },
        "extractedDatabaseMetaData": {
          "$ref": "#/definitions/ExtractedDatabaseMetaData"
        },
        "currentSchema": {
          "$ref": "#/definitions/Identifier"
        },
        "qualifiedObjectNameFormatter": {
          "$ref": "#/definitions/QualifiedObjectNameFormatter"
        }
      }
    },
    "JdbcServices": {
      "type": "object",
      "properties": {
        "jdbcEnvironment": {
          "$ref": "#/definitions/JdbcEnvironment"
        },
        "sqlStatementLogger": {
          "$ref": "#/definitions/SqlStatementLogger"
        },
        "extractedMetaDataSupport": {
          "$ref": "#/definitions/ExtractedDatabaseMetaData"
        },
        "bootstrapJdbcConnectionAccess": {
          "$ref": "#/definitions/JdbcConnectionAccess"
        },
        "resultSetWrapper": {
          "$ref": "#/definitions/ResultSetWrapper"
        },
        "dialect": {
          "$ref": "#/definitions/Dialect"
        },
        "sqlExceptionHelper": {
          "$ref": "#/definitions/SqlExceptionHelper"
        }
      }
    },
    "JpaCompliance": {
      "type": "object",
      "properties": {
        "jpaQueryComplianceEnabled": {
          "type": "boolean"
        },
        "jpaListComplianceEnabled": {
          "type": "boolean"
        },
        "jpaClosedComplianceEnabled": {
          "type": "boolean"
        },
        "jpaTransactionComplianceEnabled": {
          "type": "boolean"
        },
        "jpaProxyComplianceEnabled": {
          "type": "boolean"
        },
        "jpaCacheComplianceEnabled": {
          "type": "boolean"
        },
        "globalGeneratorScopeEnabled": {
          "type": "boolean"
        }
      }
    },
    "JtaPlatform": {
      "type": "object",
      "properties": {
        "currentStatus": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "KeyStore": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "provider": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "KeyValue": {
      "type": "object",
      "properties": {
        "nullValue": {
          "type": "string"
        },
        "updateable": {
          "type": "boolean"
        },
        "cascadeDeleteEnabled": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "table": {
          "$ref": "#/definitions/Table"
        },
        "serviceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        },
        "nullable": {
          "type": "boolean"
        },
        "columnIterator": {
          "$ref": "#/definitions/IteratorSelectable"
        },
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        },
        "fetchMode": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "JOIN",
            "SELECT"
          ]
        },
        "alternateUniqueKey": {
          "type": "boolean"
        },
        "simpleValue": {
          "type": "boolean"
        },
        "columnInsertability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "columnUpdateability": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        }
      }
    },
    "LazyAttributesMetadata": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "fetchGroupNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "lazyAttributeNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Level": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "resourceBundleName": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        }
      }
    },
    "LimitHandler": {
      "type": "object"
    },
    "LobCreatorBuilder": {
      "type": "object"
    },
    "LobHelper": {
      "type": "object"
    },
    "LobMergeStrategy": {
      "type": "object"
    },
    "Locale": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "variant": {
          "type": "string"
        },
        "extensionKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "unicodeLocaleAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "unicodeLocaleKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "iso3Language": {
          "type": "string"
        },
        "iso3Country": {
          "type": "string"
        },
        "displayLanguage": {
          "type": "string"
        },
        "displayScript": {
          "type": "string"
        },
        "displayCountry": {
          "type": "string"
        },
        "displayVariant": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "LockOptions": {
      "type": "object",
      "properties": {
        "lockMode": {
          "type": "string",
          "enum": [
            "NONE",
            "READ",
            "UPGRADE",
            "UPGRADE_NOWAIT",
            "UPGRADE_SKIPLOCKED",
            "WRITE",
            "FORCE",
            "OPTIMISTIC",
            "OPTIMISTIC_FORCE_INCREMENT",
            "PESSIMISTIC_READ",
            "PESSIMISTIC_WRITE",
            "PESSIMISTIC_FORCE_INCREMENT"
          ]
        },
        "followOnLocking": {
          "type": "boolean"
        },
        "scope": {
          "type": "boolean"
        },
        "aliasLockCount": {
          "type": "integer",
          "format": "int32"
        },
        "aliasLockIterator": {
          "$ref": "#/definitions/IteratorEntryStringLockMode"
        },
        "aliasSpecificLocks": {
          "$ref": "#/definitions/IterableEntryStringLockMode"
        },
        "timeOut": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedType": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "ManagedTypeObject": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "MappedSuperclass": {
      "type": "object",
      "properties": {
        "superMappedSuperclass": {
          "$ref": "#/definitions/MappedSuperclass"
        },
        "superPersistentClass": {
          "$ref": "#/definitions/PersistentClass"
        },
        "identifierProperty": {
          "$ref": "#/definitions/Property"
        },
        "version": {
          "$ref": "#/definitions/Property"
        },
        "identifierMapper": {
          "$ref": "#/definitions/Component"
        },
        "declaredVersion": {
          "$ref": "#/definitions/Property"
        },
        "declaredIdentifierProperty": {
          "$ref": "#/definitions/Property"
        },
        "declaredIdentifierMapper": {
          "$ref": "#/definitions/Component"
        },
        "declaredPropertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "versioned": {
          "type": "boolean"
        }
      }
    },
    "MappingDefaults": {
      "type": "object",
      "properties": {
        "implicitCacheAccessType": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "READ_WRITE",
            "NONSTRICT_READ_WRITE",
            "TRANSACTIONAL"
          ]
        },
        "implicitCatalogName": {
          "type": "string"
        },
        "implicitSchemaName": {
          "type": "string"
        },
        "implicitIdColumnName": {
          "type": "string"
        },
        "implicitTenantIdColumnName": {
          "type": "string"
        },
        "implicitPackageName": {
          "type": "string"
        },
        "implicitDiscriminatorColumnName": {
          "type": "string"
        },
        "autoImportEnabled": {
          "type": "boolean"
        },
        "implicitCascadeStyleName": {
          "type": "string"
        },
        "implicitPropertyAccessorName": {
          "type": "string"
        }
      }
    },
    "MemberResolver": {
      "type": "object"
    },
    "MessagingService": {
      "type": "object",
      "properties": {
        "ourSenderUUID": {
          "type": "string"
        },
        "myAddress": {
          "$ref": "#/definitions/SingleMessageRecipient"
        }
      }
    },
    "MetadataBuildingContext": {
      "type": "object",
      "properties": {
        "buildingOptions": {
          "$ref": "#/definitions/MetadataBuildingOptions"
        },
        "bootstrapContext": {
          "$ref": "#/definitions/BootstrapContext"
        },
        "classLoaderAccess": {
          "$ref": "#/definitions/ClassLoaderAccess"
        },
        "metadataCollector": {
          "$ref": "#/definitions/InFlightMetadataCollector"
        },
        "mappingDefaults": {
          "$ref": "#/definitions/MappingDefaults"
        },
        "objectNameNormalizer": {
          "$ref": "#/definitions/ObjectNameNormalizer"
        }
      }
    },
    "MetadataBuildingOptions": {
      "type": "object",
      "properties": {
        "serviceRegistry": {
          "$ref": "#/definitions/StandardServiceRegistry"
        },
        "multiTenancyStrategy": {
          "type": "string",
          "enum": [
            "DISCRIMINATOR",
            "SCHEMA",
            "DATABASE",
            "NONE"
          ]
        },
        "basicTypeRegistrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicTypeRegistration"
          }
        },
        "tempClassLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "implicitNamingStrategy": {
          "$ref": "#/definitions/ImplicitNamingStrategy"
        },
        "physicalNamingStrategy": {
          "$ref": "#/definitions/PhysicalNamingStrategy"
        },
        "sharedCacheMode": {
          "type": "string",
          "enum": [
            "ALL",
            "NONE",
            "ENABLE_SELECTIVE",
            "DISABLE_SELECTIVE",
            "UNSPECIFIED"
          ]
        },
        "implicitCacheAccessType": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "READ_WRITE",
            "NONSTRICT_READ_WRITE",
            "TRANSACTIONAL"
          ]
        },
        "idGenerationTypeInterpreter": {
          "$ref": "#/definitions/IdGeneratorStrategyInterpreter"
        },
        "specjProprietarySyntaxEnabled": {
          "type": "boolean"
        },
        "sourceProcessOrdering": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "HBM",
              "CLASS"
            ]
          }
        },
        "schemaCharset": {
          "type": "string"
        },
        "archiveDescriptorFactory": {
          "$ref": "#/definitions/ArchiveDescriptorFactory"
        },
        "scanOptions": {
          "$ref": "#/definitions/ScanOptions"
        },
        "mappingDefaults": {
          "$ref": "#/definitions/MappingDefaults"
        },
        "scanEnvironment": {
          "$ref": "#/definitions/ScanEnvironment"
        },
        "scanner": {
          "type": "object"
        },
        "reflectionManager": {
          "$ref": "#/definitions/ReflectionManager"
        },
        "jandexView": {
          "$ref": "#/definitions/IndexView"
        },
        "sqlFunctions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SQLFunction"
          }
        },
        "auxiliaryDatabaseObjectList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuxiliaryDatabaseObject"
          }
        },
        "attributeConverters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeConverterInfo"
          }
        },
        "cacheRegionDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CacheRegionDefinition"
          }
        }
      }
    },
    "MetadataImplementor": {
      "type": "object",
      "properties": {
        "typeResolver": {
          "$ref": "#/definitions/TypeResolver"
        },
        "typeConfiguration": {
          "$ref": "#/definitions/TypeConfiguration"
        },
        "mappedSuperclassMappingsCopy": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MappedSuperclass"
          }
        },
        "metadataBuildingOptions": {
          "$ref": "#/definitions/MetadataBuildingOptions"
        },
        "database": {
          "$ref": "#/definitions/Database"
        },
        "sessionFactoryBuilder": {
          "$ref": "#/definitions/SessionFactoryBuilder"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "entityBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersistentClass"
          }
        },
        "collectionBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          }
        },
        "imports": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namedQueryDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedQueryDefinition"
          }
        },
        "namedNativeQueryDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedSQLQueryDefinition"
          }
        },
        "namedProcedureCallDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedProcedureCallDefinition"
          }
        },
        "resultSetMappingDefinitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResultSetMappingDefinition"
          }
        },
        "filterDefinitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FilterDefinition"
          }
        },
        "fetchProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FetchProfile"
          }
        },
        "namedEntityGraphs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NamedEntityGraphDefinition"
          }
        },
        "sqlFunctionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SQLFunction"
          }
        },
        "identifierGeneratorFactory": {
          "$ref": "#/definitions/IdentifierGeneratorFactory"
        }
      }
    },
    "Metamodel": {
      "type": "object",
      "properties": {
        "managedTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ManagedTypeObject"
          }
        },
        "entities": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EntityTypeObject"
          }
        },
        "embeddables": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EmbeddableTypeObject"
          }
        }
      }
    },
    "MetamodelImplementor": {
      "type": "object",
      "properties": {
        "typeConfiguration": {
          "$ref": "#/definitions/TypeConfiguration"
        },
        "sessionFactory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "entityNameResolvers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityNameResolver"
          }
        },
        "allCollectionRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allEntityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ManagedTypeObject"
          }
        },
        "entities": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EntityTypeObject"
          }
        },
        "embeddables": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EmbeddableTypeObject"
          }
        }
      }
    },
    "Meter": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "fifteenMinuteRate": {
          "type": "number",
          "format": "double"
        },
        "fiveMinuteRate": {
          "type": "number",
          "format": "double"
        },
        "meanRate": {
          "type": "number",
          "format": "double"
        },
        "oneMinuteRate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Method": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "name": {
          "type": "string"
        },
        "parameterTypes": {
          "type": "array"
        },
        "exceptionTypes": {
          "type": "array"
        },
        "modifiers": {
          "type": "integer",
          "format": "int32"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "parameterAnnotations": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Annotation"
            }
          }
        },
        "synthetic": {
          "type": "boolean"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeVariableMethod"
          }
        },
        "default": {
          "type": "boolean"
        },
        "varArgs": {
          "type": "boolean"
        },
        "parameterCount": {
          "type": "integer",
          "format": "int32"
        },
        "genericReturnType": {
          "$ref": "#/definitions/Type"
        },
        "genericParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "genericExceptionTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "bridge": {
          "type": "boolean"
        },
        "defaultValue": {
          "type": "object"
        },
        "annotatedReturnType": {
          "$ref": "#/definitions/AnnotatedType"
        },
        "annotatedParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotatedType"
          }
        },
        "annotatedReceiverType": {
          "$ref": "#/definitions/AnnotatedType"
        },
        "annotatedExceptionTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotatedType"
          }
        },
        "accessible": {
          "type": "boolean"
        }
      }
    },
    "Metric": {
      "type": "object"
    },
    "MetricRegistry": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Metric"
          }
        },
        "counters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Counter"
          }
        },
        "names": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "gauges": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Gauge"
          }
        },
        "histograms": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Histogram"
          }
        },
        "meters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Meter"
          }
        },
        "timers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Timer"
          }
        }
      }
    },
    "MonitoringService": {
      "type": "object",
      "properties": {
        "metrics": {
          "$ref": "#/definitions/MetricRegistry"
        }
      }
    },
    "MultiTableBulkIdStrategy": {
      "type": "object"
    },
    "MutableJpaCompliance": {
      "type": "object",
      "properties": {
        "jpaQueryComplianceEnabled": {
          "type": "boolean"
        },
        "jpaListComplianceEnabled": {
          "type": "boolean"
        },
        "jpaClosedComplianceEnabled": {
          "type": "boolean"
        },
        "jpaTransactionComplianceEnabled": {
          "type": "boolean"
        },
        "jpaProxyComplianceEnabled": {
          "type": "boolean"
        },
        "jpaCacheComplianceEnabled": {
          "type": "boolean"
        },
        "globalGeneratorScopeEnabled": {
          "type": "boolean"
        }
      }
    },
    "MutualSslConfiguration": {
      "type": "object",
      "properties": {
        "keyStore": {
          "$ref": "#/definitions/FileBasedCertificateStoreSupplier"
        },
        "trustStore": {
          "$ref": "#/definitions/FileBasedCertificateStoreSupplier"
        }
      }
    },
    "Name": {
      "type": "object",
      "properties": {
        "catalog": {
          "$ref": "#/definitions/Identifier"
        },
        "schema": {
          "$ref": "#/definitions/Identifier"
        }
      }
    },
    "NamedCacheFactory": {
      "type": "object"
    },
    "NamedEntityGraph": {
      "type": "object"
    },
    "NamedEntityGraphDefinition": {
      "type": "object",
      "properties": {
        "annotation": {
          "$ref": "#/definitions/NamedEntityGraph"
        },
        "jpaEntityName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "registeredName": {
          "type": "string"
        }
      }
    },
    "NamedProcedureCallDefinition": {
      "type": "object",
      "properties": {
        "registeredName": {
          "type": "string"
        },
        "procedureName": {
          "type": "string"
        }
      }
    },
    "NamedQueryDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "cacheable": {
          "type": "boolean"
        },
        "cacheRegion": {
          "type": "string"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "lockOptions": {
          "$ref": "#/definitions/LockOptions"
        },
        "fetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "flushMode": {
          "type": "string",
          "enum": [
            "MANUAL",
            "COMMIT",
            "AUTO",
            "ALWAYS"
          ]
        },
        "parameterTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "cacheMode": {
          "type": "string",
          "enum": [
            "NORMAL",
            "IGNORE",
            "GET",
            "PUT",
            "REFRESH"
          ]
        },
        "readOnly": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        },
        "firstResult": {
          "type": "integer",
          "format": "int32"
        },
        "maxResults": {
          "type": "integer",
          "format": "int32"
        },
        "queryString": {
          "type": "string"
        }
      }
    },
    "NamedQueryRepository": {
      "type": "object"
    },
    "NamedSQLQueryDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "cacheable": {
          "type": "boolean"
        },
        "cacheRegion": {
          "type": "string"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "lockOptions": {
          "$ref": "#/definitions/LockOptions"
        },
        "fetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "flushMode": {
          "type": "string",
          "enum": [
            "MANUAL",
            "COMMIT",
            "AUTO",
            "ALWAYS"
          ]
        },
        "parameterTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "cacheMode": {
          "type": "string",
          "enum": [
            "NORMAL",
            "IGNORE",
            "GET",
            "PUT",
            "REFRESH"
          ]
        },
        "readOnly": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        },
        "firstResult": {
          "type": "integer",
          "format": "int32"
        },
        "maxResults": {
          "type": "integer",
          "format": "int32"
        },
        "queryReturns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NativeSQLQueryReturn"
          }
        },
        "querySpaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callable": {
          "type": "boolean"
        },
        "resultSetRef": {
          "type": "string"
        },
        "queryString": {
          "type": "string"
        }
      }
    },
    "Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/Name"
        },
        "physicalName": {
          "$ref": "#/definitions/Name"
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Table"
          }
        },
        "sequences": {
          "$ref": "#/definitions/IterableSequence"
        }
      }
    },
    "NativeQueryInterpreter": {
      "type": "object"
    },
    "NativeSQLQueryReturn": {
      "type": "object"
    },
    "NaturalIdDataAccess": {
      "type": "object",
      "properties": {
        "region": {
          "$ref": "#/definitions/DomainDataRegion"
        },
        "accessType": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "READ_WRITE",
            "NONSTRICT_READ_WRITE",
            "TRANSACTIONAL"
          ]
        }
      }
    },
    "NavigableRole": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/NavigableRole"
        },
        "navigableName": {
          "type": "string"
        },
        "fullPath": {
          "type": "string"
        },
        "root": {
          "type": "boolean"
        }
      }
    },
    "NetworkMapCacheInternal": {
      "type": "object",
      "properties": {
        "nodeReady": {
          "$ref": "#/definitions/OpenFutureVoid"
        },
        "allNodeHashes": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "notaryIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "changed": {
          "$ref": "#/definitions/ObservableMapChange"
        },
        "allNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInfo"
          }
        }
      }
    },
    "NetworkMapUpdater": {
      "type": "object"
    },
    "NetworkParameterAcceptanceSettings": {
      "type": "object",
      "properties": {
        "autoAcceptEnabled": {
          "type": "boolean"
        },
        "excludedAutoAcceptableParameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NetworkParametersStorage": {
      "type": "object",
      "properties": {
        "defaultHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "currentHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "NetworkServicesConfig": {
      "type": "object",
      "properties": {
        "doormanURL": {
          "type": "string",
          "format": "url"
        },
        "networkMapURL": {
          "type": "string",
          "format": "url"
        },
        "pnm": {
          "type": "string",
          "format": "uuid"
        },
        "inferred": {
          "type": "boolean"
        }
      }
    },
    "NodeConfiguration": {
      "type": "object",
      "properties": {
        "notary": {
          "$ref": "#/definitions/NotaryConfig"
        },
        "database": {
          "$ref": "#/definitions/DatabaseConfig"
        },
        "flowOverrides": {
          "$ref": "#/definitions/FlowOverrideConfig"
        },
        "signingCertificateStore": {
          "$ref": "#/definitions/FileBasedCertificateStoreSupplier"
        },
        "networkParameterAcceptanceSettings": {
          "$ref": "#/definitions/NetworkParameterAcceptanceSettings"
        },
        "cordappSignerKeyFingerprintBlacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cordappDirectories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Path"
          }
        },
        "myLegalName": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        },
        "transactionCacheSizeBytes": {
          "type": "integer",
          "format": "int64"
        },
        "networkServices": {
          "$ref": "#/definitions/NetworkServicesConfig"
        },
        "additionalNodeInfoPollingFrequencyMsec": {
          "type": "integer",
          "format": "int64"
        },
        "extraNetworkMapKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "drainingModePollPeriod": {
          "$ref": "#/definitions/Duration"
        },
        "certificatesDirectory": {
          "$ref": "#/definitions/Path"
        },
        "noLocalShell": {
          "type": "boolean"
        },
        "dataSourceProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "messagingServerAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "p2pAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "security": {
          "$ref": "#/definitions/SecurityConfiguration"
        },
        "rpcUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "messagingServerExternal": {
          "type": "boolean"
        },
        "rpcOptions": {
          "$ref": "#/definitions/NodeRpcOptions"
        },
        "p2pSslOptions": {
          "$ref": "#/definitions/MutualSslConfiguration"
        },
        "crlCheckSoftFail": {
          "type": "boolean"
        },
        "jmxMonitoringHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "additionalP2PAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostAndPort"
          }
        },
        "detectPublicIp": {
          "type": "boolean"
        },
        "effectiveH2Settings": {
          "$ref": "#/definitions/NodeH2Settings"
        },
        "jmxReporterType": {
          "type": "string",
          "enum": [
            "JOLOKIA",
            "NEW_RELIC"
          ]
        },
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        },
        "devMode": {
          "type": "boolean"
        },
        "sshd": {
          "$ref": "#/definitions/SSHDConfiguration"
        },
        "attachmentCacheBound": {
          "type": "integer",
          "format": "int64"
        },
        "attachmentContentCacheSizeBytes": {
          "type": "integer",
          "format": "int64"
        },
        "useTestClock": {
          "type": "boolean"
        },
        "flowMonitorPeriodMillis": {
          "$ref": "#/definitions/Duration"
        },
        "flowMonitorSuspensionLoggingThresholdMillis": {
          "$ref": "#/definitions/Duration"
        },
        "tlsCertCrlIssuer": {
          "$ref": "#/definitions/X500Principal"
        },
        "tlsCertCrlDistPoint": {
          "type": "string",
          "format": "url"
        },
        "compatibilityZoneURL": {
          "type": "string",
          "format": "url"
        },
        "devModeOptions": {
          "$ref": "#/definitions/DevModeOptions"
        },
        "emailAddress": {
          "type": "string"
        },
        "verifierType": {
          "type": "string",
          "enum": [
            "InMemory"
          ]
        },
        "flowTimeout": {
          "$ref": "#/definitions/FlowTimeoutConfiguration"
        },
        "certificateChainCheckPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertChainPolicyConfig"
          }
        },
        "lazyBridgeStart": {
          "type": "boolean"
        }
      }
    },
    "NodeH2Settings": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/NetworkHostAndPort"
        }
      }
    },
    "NodePropertiesStore": {
      "type": "object",
      "properties": {
        "flowsDrainingMode": {
          "$ref": "#/definitions/FlowsDrainingModeOperations"
        }
      }
    },
    "NodeRpcOptions": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "standAloneBroker": {
          "type": "boolean"
        },
        "adminAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "useSsl": {
          "type": "boolean"
        },
        "sslConfig": {
          "$ref": "#/definitions/BrokerRpcSslOptions"
        }
      }
    },
    "NonIdentifierAttribute": {
      "type": "object",
      "properties": {
        "nullable": {
          "type": "boolean"
        },
        "lazy": {
          "type": "boolean"
        },
        "updateable": {
          "type": "boolean"
        },
        "insertable": {
          "type": "boolean"
        },
        "versionable": {
          "type": "boolean"
        },
        "cascadeStyle": {
          "$ref": "#/definitions/CascadeStyle"
        },
        "valueGenerationStrategy": {
          "$ref": "#/definitions/ValueGeneration"
        },
        "dirtyCheckable": {
          "type": "boolean"
        },
        "fetchMode": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "JOIN",
            "SELECT"
          ]
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "source": {
          "$ref": "#/definitions/AttributeSource"
        }
      }
    },
    "NotaryConfig": {
      "type": "object",
      "properties": {
        "validating": {
          "type": "boolean"
        },
        "serviceLegalName": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        },
        "className": {
          "type": "string"
        },
        "etaMessageThresholdSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "extraConfig": {
          "$ref": "#/definitions/Config"
        },
        "raft": {
          "$ref": "#/definitions/RaftConfig"
        },
        "bftSMaRt": {
          "$ref": "#/definitions/BFTSmartConfig"
        }
      }
    },
    "ObjectNameNormalizer": {
      "type": "object"
    },
    "ObservablePairBooleanBoolean": {
      "type": "object"
    },
    "OpenFuture": {
      "type": "object",
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "OpenFutureVoid": {
      "type": "object",
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "Options": {
      "type": "object",
      "properties": {
        "cache": {
          "$ref": "#/definitions/Cache"
        }
      }
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "modifiers": {
          "type": "integer",
          "format": "int32"
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "synthetic": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "annotatedType": {
          "$ref": "#/definitions/AnnotatedType"
        },
        "namePresent": {
          "type": "boolean"
        },
        "declaringExecutable": {
          "$ref": "#/definitions/Executable"
        },
        "parameterizedType": {
          "$ref": "#/definitions/Type"
        },
        "implicit": {
          "type": "boolean"
        },
        "varArgs": {
          "type": "boolean"
        }
      }
    },
    "PersistenceUnitUtil": {
      "type": "object"
    },
    "PersistentClass": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "proxyInterfaceName": {
          "type": "string"
        },
        "jpaEntityName": {
          "type": "string"
        },
        "discriminatorValue": {
          "type": "string"
        },
        "lazy": {
          "type": "boolean"
        },
        "batchSize": {
          "type": "integer",
          "format": "int32"
        },
        "metaAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "synchronizedTables": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "loaderName": {
          "type": "string"
        },
        "identifierMapper": {
          "$ref": "#/definitions/Component"
        },
        "customSQLInsert": {
          "type": "string"
        },
        "customInsertCallable": {
          "type": "boolean"
        },
        "customSQLUpdate": {
          "type": "string"
        },
        "customUpdateCallable": {
          "type": "boolean"
        },
        "customSQLDelete": {
          "type": "string"
        },
        "customDeleteCallable": {
          "type": "boolean"
        },
        "superMappedSuperclass": {
          "$ref": "#/definitions/MappedSuperclass"
        },
        "declaredIdentifierMapper": {
          "$ref": "#/definitions/Component"
        },
        "optimisticLockStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "VERSION",
            "DIRTY",
            "ALL"
          ]
        },
        "superclass": {
          "$ref": "#/definitions/PersistentClass"
        },
        "abstract": {
          "type": "boolean"
        },
        "key": {
          "$ref": "#/definitions/KeyValue"
        },
        "inherited": {
          "type": "boolean"
        },
        "table": {
          "$ref": "#/definitions/Table"
        },
        "version": {
          "$ref": "#/definitions/Property"
        },
        "serviceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        },
        "mutable": {
          "type": "boolean"
        },
        "identifier": {
          "$ref": "#/definitions/KeyValue"
        },
        "discriminator": {
          "$ref": "#/definitions/Value"
        },
        "declaredVersion": {
          "$ref": "#/definitions/Property"
        },
        "identifierProperty": {
          "$ref": "#/definitions/Property"
        },
        "polymorphic": {
          "type": "boolean"
        },
        "explicitPolymorphism": {
          "type": "boolean"
        },
        "rootClass": {
          "$ref": "#/definitions/RootClass"
        },
        "propertyClosureSpan": {
          "type": "integer",
          "format": "int32"
        },
        "propertyClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "naturalIdCacheRegionName": {
          "type": "string"
        },
        "subclassIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "propertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "cached": {
          "type": "boolean"
        },
        "subclassId": {
          "type": "integer",
          "format": "int32"
        },
        "subclassSpan": {
          "type": "integer",
          "format": "int32"
        },
        "subclassClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "identityTable": {
          "$ref": "#/definitions/Table"
        },
        "directSubclasses": {
          "$ref": "#/definitions/Iterator"
        },
        "declaredIdentifierProperty": {
          "$ref": "#/definitions/Property"
        },
        "cachingExplicitlyRequested": {
          "type": "boolean"
        },
        "cacheConcurrencyStrategy": {
          "type": "string"
        },
        "discriminatorInsertable": {
          "type": "boolean"
        },
        "tableClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "keyClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "subclassPropertyClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "subclassJoinClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "subclassTableClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "rootTable": {
          "$ref": "#/definitions/Table"
        },
        "where": {
          "type": "string"
        },
        "referenceablePropertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "optimisticLockMode": {
          "type": "integer",
          "format": "int32"
        },
        "discriminatorValueNotNull": {
          "type": "boolean"
        },
        "discriminatorValueNull": {
          "type": "boolean"
        },
        "joinIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "joinClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "joinClosureSpan": {
          "type": "integer",
          "format": "int32"
        },
        "unjoinedPropertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "customSQLInsertCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "customSQLUpdateCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "customSQLDeleteCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "forceDiscriminator": {
          "type": "boolean"
        },
        "joinedSubclass": {
          "type": "boolean"
        },
        "tuplizerMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "declaredPropertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "versioned": {
          "type": "boolean"
        }
      }
    },
    "PhysicalNamingStrategy": {
      "type": "object"
    },
    "PluralAttribute": {
      "type": "object",
      "properties": {
        "elementType": {
          "$ref": "#/definitions/TypeObject"
        },
        "collectionType": {
          "type": "string",
          "enum": [
            "COLLECTION",
            "SET",
            "LIST",
            "MAP"
          ]
        },
        "name": {
          "type": "string"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "PluralAttributeObjectObjectObject": {
      "type": "object",
      "properties": {
        "elementType": {
          "$ref": "#/definitions/TypeObject"
        },
        "collectionType": {
          "type": "string",
          "enum": [
            "COLLECTION",
            "SET",
            "LIST",
            "MAP"
          ]
        },
        "name": {
          "type": "string"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "PrimaryKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Column"
          }
        },
        "table": {
          "$ref": "#/definitions/Table"
        },
        "exportIdentifier": {
          "type": "string"
        },
        "columnIterator": {
          "$ref": "#/definitions/IteratorColumn"
        },
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PrintWriter": {
      "type": "object"
    },
    "Property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Value"
        },
        "cascade": {
          "type": "string"
        },
        "updateable": {
          "type": "boolean"
        },
        "insertable": {
          "type": "boolean"
        },
        "selectable": {
          "type": "boolean"
        },
        "optimisticLocked": {
          "type": "boolean"
        },
        "valueGenerationStrategy": {
          "$ref": "#/definitions/ValueGeneration"
        },
        "propertyAccessorName": {
          "type": "string"
        },
        "lazy": {
          "type": "boolean"
        },
        "lazyGroup": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "metaAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "persistentClass": {
          "$ref": "#/definitions/PersistentClass"
        },
        "naturalIdentifier": {
          "type": "boolean"
        },
        "lob": {
          "type": "boolean"
        },
        "synthetic": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "composite": {
          "type": "boolean"
        },
        "cascadeStyle": {
          "$ref": "#/definitions/CascadeStyle"
        },
        "columnIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        },
        "backRef": {
          "type": "boolean"
        },
        "basicPropertyAccessor": {
          "type": "boolean"
        }
      }
    },
    "PublishSubject": {
      "type": "object",
      "properties": {
        "throwable": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "PublishSubjectStateMachineTransactionMapping": {
      "type": "object",
      "properties": {
        "throwable": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "QualifiedObjectNameFormatter": {
      "type": "object"
    },
    "QualifiedTableName": {
      "type": "object",
      "properties": {
        "catalogName": {
          "$ref": "#/definitions/Identifier"
        },
        "schemaName": {
          "$ref": "#/definitions/Identifier"
        },
        "objectName": {
          "$ref": "#/definitions/Identifier"
        },
        "tableName": {
          "$ref": "#/definitions/Identifier"
        }
      }
    },
    "QueryCache": {
      "type": "object",
      "properties": {
        "region": {
          "$ref": "#/definitions/QueryResultsRegion"
        }
      }
    },
    "QueryPlanCache": {
      "type": "object",
      "properties": {
        "nativeQueryInterpreter": {
          "$ref": "#/definitions/NativeQueryInterpreter"
        }
      }
    },
    "QueryResultsCache": {
      "type": "object",
      "properties": {
        "region": {
          "$ref": "#/definitions/QueryResultsRegion"
        }
      }
    },
    "QueryResultsRegion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "regionFactory": {
          "$ref": "#/definitions/RegionFactory"
        }
      }
    },
    "QueryTranslatorFactory": {
      "type": "object"
    },
    "RaftConfig": {
      "type": "object",
      "properties": {
        "nodeAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "clusterAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostAndPort"
          }
        }
      }
    },
    "Reference": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "all": {
          "$ref": "#/definitions/EnumerationRefAddr"
        },
        "factoryClassLocation": {
          "type": "string"
        },
        "factoryClassName": {
          "type": "string"
        }
      }
    },
    "ReflectionManager": {
      "type": "object",
      "properties": {
        "classLoaderDelegate": {
          "$ref": "#/definitions/ClassLoaderDelegate"
        },
        "defaults": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RegionFactory": {
      "type": "object",
      "properties": {
        "timeout": {
          "type": "integer",
          "format": "int64"
        },
        "minimalPutsEnabledByDefault": {
          "type": "boolean"
        },
        "defaultAccessType": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "READ_WRITE",
            "NONSTRICT_READ_WRITE",
            "TRANSACTIONAL"
          ]
        }
      }
    },
    "ResourceBundle": {
      "type": "object",
      "properties": {
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "keys": {
          "$ref": "#/definitions/EnumerationString"
        },
        "baseBundleName": {
          "type": "string"
        }
      }
    },
    "ResultSet": {
      "type": "object",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "closed": {
          "type": "boolean"
        },
        "metaData": {
          "$ref": "#/definitions/ResultSetMetaData"
        },
        "warnings": {
          "$ref": "#/definitions/SQLWarning"
        },
        "holdability": {
          "type": "integer",
          "format": "int32"
        },
        "statement": {
          "$ref": "#/definitions/Statement"
        },
        "cursorName": {
          "type": "string"
        },
        "beforeFirst": {
          "type": "boolean"
        },
        "afterLast": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "row": {
          "type": "integer",
          "format": "int32"
        },
        "fetchDirection": {
          "type": "integer",
          "format": "int32"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        },
        "fetchSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultSetMappingDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "queryReturns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NativeSQLQueryReturn"
          }
        }
      }
    },
    "ResultSetMetaData": {
      "type": "object",
      "properties": {
        "columnCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultSetWrapper": {
      "type": "object"
    },
    "RootClass": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "proxyInterfaceName": {
          "type": "string"
        },
        "jpaEntityName": {
          "type": "string"
        },
        "discriminatorValue": {
          "type": "string"
        },
        "lazy": {
          "type": "boolean"
        },
        "batchSize": {
          "type": "integer",
          "format": "int32"
        },
        "metaAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "synchronizedTables": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "loaderName": {
          "type": "string"
        },
        "identifierMapper": {
          "$ref": "#/definitions/Component"
        },
        "customSQLInsert": {
          "type": "string"
        },
        "customInsertCallable": {
          "type": "boolean"
        },
        "customSQLUpdate": {
          "type": "string"
        },
        "customUpdateCallable": {
          "type": "boolean"
        },
        "customSQLDelete": {
          "type": "string"
        },
        "customDeleteCallable": {
          "type": "boolean"
        },
        "superMappedSuperclass": {
          "$ref": "#/definitions/MappedSuperclass"
        },
        "declaredIdentifierMapper": {
          "$ref": "#/definitions/Component"
        },
        "optimisticLockStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "VERSION",
            "DIRTY",
            "ALL"
          ]
        },
        "identifierProperty": {
          "$ref": "#/definitions/Property"
        },
        "identifier": {
          "$ref": "#/definitions/KeyValue"
        },
        "version": {
          "$ref": "#/definitions/Property"
        },
        "polymorphic": {
          "type": "boolean"
        },
        "cacheConcurrencyStrategy": {
          "type": "string"
        },
        "cacheRegionName": {
          "type": "string"
        },
        "lazyPropertiesCacheable": {
          "type": "boolean"
        },
        "naturalIdCacheRegionName": {
          "type": "string"
        },
        "discriminator": {
          "$ref": "#/definitions/Value"
        },
        "mutable": {
          "type": "boolean"
        },
        "explicitPolymorphism": {
          "type": "boolean"
        },
        "forceDiscriminator": {
          "type": "boolean"
        },
        "where": {
          "type": "string"
        },
        "table": {
          "$ref": "#/definitions/Table"
        },
        "discriminatorInsertable": {
          "type": "boolean"
        },
        "declaredIdentifierProperty": {
          "$ref": "#/definitions/Property"
        },
        "declaredVersion": {
          "$ref": "#/definitions/Property"
        },
        "superclass": {
          "$ref": "#/definitions/PersistentClass"
        },
        "key": {
          "$ref": "#/definitions/KeyValue"
        },
        "inherited": {
          "type": "boolean"
        },
        "rootClass": {
          "$ref": "#/definitions/RootClass"
        },
        "propertyClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "subclassId": {
          "type": "integer",
          "format": "int32"
        },
        "tableClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "keyClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "rootTable": {
          "$ref": "#/definitions/Table"
        },
        "joinedSubclass": {
          "type": "boolean"
        },
        "versioned": {
          "type": "boolean"
        },
        "identityTables": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Table"
          }
        },
        "abstract": {
          "type": "boolean"
        },
        "serviceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        },
        "propertyClosureSpan": {
          "type": "integer",
          "format": "int32"
        },
        "subclassIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "propertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "cached": {
          "type": "boolean"
        },
        "subclassSpan": {
          "type": "integer",
          "format": "int32"
        },
        "subclassClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "identityTable": {
          "$ref": "#/definitions/Table"
        },
        "directSubclasses": {
          "$ref": "#/definitions/Iterator"
        },
        "cachingExplicitlyRequested": {
          "type": "boolean"
        },
        "subclassPropertyClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "subclassJoinClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "subclassTableClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "referenceablePropertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "optimisticLockMode": {
          "type": "integer",
          "format": "int32"
        },
        "discriminatorValueNotNull": {
          "type": "boolean"
        },
        "discriminatorValueNull": {
          "type": "boolean"
        },
        "joinIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "joinClosureIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "joinClosureSpan": {
          "type": "integer",
          "format": "int32"
        },
        "unjoinedPropertyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "customSQLInsertCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "customSQLUpdateCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "customSQLDeleteCheckStyle": {
          "type": "string",
          "enum": [
            "NONE",
            "COUNT",
            "PARAM"
          ]
        },
        "tuplizerMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "declaredPropertyIterator": {
          "$ref": "#/definitions/Iterator"
        }
      }
    },
    "SQLException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "sqlstate": {
          "type": "string"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "nextException": {
          "$ref": "#/definitions/SQLException"
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "SQLExceptionConverter": {
      "type": "object"
    },
    "SQLFunction": {
      "type": "object"
    },
    "SQLFunctionRegistry": {
      "type": "object"
    },
    "SQLWarning": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "nextWarning": {
          "$ref": "#/definitions/SQLWarning"
        },
        "sqlstate": {
          "type": "string"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "nextException": {
          "$ref": "#/definitions/SQLException"
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "SSHDConfiguration": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ScanEnvironment": {
      "type": "object",
      "properties": {
        "nonRootUrls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "url"
          }
        },
        "explicitlyListedMappingFiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "explicitlyListedClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rootUrl": {
          "type": "string",
          "format": "url"
        }
      }
    },
    "ScanOptions": {
      "type": "object"
    },
    "SchemaNameResolver": {
      "type": "object"
    },
    "SchemaOptions": {
      "type": "object",
      "properties": {
        "databaseSchema": {
          "type": "string"
        },
        "tablePrefix": {
          "type": "string"
        }
      }
    },
    "SchemaService": {
      "type": "object",
      "properties": {
        "schemaOptions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SchemaOptions"
          }
        }
      }
    },
    "SecurityConfiguration": {
      "type": "object",
      "properties": {
        "authService": {
          "$ref": "#/definitions/AuthService"
        }
      }
    },
    "SequenceInformationExtractor": {
      "type": "object"
    },
    "Serializable": {
      "type": "object"
    },
    "ServiceHubInternalImpl": {
      "type": "object",
      "properties": {
        "rpcFlows": {
          "type": "array"
        },
        "stateMachineRecordedTransactionMapping": {
          "$ref": "#/definitions/DBTransactionMappingStorage"
        },
        "networkMapCache": {
          "$ref": "#/definitions/NetworkMapCacheInternal"
        },
        "keyManagementService": {
          "$ref": "#/definitions/KeyManagementService"
        },
        "contractUpgradeService": {
          "$ref": "#/definitions/ContractUpgradeService"
        },
        "configuration": {
          "$ref": "#/definitions/NodeConfiguration"
        },
        "clock": {
          "$ref": "#/definitions/Clock"
        },
        "networkParametersService": {
          "$ref": "#/definitions/NetworkParametersStorage"
        },
        "validatedTransactions": {
          "$ref": "#/definitions/WritableTransactionStorage"
        },
        "transactionVerifierService": {
          "$ref": "#/definitions/TransactionVerifierService"
        },
        "attachments": {
          "$ref": "#/definitions/AttachmentStorageInternal"
        },
        "vaultService": {
          "$ref": "#/definitions/VaultServiceInternal"
        },
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "myInfo": {
          "$ref": "#/definitions/NodeInfo"
        },
        "schemaService": {
          "$ref": "#/definitions/SchemaService"
        },
        "nodeProperties": {
          "$ref": "#/definitions/NodePropertiesStore"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "monitoringService": {
          "$ref": "#/definitions/MonitoringService"
        },
        "auditService": {
          "$ref": "#/definitions/AuditService"
        },
        "networkService": {
          "$ref": "#/definitions/MessagingService"
        },
        "networkMapUpdater": {
          "$ref": "#/definitions/NetworkMapUpdater"
        },
        "cacheFactory": {
          "$ref": "#/definitions/NamedCacheFactory"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProviderInternal"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        },
        "appContext": {
          "$ref": "#/definitions/CordappContext"
        }
      }
    },
    "ServiceRegistry": {
      "type": "object",
      "properties": {
        "parentServiceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        }
      }
    },
    "ServiceRegistryImplementor": {
      "type": "object",
      "properties": {
        "parentServiceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        }
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "dirty": {
          "type": "boolean"
        },
        "sessionFactory": {
          "$ref": "#/definitions/SessionFactory"
        },
        "statistics": {
          "$ref": "#/definitions/SessionStatistics"
        },
        "typeHelper": {
          "$ref": "#/definitions/TypeHelper"
        },
        "flushMode": {
          "type": "string",
          "enum": [
            "COMMIT",
            "AUTO"
          ]
        },
        "hibernateFlushMode": {
          "type": "string",
          "enum": [
            "MANUAL",
            "COMMIT",
            "AUTO",
            "ALWAYS"
          ]
        },
        "cacheMode": {
          "type": "string",
          "enum": [
            "NORMAL",
            "IGNORE",
            "GET",
            "PUT",
            "REFRESH"
          ]
        },
        "defaultReadOnly": {
          "type": "boolean"
        },
        "lobHelper": {
          "$ref": "#/definitions/LobHelper"
        },
        "open": {
          "type": "boolean"
        },
        "connected": {
          "type": "boolean"
        },
        "transaction": {
          "$ref": "#/definitions/Transaction"
        },
        "jdbcBatchSize": {
          "type": "integer",
          "format": "int32"
        },
        "tenantIdentifier": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "delegate": {
          "type": "object"
        },
        "entityManagerFactory": {
          "$ref": "#/definitions/EntityManagerFactory"
        },
        "criteriaBuilder": {
          "$ref": "#/definitions/CriteriaBuilder"
        },
        "metamodel": {
          "$ref": "#/definitions/Metamodel"
        },
        "joinedToTransaction": {
          "type": "boolean"
        },
        "session": {
          "$ref": "#/definitions/Session"
        }
      }
    },
    "SessionFactory": {
      "type": "object",
      "properties": {
        "cache": {
          "$ref": "#/definitions/Cache"
        },
        "closed": {
          "type": "boolean"
        },
        "sessionFactoryOptions": {
          "$ref": "#/definitions/SessionFactoryOptions"
        },
        "currentSession": {
          "$ref": "#/definitions/Session"
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        },
        "definedFilterNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "typeHelper": {
          "$ref": "#/definitions/TypeHelper"
        },
        "allClassMetadata": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ClassMetadata"
          }
        },
        "allCollectionMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "open": {
          "type": "boolean"
        },
        "criteriaBuilder": {
          "$ref": "#/definitions/CriteriaBuilder"
        },
        "metamodel": {
          "$ref": "#/definitions/Metamodel"
        },
        "persistenceUnitUtil": {
          "$ref": "#/definitions/PersistenceUnitUtil"
        },
        "sessionFactory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "entityManagerFactoryName": {
          "type": "string"
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "SessionFactoryBuilder": {
      "type": "object"
    },
    "SessionFactoryImplementor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cache": {
          "$ref": "#/definitions/CacheImplementor"
        },
        "serviceRegistry": {
          "$ref": "#/definitions/ServiceRegistryImplementor"
        },
        "settings": {
          "$ref": "#/definitions/Settings"
        },
        "typeResolver": {
          "$ref": "#/definitions/TypeResolver"
        },
        "uuid": {
          "type": "string"
        },
        "metamodel": {
          "$ref": "#/definitions/MetamodelImplementor"
        },
        "interceptor": {
          "$ref": "#/definitions/Interceptor"
        },
        "currentTenantIdentifierResolver": {
          "$ref": "#/definitions/CurrentTenantIdentifierResolver"
        },
        "customEntityDirtinessStrategy": {
          "$ref": "#/definitions/CustomEntityDirtinessStrategy"
        },
        "entityNotFoundDelegate": {
          "$ref": "#/definitions/EntityNotFoundDelegate"
        },
        "statistics": {
          "$ref": "#/definitions/StatisticsImplementor"
        },
        "queryPlanCache": {
          "$ref": "#/definitions/QueryPlanCache"
        },
        "namedQueryRepository": {
          "$ref": "#/definitions/NamedQueryRepository"
        },
        "sqlFunctionRegistry": {
          "$ref": "#/definitions/SQLFunctionRegistry"
        },
        "deserializationResolver": {
          "$ref": "#/definitions/DeserializationResolver"
        },
        "statisticsImplementor": {
          "$ref": "#/definitions/StatisticsImplementor"
        },
        "jdbcServices": {
          "$ref": "#/definitions/JdbcServices"
        },
        "dialect": {
          "$ref": "#/definitions/Dialect"
        },
        "sqlexceptionConverter": {
          "$ref": "#/definitions/SQLExceptionConverter"
        },
        "sqlexceptionHelper": {
          "$ref": "#/definitions/SqlExceptionHelper"
        },
        "entityPersisters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EntityPersister"
          }
        },
        "collectionPersisters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CollectionPersister"
          }
        },
        "identifierGeneratorFactory": {
          "$ref": "#/definitions/IdentifierGeneratorFactory"
        },
        "closed": {
          "type": "boolean"
        },
        "sessionFactoryOptions": {
          "$ref": "#/definitions/SessionFactoryOptions"
        },
        "currentSession": {
          "$ref": "#/definitions/Session"
        },
        "definedFilterNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "typeHelper": {
          "$ref": "#/definitions/TypeHelper"
        },
        "allClassMetadata": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ClassMetadata"
          }
        },
        "allCollectionMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "open": {
          "type": "boolean"
        },
        "criteriaBuilder": {
          "$ref": "#/definitions/CriteriaBuilder"
        },
        "persistenceUnitUtil": {
          "$ref": "#/definitions/PersistenceUnitUtil"
        },
        "sessionFactory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "entityManagerFactoryName": {
          "type": "string"
        },
        "reference": {
          "$ref": "#/definitions/Reference"
        }
      }
    },
    "SessionFactoryObserver": {
      "type": "object"
    },
    "SessionFactoryOptions": {
      "type": "object",
      "properties": {
        "serviceRegistry": {
          "$ref": "#/definitions/StandardServiceRegistry"
        },
        "uuid": {
          "type": "string"
        },
        "jdbcBatchSize": {
          "type": "integer",
          "format": "int32"
        },
        "validatorFactoryReference": {
          "type": "object"
        },
        "jpaBootstrap": {
          "type": "boolean"
        },
        "jtaTransactionAccessEnabled": {
          "type": "boolean"
        },
        "beanManagerReference": {
          "type": "object"
        },
        "allowRefreshDetachedEntity": {
          "type": "boolean"
        },
        "sessionFactoryName": {
          "type": "string"
        },
        "sessionFactoryNameAlsoJndiName": {
          "type": "boolean"
        },
        "flushBeforeCompletionEnabled": {
          "type": "boolean"
        },
        "autoCloseSessionEnabled": {
          "type": "boolean"
        },
        "statisticsEnabled": {
          "type": "boolean"
        },
        "interceptor": {
          "$ref": "#/definitions/Interceptor"
        },
        "statelessInterceptorImplementorSupplier": {
          "$ref": "#/definitions/SupplierInterceptor"
        },
        "statementInspector": {
          "$ref": "#/definitions/StatementInspector"
        },
        "sessionFactoryObservers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SessionFactoryObserver"
          }
        },
        "baselineSessionEventsListenerBuilder": {
          "$ref": "#/definitions/BaselineSessionEventsListenerBuilder"
        },
        "identifierRollbackEnabled": {
          "type": "boolean"
        },
        "defaultEntityMode": {
          "type": "string",
          "enum": [
            "POJO",
            "MAP"
          ]
        },
        "entityTuplizerFactory": {
          "$ref": "#/definitions/EntityTuplizerFactory"
        },
        "checkNullability": {
          "type": "boolean"
        },
        "initializeLazyStateOutsideTransactionsEnabled": {
          "type": "boolean"
        },
        "multiTableBulkIdStrategy": {
          "$ref": "#/definitions/MultiTableBulkIdStrategy"
        },
        "tempTableDdlTransactionHandling": {
          "type": "string",
          "enum": [
            "NONE",
            "ISOLATE",
            "ISOLATE_AND_TRANSACT"
          ]
        },
        "batchFetchStyle": {
          "type": "string",
          "enum": [
            "LEGACY",
            "PADDED",
            "DYNAMIC"
          ]
        },
        "delayBatchFetchLoaderCreationsEnabled": {
          "type": "boolean"
        },
        "defaultBatchFetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "maximumFetchDepth": {
          "type": "integer",
          "format": "int32"
        },
        "defaultNullPrecedence": {
          "type": "string",
          "enum": [
            "NONE",
            "FIRST",
            "LAST"
          ]
        },
        "orderUpdatesEnabled": {
          "type": "boolean"
        },
        "orderInsertsEnabled": {
          "type": "boolean"
        },
        "multiTenancyStrategy": {
          "type": "string",
          "enum": [
            "DISCRIMINATOR",
            "SCHEMA",
            "DATABASE",
            "NONE"
          ]
        },
        "currentTenantIdentifierResolver": {
          "$ref": "#/definitions/CurrentTenantIdentifierResolver"
        },
        "jtaTrackByThread": {
          "type": "boolean"
        },
        "querySubstitutions": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "strictJpaQueryLanguageCompliance": {
          "type": "boolean"
        },
        "namedQueryStartupCheckingEnabled": {
          "type": "boolean"
        },
        "conventionalJavaConstants": {
          "type": "boolean"
        },
        "secondLevelCacheEnabled": {
          "type": "boolean"
        },
        "queryCacheEnabled": {
          "type": "boolean"
        },
        "timestampsCacheFactory": {
          "$ref": "#/definitions/TimestampsCacheFactory"
        },
        "cacheRegionPrefix": {
          "type": "string"
        },
        "minimalPutsEnabled": {
          "type": "boolean"
        },
        "structuredCacheEntriesEnabled": {
          "type": "boolean"
        },
        "directReferenceCacheEntriesEnabled": {
          "type": "boolean"
        },
        "autoEvictCollectionCache": {
          "type": "boolean"
        },
        "schemaAutoTooling": {
          "type": "string",
          "enum": [
            "CREATE",
            "CREATE_DROP",
            "UPDATE",
            "VALIDATE",
            "NONE"
          ]
        },
        "jdbcBatchVersionedData": {
          "type": "boolean"
        },
        "scrollableResultSetsEnabled": {
          "type": "boolean"
        },
        "wrapResultSetsEnabled": {
          "type": "boolean"
        },
        "getGeneratedKeysEnabled": {
          "type": "boolean"
        },
        "jdbcFetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "physicalConnectionHandlingMode": {
          "type": "string",
          "enum": [
            "IMMEDIATE_ACQUISITION_AND_HOLD",
            "DELAYED_ACQUISITION_AND_HOLD",
            "DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT",
            "DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION"
          ]
        },
        "connectionReleaseMode": {
          "type": "string",
          "enum": [
            "AFTER_STATEMENT",
            "AFTER_TRANSACTION",
            "ON_CLOSE"
          ]
        },
        "commentsEnabled": {
          "type": "boolean"
        },
        "customEntityDirtinessStrategy": {
          "$ref": "#/definitions/CustomEntityDirtinessStrategy"
        },
        "entityNameResolvers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityNameResolver"
          }
        },
        "entityNotFoundDelegate": {
          "$ref": "#/definitions/EntityNotFoundDelegate"
        },
        "customSqlFunctionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SQLFunction"
          }
        },
        "preferUserTransaction": {
          "type": "boolean"
        },
        "procedureParameterNullPassingEnabled": {
          "type": "boolean"
        },
        "collectionJoinSubqueryRewriteEnabled": {
          "type": "boolean"
        },
        "allowOutOfTransactionUpdateOperations": {
          "type": "boolean"
        },
        "releaseResourcesOnCloseEnabled": {
          "type": "boolean"
        },
        "jdbcTimeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "queryParametersValidationEnabled": {
          "type": "boolean"
        },
        "criteriaLiteralHandlingMode": {
          "type": "string",
          "enum": [
            "AUTO",
            "BIND",
            "INLINE"
          ]
        },
        "jpaCompliance": {
          "$ref": "#/definitions/JpaCompliance"
        },
        "failOnPaginationOverCollectionFetchEnabled": {
          "type": "boolean"
        },
        "immutableEntityUpdateQueryHandlingMode": {
          "type": "string",
          "enum": [
            "WARNING",
            "EXCEPTION"
          ]
        }
      }
    },
    "SessionStatistics": {
      "type": "object",
      "properties": {
        "collectionCount": {
          "type": "integer",
          "format": "int32"
        },
        "entityCount": {
          "type": "integer",
          "format": "int32"
        },
        "entityKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "collectionKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Settings": {
      "type": "object",
      "properties": {
        "defaultCatalogName": {
          "type": "string"
        },
        "defaultSchemaName": {
          "type": "string"
        },
        "jdbcBatchSize": {
          "type": "integer",
          "format": "int32"
        },
        "sessionFactoryName": {
          "type": "string"
        },
        "sessionFactoryNameAlsoJndiName": {
          "type": "boolean"
        },
        "flushBeforeCompletionEnabled": {
          "type": "boolean"
        },
        "autoCloseSessionEnabled": {
          "type": "boolean"
        },
        "statisticsEnabled": {
          "type": "boolean"
        },
        "baselineSessionEventsListenerBuilder": {
          "$ref": "#/definitions/BaselineSessionEventsListenerBuilder"
        },
        "identifierRollbackEnabled": {
          "type": "boolean"
        },
        "defaultEntityMode": {
          "type": "string",
          "enum": [
            "POJO",
            "MAP"
          ]
        },
        "entityTuplizerFactory": {
          "$ref": "#/definitions/EntityTuplizerFactory"
        },
        "checkNullability": {
          "type": "boolean"
        },
        "initializeLazyStateOutsideTransactionsEnabled": {
          "type": "boolean"
        },
        "multiTableBulkIdStrategy": {
          "$ref": "#/definitions/MultiTableBulkIdStrategy"
        },
        "batchFetchStyle": {
          "type": "string",
          "enum": [
            "LEGACY",
            "PADDED",
            "DYNAMIC"
          ]
        },
        "defaultBatchFetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "maximumFetchDepth": {
          "type": "integer",
          "format": "int32"
        },
        "defaultNullPrecedence": {
          "type": "string",
          "enum": [
            "NONE",
            "FIRST",
            "LAST"
          ]
        },
        "orderUpdatesEnabled": {
          "type": "boolean"
        },
        "orderInsertsEnabled": {
          "type": "boolean"
        },
        "multiTenancyStrategy": {
          "type": "string",
          "enum": [
            "DISCRIMINATOR",
            "SCHEMA",
            "DATABASE",
            "NONE"
          ]
        },
        "jtaTrackByThread": {
          "type": "boolean"
        },
        "querySubstitutions": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "namedQueryStartupCheckingEnabled": {
          "type": "boolean"
        },
        "secondLevelCacheEnabled": {
          "type": "boolean"
        },
        "queryCacheEnabled": {
          "type": "boolean"
        },
        "timestampsCacheFactory": {
          "$ref": "#/definitions/TimestampsCacheFactory"
        },
        "cacheRegionPrefix": {
          "type": "string"
        },
        "minimalPutsEnabled": {
          "type": "boolean"
        },
        "structuredCacheEntriesEnabled": {
          "type": "boolean"
        },
        "directReferenceCacheEntriesEnabled": {
          "type": "boolean"
        },
        "autoEvictCollectionCache": {
          "type": "boolean"
        },
        "jdbcBatchVersionedData": {
          "type": "boolean"
        },
        "scrollableResultSetsEnabled": {
          "type": "boolean"
        },
        "wrapResultSetsEnabled": {
          "type": "boolean"
        },
        "getGeneratedKeysEnabled": {
          "type": "boolean"
        },
        "jdbcFetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "connectionReleaseMode": {
          "type": "string",
          "enum": [
            "AFTER_STATEMENT",
            "AFTER_TRANSACTION",
            "ON_CLOSE"
          ]
        },
        "commentsEnabled": {
          "type": "boolean"
        },
        "preferUserTransaction": {
          "type": "boolean"
        },
        "regionFactory": {
          "$ref": "#/definitions/RegionFactory"
        },
        "jtaPlatform": {
          "$ref": "#/definitions/JtaPlatform"
        },
        "autoValidateSchema": {
          "type": "boolean"
        },
        "queryTranslatorFactory": {
          "$ref": "#/definitions/QueryTranslatorFactory"
        },
        "strictJPAQLCompliance": {
          "type": "boolean"
        },
        "autoCreateSchema": {
          "type": "boolean"
        },
        "autoDropSchema": {
          "type": "boolean"
        },
        "autoUpdateSchema": {
          "type": "boolean"
        }
      }
    },
    "SingleMessageRecipient": {
      "type": "object"
    },
    "SingularAttribute": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeObject"
        },
        "optional": {
          "type": "boolean"
        },
        "id": {
          "type": "boolean"
        },
        "version": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "SingularAttributeObjectObject": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeObject"
        },
        "optional": {
          "type": "boolean"
        },
        "id": {
          "type": "boolean"
        },
        "version": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int64"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "median": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "integer",
          "format": "int64"
        },
        "mean": {
          "type": "number",
          "format": "double"
        },
        "get75thPercentile": {
          "type": "number",
          "format": "double"
        },
        "get95thPercentile": {
          "type": "number",
          "format": "double"
        },
        "get98thPercentile": {
          "type": "number",
          "format": "double"
        },
        "get99thPercentile": {
          "type": "number",
          "format": "double"
        },
        "get999thPercentile": {
          "type": "number",
          "format": "double"
        },
        "stdDev": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "SqlExceptionHelper": {
      "type": "object",
      "properties": {
        "sqlExceptionConverter": {
          "$ref": "#/definitions/SQLExceptionConverter"
        }
      }
    },
    "SqlStatementLogger": {
      "type": "object",
      "properties": {
        "logToStdout": {
          "type": "boolean"
        },
        "format": {
          "type": "boolean"
        }
      }
    },
    "SqlTypeDescriptorRegistry": {
      "type": "object"
    },
    "StandardServiceRegistry": {
      "type": "object",
      "properties": {
        "parentServiceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        }
      }
    },
    "Statement": {
      "type": "object",
      "properties": {
        "closed": {
          "type": "boolean"
        },
        "connection": {
          "$ref": "#/definitions/Connection"
        },
        "warnings": {
          "$ref": "#/definitions/SQLWarning"
        },
        "queryTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "fetchDirection": {
          "type": "integer",
          "format": "int32"
        },
        "maxFieldSize": {
          "type": "integer",
          "format": "int32"
        },
        "resultSet": {
          "$ref": "#/definitions/ResultSet"
        },
        "moreResults": {
          "type": "boolean"
        },
        "resultSetConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "resultSetType": {
          "type": "integer",
          "format": "int32"
        },
        "generatedKeys": {
          "$ref": "#/definitions/ResultSet"
        },
        "poolable": {
          "type": "boolean"
        },
        "closeOnCompletion": {
          "type": "boolean"
        },
        "largeUpdateCount": {
          "type": "integer",
          "format": "int64"
        },
        "largeMaxRows": {
          "type": "integer",
          "format": "int64"
        },
        "resultSetHoldability": {
          "type": "integer",
          "format": "int32"
        },
        "fetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxRows": {
          "type": "integer",
          "format": "int32"
        },
        "updateCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StatementInspector": {
      "type": "object"
    },
    "Statistics": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "statisticsEnabled": {
          "type": "boolean"
        },
        "entityDeleteCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityInsertCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityLoadCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityFetchCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityUpdateCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryExecutionCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryExecutionMaxTime": {
          "type": "integer",
          "format": "int64"
        },
        "queryExecutionMaxTimeQueryString": {
          "type": "string"
        },
        "queryCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdQueryExecutionCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdQueryExecutionMaxTime": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdQueryExecutionMaxTimeRegion": {
          "type": "string"
        },
        "naturalIdQueryExecutionMaxTimeEntity": {
          "type": "string"
        },
        "naturalIdCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "updateTimestampsCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "updateTimestampsCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "updateTimestampsCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "flushCount": {
          "type": "integer",
          "format": "int64"
        },
        "connectCount": {
          "type": "integer",
          "format": "int64"
        },
        "secondLevelCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "secondLevelCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "secondLevelCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "sessionCloseCount": {
          "type": "integer",
          "format": "int64"
        },
        "sessionOpenCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionLoadCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionFetchCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionUpdateCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionRemoveCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionRecreateCount": {
          "type": "integer",
          "format": "int64"
        },
        "queries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "collectionRoleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondLevelCacheRegionNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "successfulTransactionCount": {
          "type": "integer",
          "format": "int64"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        },
        "prepareStatementCount": {
          "type": "integer",
          "format": "int64"
        },
        "closeStatementCount": {
          "type": "integer",
          "format": "int64"
        },
        "optimisticFailureCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "StatisticsImplementor": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "statisticsEnabled": {
          "type": "boolean"
        },
        "entityDeleteCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityInsertCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityLoadCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityFetchCount": {
          "type": "integer",
          "format": "int64"
        },
        "entityUpdateCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryExecutionCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryExecutionMaxTime": {
          "type": "integer",
          "format": "int64"
        },
        "queryExecutionMaxTimeQueryString": {
          "type": "string"
        },
        "queryCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "queryCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdQueryExecutionCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdQueryExecutionMaxTime": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdQueryExecutionMaxTimeRegion": {
          "type": "string"
        },
        "naturalIdQueryExecutionMaxTimeEntity": {
          "type": "string"
        },
        "naturalIdCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "naturalIdCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "updateTimestampsCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "updateTimestampsCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "updateTimestampsCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "flushCount": {
          "type": "integer",
          "format": "int64"
        },
        "connectCount": {
          "type": "integer",
          "format": "int64"
        },
        "secondLevelCacheHitCount": {
          "type": "integer",
          "format": "int64"
        },
        "secondLevelCacheMissCount": {
          "type": "integer",
          "format": "int64"
        },
        "secondLevelCachePutCount": {
          "type": "integer",
          "format": "int64"
        },
        "sessionCloseCount": {
          "type": "integer",
          "format": "int64"
        },
        "sessionOpenCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionLoadCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionFetchCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionUpdateCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionRemoveCount": {
          "type": "integer",
          "format": "int64"
        },
        "collectionRecreateCount": {
          "type": "integer",
          "format": "int64"
        },
        "queries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "collectionRoleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondLevelCacheRegionNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "successfulTransactionCount": {
          "type": "integer",
          "format": "int64"
        },
        "transactionCount": {
          "type": "integer",
          "format": "int64"
        },
        "prepareStatementCount": {
          "type": "integer",
          "format": "int64"
        },
        "closeStatementCount": {
          "type": "integer",
          "format": "int64"
        },
        "optimisticFailureCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Supplier": {
      "type": "object"
    },
    "SupplierInterceptor": {
      "type": "object"
    },
    "Table": {
      "type": "object",
      "properties": {
        "catalog": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "primaryKey": {
          "$ref": "#/definitions/PrimaryKey"
        },
        "foreignKeys": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ForeignKey"
          }
        },
        "uniqueInteger": {
          "type": "integer",
          "format": "int32"
        },
        "rowId": {
          "type": "string"
        },
        "subselect": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "initCommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InitCommand"
          }
        },
        "abstract": {
          "type": "boolean"
        },
        "columnIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "columnSpan": {
          "type": "integer",
          "format": "int32"
        },
        "exportIdentifier": {
          "type": "string"
        },
        "nameIdentifier": {
          "$ref": "#/definitions/Identifier"
        },
        "quotedName": {
          "type": "string"
        },
        "qualifiedTableName": {
          "$ref": "#/definitions/QualifiedTableName"
        },
        "quoted": {
          "type": "boolean"
        },
        "quotedSchema": {
          "type": "string"
        },
        "schemaQuoted": {
          "type": "boolean"
        },
        "quotedCatalog": {
          "type": "string"
        },
        "catalogQuoted": {
          "type": "boolean"
        },
        "indexIterator": {
          "$ref": "#/definitions/IteratorIndex"
        },
        "foreignKeyIterator": {
          "$ref": "#/definitions/Iterator"
        },
        "uniqueKeyIterator": {
          "$ref": "#/definitions/IteratorUniqueKey"
        },
        "identifierValue": {
          "$ref": "#/definitions/KeyValue"
        },
        "abstractUnionTable": {
          "type": "boolean"
        },
        "physicalTable": {
          "type": "boolean"
        },
        "checkConstraintsIterator": {
          "$ref": "#/definitions/IteratorString"
        }
      }
    },
    "ThreadLocal": {
      "type": "object"
    },
    "ThreadLocalListObject": {
      "type": "object"
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "rawOffset": {
          "type": "integer",
          "format": "int32"
        },
        "dstsavings": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Timer": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "snapshot": {
          "$ref": "#/definitions/Snapshot"
        },
        "fifteenMinuteRate": {
          "type": "number",
          "format": "double"
        },
        "fiveMinuteRate": {
          "type": "number",
          "format": "double"
        },
        "meanRate": {
          "type": "number",
          "format": "double"
        },
        "oneMinuteRate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TimestampsCache": {
      "type": "object",
      "properties": {
        "region": {
          "$ref": "#/definitions/TimestampsRegion"
        }
      }
    },
    "TimestampsCacheFactory": {
      "type": "object"
    },
    "TimestampsRegion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "regionFactory": {
          "$ref": "#/definitions/RegionFactory"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "NOT_ACTIVE",
            "ACTIVE",
            "COMMITTED",
            "ROLLED_BACK",
            "MARKED_ROLLBACK",
            "FAILED_COMMIT",
            "FAILED_ROLLBACK",
            "COMMITTING",
            "ROLLING_BACK"
          ]
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "active": {
          "type": "boolean"
        },
        "rollbackOnly": {
          "type": "boolean"
        }
      }
    },
    "TypeConfiguration": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "javaTypeDescriptorRegistry": {
          "$ref": "#/definitions/JavaTypeDescriptorRegistry"
        },
        "sqlTypeDescriptorRegistry": {
          "$ref": "#/definitions/SqlTypeDescriptorRegistry"
        },
        "basicTypeRegistry": {
          "$ref": "#/definitions/BasicTypeRegistry"
        },
        "importMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "typeResolver": {
          "$ref": "#/definitions/TypeResolver"
        },
        "serviceRegistry": {
          "$ref": "#/definitions/ServiceRegistry"
        },
        "sessionFactory": {
          "$ref": "#/definitions/SessionFactoryImplementor"
        },
        "metadataBuildingContext": {
          "$ref": "#/definitions/MetadataBuildingContext"
        }
      }
    },
    "TypeFactory": {
      "type": "object",
      "properties": {
        "classLoader": {
          "$ref": "#/definitions/ClassLoader"
        }
      }
    },
    "TypeHelper": {
      "type": "object"
    },
    "TypeInfo": {
      "type": "object",
      "properties": {
        "typeName": {
          "type": "string"
        },
        "jdbcTypeCode": {
          "type": "integer",
          "format": "int32"
        },
        "createParams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unsigned": {
          "type": "boolean"
        },
        "precision": {
          "type": "integer",
          "format": "int32"
        },
        "minimumScale": {
          "type": "integer",
          "format": "int32"
        },
        "maximumScale": {
          "type": "integer",
          "format": "int32"
        },
        "fixedPrecisionScale": {
          "type": "boolean"
        },
        "literalPrefix": {
          "type": "string"
        },
        "literalSuffix": {
          "type": "string"
        },
        "caseSensitive": {
          "type": "boolean"
        },
        "searchability": {
          "type": "string",
          "enum": [
            "NONE",
            "FULL",
            "CHAR",
            "BASIC"
          ]
        },
        "nullability": {
          "type": "string",
          "enum": [
            "NULLABLE",
            "NON_NULLABLE",
            "UNKNOWN"
          ]
        }
      }
    },
    "TypeObject": {
      "type": "object",
      "properties": {
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "TypeResolver": {
      "type": "object"
    },
    "TypeVariable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "genericDeclaration": {
          "$ref": "#/definitions/GenericDeclaration"
        },
        "annotatedBounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotatedType"
          }
        },
        "bounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "typeName": {
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "TypeVariableMethod": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "genericDeclaration": {
          "$ref": "#/definitions/Method"
        },
        "annotatedBounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotatedType"
          }
        },
        "bounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "typeName": {
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "TypeVariableObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "genericDeclaration": {
          "type": "object"
        },
        "annotatedBounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotatedType"
          }
        },
        "bounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "typeName": {
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        },
        "declaredAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "UniqueDelegate": {
      "type": "object"
    },
    "UpdateTimestampsCache": {
      "type": "object",
      "properties": {
        "region": {
          "$ref": "#/definitions/TimestampsRegion"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Value": {
      "type": "object",
      "properties": {
        "contentInclusion": {
          "type": "string",
          "enum": [
            "ALWAYS",
            "NON_NULL",
            "NON_ABSENT",
            "NON_EMPTY",
            "NON_DEFAULT",
            "CUSTOM",
            "USE_DEFAULTS"
          ]
        },
        "valueInclusion": {
          "type": "string",
          "enum": [
            "ALWAYS",
            "NON_NULL",
            "NON_ABSENT",
            "NON_EMPTY",
            "NON_DEFAULT",
            "CUSTOM",
            "USE_DEFAULTS"
          ]
        }
      }
    },
    "ValueGeneration": {
      "type": "object",
      "properties": {
        "generationTiming": {
          "type": "string",
          "enum": [
            "NEVER",
            "INSERT",
            "ALWAYS"
          ]
        },
        "valueGenerator": {
          "$ref": "#/definitions/ValueGeneratorObject"
        },
        "databaseGeneratedReferencedColumnValue": {
          "type": "string"
        }
      }
    },
    "ValueGenerator": {
      "type": "object"
    },
    "ValueGeneratorObject": {
      "type": "object"
    },
    "VaultServiceInternal": {
      "type": "object",
      "properties": {
        "updates": {
          "$ref": "#/definitions/ObservableUpdateContractState"
        },
        "rawUpdates": {
          "$ref": "#/definitions/ObservableUpdateContractState"
        }
      }
    },
    "VersionProperty": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/AttributeSource"
        },
        "unsavedValue": {
          "$ref": "#/definitions/VersionValue"
        },
        "nullable": {
          "type": "boolean"
        },
        "lazy": {
          "type": "boolean"
        },
        "updateable": {
          "type": "boolean"
        },
        "insertable": {
          "type": "boolean"
        },
        "versionable": {
          "type": "boolean"
        },
        "cascadeStyle": {
          "$ref": "#/definitions/CascadeStyle"
        },
        "valueGenerationStrategy": {
          "$ref": "#/definitions/ValueGeneration"
        },
        "dirtyCheckable": {
          "type": "boolean"
        },
        "fetchMode": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "JOIN",
            "SELECT"
          ]
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "node": {
          "type": "string"
        }
      }
    },
    "VersionType": {
      "type": "object",
      "properties": {
        "comparator": {
          "$ref": "#/definitions/ComparatorObject"
        },
        "name": {
          "type": "string"
        },
        "mutable": {
          "type": "boolean"
        },
        "associationType": {
          "type": "boolean"
        },
        "entityType": {
          "type": "boolean"
        },
        "anyType": {
          "type": "boolean"
        },
        "componentType": {
          "type": "boolean"
        },
        "collectionType": {
          "type": "boolean"
        }
      }
    },
    "VersionValue": {
      "type": "object"
    },
    "ViolatedConstraintNameExtracter": {
      "type": "object"
    },
    "WritableTransactionStorage": {
      "type": "object",
      "properties": {
        "updates": {
          "$ref": "#/definitions/ObservableSignedTransaction"
        }
      }
    },
    "X509KeyStore": {
      "type": "object",
      "properties": {
        "internal": {
          "$ref": "#/definitions/KeyStore"
        }
      }
    },
    "CannotBeDeserialisedException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "e": {
          "$ref": "#/definitions/Exception"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "Exception": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "CordappNotInstalledException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "FlowVersionIncompatibleException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "cordapp": {
          "$ref": "#/definitions/Cordapp"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "SubFlowCoreVersionIncompatibleException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "CheckpointVerifier": {
      "type": "object"
    },
    "ConfigurationException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "CordaRPCOpsImpl": {
      "type": "object",
      "properties": {
        "protocolVersion": {
          "type": "integer",
          "format": "int32"
        },
        "flowsDrainingModeEnabled": {
          "type": "boolean"
        },
        "waitingForShutdown": {
          "type": "boolean"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "DBNetworkParametersStorage": {
      "type": "object",
      "properties": {
        "defaultHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "currentHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "PersistentNetworkParameters": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "epoch": {
          "type": "integer",
          "format": "int32"
        },
        "networkParametersBytes": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "signedNetworkParameters": {
          "$ref": "#/definitions/SignedDataWithCertNetworkParameters"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "SignedDataWithCert": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "sig": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "id": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "SignedDataWithCertNetworkParameters": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "sig": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "id": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "DataSourceFactory": {
      "type": "object"
    },
    "DbExceptionHandler": {
      "type": "object"
    },
    "FlowStarterImpl": {
      "type": "object"
    },
    "CorDapp": {
      "type": "object",
      "properties": {
        "flowVersion": {
          "type": "integer",
          "format": "int32"
        },
        "appName": {
          "type": "string"
        }
      }
    },
    "Core": {
      "type": "object"
    },
    "NetworkParametersReader": {
      "type": "object"
    },
    "NetworkMapNotConfigured": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "OldParams": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "OldParamsAndUpdate": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "ParamsNotConfigured": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "NetworkParametersAndSigned": {
      "type": "object",
      "properties": {
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        },
        "signed": {
          "$ref": "#/definitions/SignedDataWithCertNetworkParameters"
        }
      }
    },
    "ContractUpgradeServiceImpl": {
      "type": "object"
    },
    "CordaClock": {
      "type": "object",
      "properties": {
        "zone": {
          "$ref": "#/definitions/ZoneId"
        },
        "mutations": {
          "$ref": "#/definitions/ObservableLong"
        }
      }
    },
    "CordaFutureUnit": {
      "type": "object",
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "CordappLoader": {
      "type": "object",
      "properties": {
        "appClassLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "cordappSchemas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MappedSchema"
          }
        },
        "cordapps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CordappImpl"
          }
        },
        "flowCordappMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Cordapp"
          }
        }
      }
    },
    "CordappProviderImpl": {
      "type": "object",
      "properties": {
        "cordappLoader": {
          "$ref": "#/definitions/CordappLoader"
        },
        "cordapps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CordappImpl"
          }
        },
        "appContext": {
          "$ref": "#/definitions/CordappContext"
        }
      }
    },
    "CryptoService": {
      "type": "object"
    },
    "DBCheckpointStorage": {
      "type": "object",
      "properties": {
        "log": {
          "$ref": "#/definitions/Logger"
        },
        "allCheckpoints": {
          "$ref": "#/definitions/StreamPairStateMachineRunIdSerializedBytesCheckpoint"
        }
      }
    },
    "DummyAuditService": {
      "type": "object"
    },
    "FlowLogicRefFactoryImpl": {
      "type": "object"
    },
    "FlowsDrainingModeOperationsImpl": {
      "type": "object",
      "properties": {
        "values": {
          "$ref": "#/definitions/PublishSubjectPairBooleanBoolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "map$node": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InMemoryTransactionVerifierService": {
      "type": "object"
    },
    "KeyManagementServiceInternal": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "NetworkMapClient": {
      "type": "object"
    },
    "Node": {
      "type": "object",
      "properties": {
        "metricRegistry": {
          "$ref": "#/definitions/MetricRegistry"
        },
        "monitoringService": {
          "$ref": "#/definitions/MonitoringService"
        },
        "cordappLoader": {
          "$ref": "#/definitions/CordappLoader"
        },
        "schemaService": {
          "$ref": "#/definitions/NodeSchemaService"
        },
        "identityService": {
          "$ref": "#/definitions/PersistentIdentityService"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "networkMapCache": {
          "$ref": "#/definitions/PersistentNetworkMapCache"
        },
        "checkpointStorage": {
          "$ref": "#/definitions/DBCheckpointStorage"
        },
        "transactionStorage": {
          "$ref": "#/definitions/WritableTransactionStorage"
        },
        "networkMapClient": {
          "$ref": "#/definitions/NetworkMapClient"
        },
        "attachments": {
          "$ref": "#/definitions/NodeAttachmentService"
        },
        "cryptoService": {
          "$ref": "#/definitions/CryptoService"
        },
        "networkParametersStorage": {
          "$ref": "#/definitions/NetworkParametersStorage"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProviderImpl"
        },
        "keyManagementService": {
          "$ref": "#/definitions/KeyManagementServiceInternal"
        },
        "servicesForResolution": {
          "$ref": "#/definitions/ServicesForResolutionImpl"
        },
        "vaultService": {
          "$ref": "#/definitions/VaultServiceInternal"
        },
        "nodeProperties": {
          "$ref": "#/definitions/NodePropertiesPersistentStore"
        },
        "flowLogicRefFactory": {
          "$ref": "#/definitions/FlowLogicRefFactoryImpl"
        },
        "networkMapUpdater": {
          "$ref": "#/definitions/NetworkMapUpdater"
        },
        "transactionVerifierService": {
          "$ref": "#/definitions/InMemoryTransactionVerifierService"
        },
        "contractUpgradeService": {
          "$ref": "#/definitions/ContractUpgradeServiceImpl"
        },
        "auditService": {
          "$ref": "#/definitions/DummyAuditService"
        },
        "services": {
          "$ref": "#/definitions/ServiceHubInternalImpl"
        },
        "smm": {
          "$ref": "#/definitions/StateMachineManager"
        },
        "flowStarter": {
          "$ref": "#/definitions/FlowStarterImpl"
        },
        "configuration": {
          "$ref": "#/definitions/NodeConfiguration"
        },
        "platformClock": {
          "$ref": "#/definitions/CordaClock"
        },
        "serverThread": {
          "$ref": "#/definitions/ServiceAffinityExecutor"
        },
        "busyNodeLatch": {
          "$ref": "#/definitions/ReusableLatch"
        },
        "startupComplete": {
          "$ref": "#/definitions/CordaFutureUnit"
        },
        "serializationWhitelists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SerializationWhitelist"
          }
        },
        "started": {
          "$ref": "#/definitions/NodeInfo"
        },
        "nodeReadyFuture": {
          "$ref": "#/definitions/CordaFutureUnit"
        }
      }
    },
    "NodeAttachmentService": {
      "type": "object",
      "properties": {
        "servicesForResolution": {
          "$ref": "#/definitions/ServicesForResolution"
        },
        "checkAttachmentsOnLoad": {
          "type": "boolean"
        },
        "devMode": {
          "type": "boolean"
        }
      }
    },
    "NodePropertiesPersistentStore": {
      "type": "object",
      "properties": {
        "flowsDrainingMode": {
          "$ref": "#/definitions/FlowsDrainingModeOperationsImpl"
        }
      }
    },
    "NodeSchemaService": {
      "type": "object",
      "properties": {
        "schemaOptions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SchemaOptions"
          }
        }
      }
    },
    "PersistentIdentityService": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "ourNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "O=Bank A, L=London, C=GB",
            "description": "CordaX500Name encoded Party"
          }
        },
        "caCertStore": {
          "$ref": "#/definitions/CertStore"
        },
        "trustAnchor": {
          "$ref": "#/definitions/TrustAnchor"
        },
        "allIdentities": {
          "$ref": "#/definitions/IterablePartyAndCertificate"
        },
        "trustRoot": {
          "$ref": "#/definitions/X509Certificate"
        }
      }
    },
    "PersistentNetworkMapCache": {
      "type": "object",
      "properties": {
        "changed": {
          "$ref": "#/definitions/ObservableMapChange"
        },
        "nodeReady": {
          "$ref": "#/definitions/OpenFutureVoid"
        },
        "notaryIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "allNodeHashes": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "allNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInfo"
          }
        }
      }
    },
    "PublishSubjectPairBooleanBoolean": {
      "type": "object",
      "properties": {
        "throwable": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "RejectedExecutionHandler": {
      "type": "object"
    },
    "ReusableLatch": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Runnable": {
      "type": "object"
    },
    "ServiceAffinityExecutor": {
      "type": "object",
      "properties": {
        "largestPoolSize": {
          "type": "integer",
          "format": "int32"
        },
        "completedTaskCount": {
          "type": "integer",
          "format": "int64"
        },
        "threadFactory": {
          "$ref": "#/definitions/ThreadFactory"
        },
        "corePoolSize": {
          "type": "integer",
          "format": "int32"
        },
        "maximumPoolSize": {
          "type": "integer",
          "format": "int32"
        },
        "onThread": {
          "type": "boolean"
        },
        "queue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Runnable"
          }
        },
        "executeExistingDelayedTasksAfterShutdownPolicy": {
          "type": "boolean"
        },
        "continueExistingPeriodicTasksAfterShutdownPolicy": {
          "type": "boolean"
        },
        "removeOnCancelPolicy": {
          "type": "boolean"
        },
        "shutdown": {
          "type": "boolean"
        },
        "terminated": {
          "type": "boolean"
        },
        "terminating": {
          "type": "boolean"
        },
        "rejectedExecutionHandler": {
          "$ref": "#/definitions/RejectedExecutionHandler"
        },
        "poolSize": {
          "type": "integer",
          "format": "int32"
        },
        "activeCount": {
          "type": "integer",
          "format": "int32"
        },
        "taskCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServicesForResolution": {
      "type": "object",
      "properties": {
        "networkParametersService": {
          "$ref": "#/definitions/NetworkParametersService"
        },
        "attachments": {
          "$ref": "#/definitions/AttachmentStorage"
        },
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProvider"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "ServicesForResolutionImpl": {
      "type": "object",
      "properties": {
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "attachments": {
          "$ref": "#/definitions/AttachmentStorage"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProvider"
        },
        "networkParametersService": {
          "$ref": "#/definitions/NetworkParametersService"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "StaffedFlowHospital": {
      "type": "object"
    },
    "StateMachineManager": {
      "type": "object",
      "properties": {
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "flowHospital": {
          "$ref": "#/definitions/StaffedFlowHospital"
        },
        "allStateMachines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlowLogicObject"
          }
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "parallel": {
          "type": "boolean"
        }
      }
    },
    "StreamPairStateMachineRunIdSerializedBytesCheckpoint": {
      "type": "object",
      "properties": {
        "parallel": {
          "type": "boolean"
        }
      }
    },
    "ThreadFactory": {
      "type": "object"
    },
    "Node$WhenMappings": {
      "type": "object"
    },
    "NodeFlowManager": {
      "type": "object"
    },
    "NodeStartup": {
      "type": "object",
      "properties": {
        "cmdLineOptions": {
          "$ref": "#/definitions/SharedNodeCmdLineOptions"
        },
        "versionInfo": {
          "$ref": "#/definitions/VersionInfo"
        }
      }
    },
    "CliWrapperBase": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "ColorScheme": {
      "type": "object"
    },
    "CommandLine": {
      "type": "object",
      "properties": {
        "commandSpec": {
          "$ref": "#/definitions/CommandSpec"
        },
        "executionResult": {
          "type": "object"
        },
        "out": {
          "$ref": "#/definitions/PrintWriter"
        },
        "err": {
          "$ref": "#/definitions/PrintWriter"
        },
        "colorScheme": {
          "$ref": "#/definitions/ColorScheme"
        },
        "exitCodeExceptionMapper": {
          "$ref": "#/definitions/IExitCodeExceptionMapper"
        },
        "executionStrategy": {
          "$ref": "#/definitions/IExecutionStrategy"
        },
        "parameterExceptionHandler": {
          "$ref": "#/definitions/IParameterExceptionHandler"
        },
        "executionExceptionHandler": {
          "$ref": "#/definitions/IExecutionExceptionHandler"
        },
        "parent": {
          "$ref": "#/definitions/CommandLine"
        },
        "separator": {
          "type": "string"
        },
        "resourceBundle": {
          "$ref": "#/definitions/ResourceBundle"
        },
        "mixins": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "subcommands": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CommandLine"
          }
        },
        "command": {
          "type": "object"
        },
        "usageHelpRequested": {
          "type": "boolean"
        },
        "versionHelpRequested": {
          "type": "boolean"
        },
        "helpFactory": {
          "$ref": "#/definitions/IHelpFactory"
        },
        "helpSectionKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "helpSectionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/IHelpSectionRenderer"
          }
        },
        "adjustLineBreaksForWideCJKCharacters": {
          "type": "boolean"
        },
        "toggleBooleanFlags": {
          "type": "boolean"
        },
        "interpolateVariables": {
          "type": "boolean"
        },
        "overwrittenOptionsAllowed": {
          "type": "boolean"
        },
        "posixClusteredShortOptionsAllowed": {
          "type": "boolean"
        },
        "caseInsensitiveEnumValuesAllowed": {
          "type": "boolean"
        },
        "trimQuotes": {
          "type": "boolean"
        },
        "splitQuotedStrings": {
          "type": "boolean"
        },
        "endOfOptionsDelimiter": {
          "type": "string"
        },
        "defaultValueProvider": {
          "$ref": "#/definitions/IDefaultValueProvider"
        },
        "stopAtPositional": {
          "type": "boolean"
        },
        "stopAtUnmatched": {
          "type": "boolean"
        },
        "unmatchedOptionsArePositionalParams": {
          "type": "boolean"
        },
        "unmatchedArgumentsAllowed": {
          "type": "boolean"
        },
        "unmatchedArguments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parseResult": {
          "$ref": "#/definitions/ParseResult"
        },
        "usageMessage": {
          "type": "string"
        },
        "usageHelpWidth": {
          "type": "integer",
          "format": "int32"
        },
        "usageHelpAutoWidth": {
          "type": "boolean"
        },
        "commandName": {
          "type": "string"
        },
        "expandAtFiles": {
          "type": "boolean"
        },
        "atFileCommentChar": {
          "type": "string"
        },
        "useSimplifiedAtFiles": {
          "type": "boolean"
        },
        "negatableOptionTransformer": {
          "$ref": "#/definitions/INegatableOptionTransformer"
        }
      }
    },
    "CommandSpec": {
      "type": "object",
      "properties": {
        "addMethodSubcommands": {
          "type": "boolean"
        }
      }
    },
    "GroupMatch": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      }
    },
    "IDefaultValueProvider": {
      "type": "object"
    },
    "IExecutionExceptionHandler": {
      "type": "object"
    },
    "IExecutionStrategy": {
      "type": "object"
    },
    "IExitCodeExceptionMapper": {
      "type": "object"
    },
    "IHelpFactory": {
      "type": "object"
    },
    "IHelpSectionRenderer": {
      "type": "object"
    },
    "INegatableOptionTransformer": {
      "type": "object"
    },
    "IParameterExceptionHandler": {
      "type": "object"
    },
    "NodeStartupCli": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startup": {
          "$ref": "#/definitions/NodeStartup"
        },
        "cmdLineOptions": {
          "$ref": "#/definitions/NodeCmdLineOptions"
        },
        "cmd": {
          "$ref": "#/definitions/CommandLine"
        },
        "subCommands": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CliWrapperBase"
          }
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "ParseResult": {
      "type": "object",
      "properties": {
        "usageHelpRequested": {
          "type": "boolean"
        },
        "versionHelpRequested": {
          "type": "boolean"
        },
        "groupMatches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupMatch"
          }
        }
      }
    },
    "NodeWithInfo": {
      "type": "object",
      "properties": {
        "services": {
          "$ref": "#/definitions/StartedNodeServices"
        },
        "node": {
          "$ref": "#/definitions/Node"
        },
        "info": {
          "$ref": "#/definitions/NodeInfo"
        }
      }
    },
    "StartedNodeServices": {
      "type": "object",
      "properties": {
        "networkMapCache": {
          "$ref": "#/definitions/NetworkMapCacheInternal"
        },
        "configuration": {
          "$ref": "#/definitions/NodeConfiguration"
        },
        "validatedTransactions": {
          "$ref": "#/definitions/WritableTransactionStorage"
        },
        "attachments": {
          "$ref": "#/definitions/AttachmentStorageInternal"
        },
        "vaultService": {
          "$ref": "#/definitions/VaultServiceInternal"
        },
        "rpcFlows": {
          "type": "array"
        },
        "schemaService": {
          "$ref": "#/definitions/SchemaService"
        },
        "stateMachineRecordedTransactionMapping": {
          "$ref": "#/definitions/StateMachineRecordedTransactionMappingStorage"
        },
        "nodeProperties": {
          "$ref": "#/definitions/NodePropertiesStore"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "monitoringService": {
          "$ref": "#/definitions/MonitoringService"
        },
        "auditService": {
          "$ref": "#/definitions/AuditService"
        },
        "networkService": {
          "$ref": "#/definitions/MessagingService"
        },
        "networkMapUpdater": {
          "$ref": "#/definitions/NetworkMapUpdater"
        },
        "cacheFactory": {
          "$ref": "#/definitions/NamedCacheFactory"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProviderInternal"
        },
        "keyManagementService": {
          "$ref": "#/definitions/KeyManagementService"
        },
        "contractUpgradeService": {
          "$ref": "#/definitions/ContractUpgradeService"
        },
        "clock": {
          "$ref": "#/definitions/Clock"
        },
        "transactionVerifierService": {
          "$ref": "#/definitions/TransactionVerifierService"
        },
        "myInfo": {
          "$ref": "#/definitions/NodeInfo"
        },
        "appContext": {
          "$ref": "#/definitions/CordappContext"
        },
        "networkParametersService": {
          "$ref": "#/definitions/NetworkParametersService"
        },
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "StateMachineRecordedTransactionMappingStorage": {
      "type": "object"
    },
    "StubbedNodeUniqueIdProvider": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "BrokerAddresses": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "primary": {
          "$ref": "#/definitions/NetworkHostAndPort"
        }
      }
    },
    "BrokerJaasLoginModule": {
      "type": "object"
    },
    "Any": {
      "type": "object"
    },
    "LeafMustMatch": {
      "type": "object"
    },
    "MustContainOneOf": {
      "type": "object"
    },
    "RootMustMatch": {
      "type": "object"
    },
    "UsernameMustMatchCommonName": {
      "type": "object"
    },
    "UsernameMustMatchCommonNameCheck": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "NodeJaasConfig": {
      "type": "object",
      "properties": {
        "keyStore": {
          "$ref": "#/definitions/KeyStore"
        },
        "trustStore": {
          "$ref": "#/definitions/KeyStore"
        }
      }
    },
    "P2PJaasConfig": {
      "type": "object",
      "properties": {
        "keyStore": {
          "$ref": "#/definitions/KeyStore"
        },
        "trustStore": {
          "$ref": "#/definitions/KeyStore"
        }
      }
    },
    "Function1": {
      "type": "object"
    },
    "Function1StringUnit": {
      "type": "object"
    },
    "RPCJaasConfig": {
      "type": "object",
      "properties": {
        "securityManager": {
          "$ref": "#/definitions/RPCSecurityManager"
        },
        "loginListener": {
          "$ref": "#/definitions/Function1StringUnit"
        },
        "useSslForRPC": {
          "type": "boolean"
        }
      }
    },
    "RPCSecurityManager": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/AuthServiceId"
        }
      }
    },
    "ActiveMQServerPlugin": {
      "type": "object"
    },
    "AddressSettings": {
      "type": "object",
      "properties": {
        "addressFullMessagePolicy": {
          "type": "string",
          "enum": [
            "DROP",
            "PAGE",
            "BLOCK",
            "FAIL"
          ]
        },
        "maxSizeBytes": {
          "type": "integer",
          "format": "int64"
        },
        "pageSizeBytes": {
          "type": "integer",
          "format": "int64"
        },
        "maxDeliveryAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "messageCounterHistoryDayLimit": {
          "type": "integer",
          "format": "int32"
        },
        "redeliveryDelay": {
          "type": "integer",
          "format": "int64"
        },
        "redeliveryMultiplier": {
          "type": "number",
          "format": "double"
        },
        "maxRedeliveryDelay": {
          "type": "integer",
          "format": "int64"
        },
        "deadLetterAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "expiryAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "expiryDelay": {
          "type": "integer",
          "format": "int64"
        },
        "defaultLastValueQueue": {
          "type": "boolean"
        },
        "defaultExclusiveQueue": {
          "type": "boolean"
        },
        "redistributionDelay": {
          "type": "integer",
          "format": "int64"
        },
        "sendToDLAOnNoRoute": {
          "type": "boolean"
        },
        "slowConsumerThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "slowConsumerCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "slowConsumerPolicy": {
          "type": "string",
          "enum": [
            "KILL",
            "NOTIFY"
          ]
        },
        "autoCreateJmsQueues": {
          "type": "boolean"
        },
        "autoDeleteJmsQueues": {
          "type": "boolean"
        },
        "autoCreateJmsTopics": {
          "type": "boolean"
        },
        "autoDeleteJmsTopics": {
          "type": "boolean"
        },
        "autoCreateQueues": {
          "type": "boolean"
        },
        "autoDeleteQueues": {
          "type": "boolean"
        },
        "configDeleteQueues": {
          "type": "string",
          "enum": [
            "OFF",
            "FORCE"
          ]
        },
        "autoCreateAddresses": {
          "type": "boolean"
        },
        "autoDeleteAddresses": {
          "type": "boolean"
        },
        "configDeleteAddresses": {
          "type": "string",
          "enum": [
            "OFF",
            "FORCE"
          ]
        },
        "managementBrowsePageSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxSizeBytesRejectThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "defaultMaxConsumers": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPurgeOnNoConsumers": {
          "type": "boolean"
        },
        "defaultQueueRoutingType": {
          "type": "string",
          "enum": [
            "MULTICAST",
            "ANYCAST"
          ]
        },
        "defaultAddressRoutingType": {
          "type": "string",
          "enum": [
            "MULTICAST",
            "ANYCAST"
          ]
        },
        "queuePrefetch": {
          "type": "integer",
          "format": "int32"
        },
        "pageCacheMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "encodeSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BridgeConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "queueName": {
          "type": "string"
        },
        "forwardingAddress": {
          "type": "string"
        },
        "filterString": {
          "type": "string"
        },
        "staticConnectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "discoveryGroupName": {
          "type": "string"
        },
        "ha": {
          "type": "boolean"
        },
        "transformerConfiguration": {
          "$ref": "#/definitions/TransformerConfiguration"
        },
        "retryInterval": {
          "type": "integer",
          "format": "int64"
        },
        "retryIntervalMultiplier": {
          "type": "number",
          "format": "double"
        },
        "initialConnectAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "reconnectAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "reconnectAttemptsOnSameNode": {
          "type": "integer",
          "format": "int32"
        },
        "useDuplicateDetection": {
          "type": "boolean"
        },
        "confirmationWindowSize": {
          "type": "integer",
          "format": "int32"
        },
        "producerWindowSize": {
          "type": "integer",
          "format": "int32"
        },
        "clientFailureCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "connectionTTL": {
          "type": "integer",
          "format": "int64"
        },
        "maxRetryInterval": {
          "type": "integer",
          "format": "int64"
        },
        "minLargeMessageSize": {
          "type": "integer",
          "format": "int32"
        },
        "callTimeout": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BroadcastEndpointFactory": {
      "type": "object"
    },
    "BroadcastGroupConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "broadcastPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "endpointFactory": {
          "$ref": "#/definitions/BroadcastEndpointFactory"
        },
        "connectorInfos": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterConnectionConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "connectorName": {
          "type": "string"
        },
        "clientFailureCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "connectionTTL": {
          "type": "integer",
          "format": "int64"
        },
        "retryInterval": {
          "type": "integer",
          "format": "int64"
        },
        "retryIntervalMultiplier": {
          "type": "number",
          "format": "double"
        },
        "maxRetryInterval": {
          "type": "integer",
          "format": "int64"
        },
        "initialConnectAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "reconnectAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "callTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "callFailoverTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "duplicateDetection": {
          "type": "boolean"
        },
        "messageLoadBalancingType": {
          "type": "string",
          "enum": [
            "OFF",
            "STRICT",
            "ON_DEMAND"
          ]
        },
        "compositeMembers": {
          "$ref": "#/definitions/CompositeData"
        },
        "staticConnectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "discoveryGroupName": {
          "type": "string"
        },
        "maxHops": {
          "type": "integer",
          "format": "int32"
        },
        "confirmationWindowSize": {
          "type": "integer",
          "format": "int32"
        },
        "producerWindowSize": {
          "type": "integer",
          "format": "int32"
        },
        "allowDirectConnectionsOnly": {
          "type": "boolean"
        },
        "minLargeMessageSize": {
          "type": "integer",
          "format": "int32"
        },
        "clusterNotificationInterval": {
          "type": "integer",
          "format": "int64"
        },
        "clusterNotificationAttempts": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CompositeData": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fragment": {
          "type": "string"
        }
      }
    },
    "ConnectorServiceConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "factoryClassName": {
          "type": "string"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "connectorName": {
          "type": "string"
        }
      }
    },
    "CoreAddressConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "routingTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MULTICAST",
              "ANYCAST"
            ]
          }
        },
        "queueConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreQueueConfiguration"
          }
        }
      }
    },
    "CoreQueueConfiguration": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "filterString": {
          "type": "string"
        },
        "durable": {
          "type": "boolean"
        },
        "user": {
          "type": "string"
        },
        "exclusive": {
          "type": "boolean"
        },
        "lastValue": {
          "type": "boolean"
        },
        "maxConsumers": {
          "type": "integer",
          "format": "int32"
        },
        "purgeOnNoConsumers": {
          "type": "boolean"
        },
        "routingType": {
          "type": "string",
          "enum": [
            "MULTICAST",
            "ANYCAST"
          ]
        },
        "maxConsumerConfigured": {
          "type": "boolean"
        }
      }
    },
    "DiscoveryGroupConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "refreshTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "discoveryInitialWaitTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "broadcastEndpointFactory": {
          "$ref": "#/definitions/BroadcastEndpointFactory"
        }
      }
    },
    "DivertConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "routingName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "forwardingAddress": {
          "type": "string"
        },
        "exclusive": {
          "type": "boolean"
        },
        "filterString": {
          "type": "string"
        },
        "transformerConfiguration": {
          "$ref": "#/definitions/TransformerConfiguration"
        },
        "routingType": {
          "type": "string",
          "enum": [
            "MULTICAST",
            "ANYCAST",
            "STRIP",
            "PASS"
          ]
        }
      }
    },
    "GroupingHandlerConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/SimpleString"
        },
        "type": {
          "type": "string",
          "enum": [
            "LOCAL",
            "REMOTE"
          ]
        },
        "address": {
          "$ref": "#/definitions/SimpleString"
        },
        "timeout": {
          "type": "integer",
          "format": "int64"
        },
        "groupTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "reaperPeriod": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "HAPolicyConfiguration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "LIVE_ONLY",
            "REPLICATED",
            "REPLICA",
            "SHARED_STORE_MASTER",
            "SHARED_STORE_SLAVE",
            "COLOCATED"
          ]
        }
      }
    },
    "ResourceLimitSettings": {
      "type": "object",
      "properties": {
        "match": {
          "$ref": "#/definitions/SimpleString"
        },
        "maxConnections": {
          "type": "integer",
          "format": "int32"
        },
        "maxQueues": {
          "type": "integer",
          "format": "int32"
        },
        "encodeSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "send": {
          "type": "boolean"
        },
        "consume": {
          "type": "boolean"
        },
        "createAddress": {
          "type": "boolean"
        },
        "deleteAddress": {
          "type": "boolean"
        },
        "createDurableQueue": {
          "type": "boolean"
        },
        "deleteDurableQueue": {
          "type": "boolean"
        },
        "createNonDurableQueue": {
          "type": "boolean"
        },
        "deleteNonDurableQueue": {
          "type": "boolean"
        },
        "manage": {
          "type": "boolean"
        },
        "browse": {
          "type": "boolean"
        }
      }
    },
    "SecureArtemisConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "persistenceEnabled": {
          "type": "boolean"
        },
        "journalDatasync": {
          "type": "boolean"
        },
        "persistDeliveryCountBeforeDelivery": {
          "type": "boolean"
        },
        "scheduledThreadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "threadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "securityInvalidationInterval": {
          "type": "integer",
          "format": "int64"
        },
        "securityEnabled": {
          "type": "boolean"
        },
        "gracefulShutdownEnabled": {
          "type": "boolean"
        },
        "gracefulShutdownTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "connectionTTLOverride": {
          "type": "integer",
          "format": "int64"
        },
        "asyncConnectionExecutionEnabled": {
          "type": "boolean"
        },
        "messageExpiryScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "messageExpiryThreadPriority": {
          "type": "integer",
          "format": "int32"
        },
        "persistIDCache": {
          "type": "boolean"
        },
        "incomingInterceptorClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outgoingInterceptorClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bridgeConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BridgeConfiguration"
          }
        },
        "divertConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DivertConfiguration"
          }
        },
        "clusterConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterConnectionConfiguration"
          }
        },
        "queueConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreQueueConfiguration"
          }
        },
        "addressConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreAddressConfiguration"
          }
        },
        "broadcastGroupConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BroadcastGroupConfiguration"
          }
        },
        "discoveryGroupConfigurations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DiscoveryGroupConfiguration"
          }
        },
        "pagingDirectory": {
          "type": "string"
        },
        "largeMessagesDirectory": {
          "type": "string"
        },
        "bindingsDirectory": {
          "type": "string"
        },
        "createBindingsDir": {
          "type": "boolean"
        },
        "journalDirectory": {
          "type": "string"
        },
        "createJournalDir": {
          "type": "boolean"
        },
        "journalType": {
          "type": "string",
          "enum": [
            "NIO",
            "ASYNCIO",
            "MAPPED"
          ]
        },
        "journalSyncTransactional": {
          "type": "boolean"
        },
        "journalSyncNonTransactional": {
          "type": "boolean"
        },
        "journalCompactMinFiles": {
          "type": "integer",
          "format": "int32"
        },
        "journalCompactPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "journalFileOpenTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "journalFileSize": {
          "type": "integer",
          "format": "int32"
        },
        "journalPoolFiles": {
          "type": "integer",
          "format": "int32"
        },
        "journalMinFiles": {
          "type": "integer",
          "format": "int32"
        },
        "journalMaxIO_AIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferTimeout_AIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferSize_AIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalMaxIO_NIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferTimeout_NIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferSize_NIO": {
          "type": "integer",
          "format": "int32"
        },
        "logJournalWriteRate": {
          "type": "boolean"
        },
        "wildcardConfiguration": {
          "$ref": "#/definitions/WildcardConfiguration"
        },
        "messageCounterEnabled": {
          "type": "boolean"
        },
        "messageCounterSamplePeriod": {
          "type": "integer",
          "format": "int64"
        },
        "messageCounterMaxDayHistory": {
          "type": "integer",
          "format": "int32"
        },
        "transactionTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "transactionTimeoutScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "managementAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "managementNotificationAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "clusterUser": {
          "type": "string"
        },
        "clusterPassword": {
          "type": "string"
        },
        "serverDumpInterval": {
          "type": "integer",
          "format": "int64"
        },
        "failoverOnServerShutdown": {
          "type": "boolean"
        },
        "memoryWarningThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "memoryMeasureInterval": {
          "type": "integer",
          "format": "int64"
        },
        "groupingHandlerConfiguration": {
          "$ref": "#/definitions/GroupingHandlerConfiguration"
        },
        "addressesSettings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AddressSettings"
          }
        },
        "resourceLimitSettings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceLimitSettings"
          }
        },
        "securitySettingPlugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySettingPlugin"
          }
        },
        "brokerPlugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveMQServerPlugin"
          }
        },
        "securityRoleNameMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        },
        "connectorServiceConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorServiceConfiguration"
          }
        },
        "maskPassword": {
          "type": "boolean"
        },
        "passwordCodec": {
          "type": "string"
        },
        "resolveProtocols": {
          "type": "boolean"
        },
        "journalLockAcquisitionTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "storeConfiguration": {
          "$ref": "#/definitions/StoreConfiguration"
        },
        "populateValidatedUser": {
          "type": "boolean"
        },
        "connectionTtlCheckInterval": {
          "type": "integer",
          "format": "int64"
        },
        "configurationUrl": {
          "type": "string",
          "format": "url"
        },
        "configurationFileRefreshPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "globalMaxSize": {
          "type": "integer",
          "format": "int64"
        },
        "amqpUseCoreSubscriptionNaming": {
          "type": "boolean"
        },
        "maxDiskUsage": {
          "type": "integer",
          "format": "int32"
        },
        "diskScanPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "systemPropertyPrefix": {
          "type": "string"
        },
        "networkCheckList": {
          "type": "string"
        },
        "networkCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "networkCheckTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "networkCheckNIC": {
          "type": "string"
        },
        "networkCheckPingCommand": {
          "type": "string"
        },
        "networkCheckPing6Command": {
          "type": "string"
        },
        "internalNamingPrefix": {
          "type": "string"
        },
        "criticalAnalyzer": {
          "type": "boolean"
        },
        "criticalAnalyzerPolicy": {
          "type": "string",
          "enum": [
            "HALT",
            "SHUTDOWN",
            "LOG"
          ]
        },
        "criticalAnalyzerTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "criticalAnalyzerCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "fileDeployerScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "acceptorConfigurations": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TransportConfiguration"
          }
        },
        "connectorConfigurations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TransportConfiguration"
          }
        },
        "idcacheSize": {
          "type": "integer",
          "format": "int32"
        },
        "bindingsLocation": {
          "type": "file"
        },
        "pageMaxConcurrentIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalLocation": {
          "type": "file"
        },
        "pagingLocation": {
          "type": "file"
        },
        "wildcardRoutingEnabled": {
          "type": "boolean"
        },
        "jmxmanagementEnabled": {
          "type": "boolean"
        },
        "jmxdomain": {
          "type": "string"
        },
        "jmxuseBrokerName": {
          "type": "boolean"
        },
        "largeMessagesLocation": {
          "type": "file"
        },
        "securityRoles": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "brokerInstance": {
          "type": "file"
        },
        "checkForLiveServer": {
          "type": "boolean"
        },
        "hapolicyConfiguration": {
          "$ref": "#/definitions/HAPolicyConfiguration"
        },
        "networkCheckURLList": {
          "type": "string"
        },
        "clustered": {
          "type": "boolean"
        },
        "jdbc": {
          "type": "boolean"
        }
      }
    },
    "SecuritySettingPlugin": {
      "type": "object",
      "properties": {
        "securityRoles": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/Role"
            }
          }
        }
      }
    },
    "SimpleString": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "StoreConfiguration": {
      "type": "object",
      "properties": {
        "storeType": {
          "type": "string",
          "enum": [
            "FILE",
            "DATABASE"
          ]
        }
      }
    },
    "TransformerConfiguration": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TransportConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "factoryClassName": {
          "type": "string"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "extraParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "WildcardConfiguration": {
      "type": "object",
      "properties": {
        "routingEnabled": {
          "type": "boolean"
        },
        "singleWord": {
          "type": "string"
        },
        "anyWords": {
          "type": "string"
        },
        "delimiter": {
          "type": "string"
        },
        "singleWordString": {
          "type": "string"
        },
        "anyWordsString": {
          "type": "string"
        },
        "delimiterString": {
          "type": "string"
        }
      }
    },
    "CordappConfigFileProvider": {
      "type": "object"
    },
    "CordappInvalidVersionException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "JarScanningCordappLoader": {
      "type": "object",
      "properties": {
        "appClassLoader": {
          "$ref": "#/definitions/URLClassLoader"
        },
        "cordapps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CordappImpl"
          }
        },
        "cordappSchemas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MappedSchema"
          }
        },
        "flowCordappMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Cordapp"
          }
        }
      }
    },
    "URLClassLoader": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/ClassLoader"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "url"
          }
        }
      }
    },
    "MultipleCordappsForFlowException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "TypesafeCordappConfig": {
      "type": "object"
    },
    "VirtualCordapp": {
      "type": "object"
    },
    "AuthenticatedRpcOpsProxy": {
      "type": "object",
      "properties": {
        "protocolVersion": {
          "type": "integer",
          "format": "int32"
        },
        "flowsDrainingModeEnabled": {
          "type": "boolean"
        },
        "waitingForShutdown": {
          "type": "boolean"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "ExceptionMaskingRpcOpsProxy": {
      "type": "object",
      "properties": {
        "protocolVersion": {
          "type": "integer",
          "format": "int32"
        },
        "flowsDrainingModeEnabled": {
          "type": "boolean"
        },
        "waitingForShutdown": {
          "type": "boolean"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "ExceptionSerialisingRpcOpsProxy": {
      "type": "object",
      "properties": {
        "protocolVersion": {
          "type": "integer",
          "format": "int32"
        },
        "flowsDrainingModeEnabled": {
          "type": "boolean"
        },
        "waitingForShutdown": {
          "type": "boolean"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "ThreadContextAdjustingRpcOpsProxy": {
      "type": "object",
      "properties": {
        "protocolVersion": {
          "type": "integer",
          "format": "int32"
        },
        "flowsDrainingModeEnabled": {
          "type": "boolean"
        },
        "waitingForShutdown": {
          "type": "boolean"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "NodeInfoSchema": {
      "type": "object"
    },
    "NodeInfoSchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "DBHostAndPort": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DBPartyAndCertificate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "owningKeyHash": {
          "type": "string"
        },
        "partyCertBinary": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "main": {
          "type": "boolean"
        }
      }
    },
    "PersistentNodeInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DBHostAndPort"
          }
        },
        "legalIdentitiesAndCerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DBPartyAndCertificate"
          }
        },
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "serial": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AdminSubject": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string"
        }
      }
    },
    "CacheManager": {
      "type": "object"
    },
    "CacheObjectAuthenticationInfo": {
      "type": "object"
    },
    "CacheObjectAuthorizationInfo": {
      "type": "object"
    },
    "CredentialsMatcher": {
      "type": "object"
    },
    "InMemoryRealm": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cachingEnabled": {
          "type": "boolean"
        },
        "cacheManager": {
          "$ref": "#/definitions/CacheManager"
        },
        "credentialsMatcher": {
          "$ref": "#/definitions/CredentialsMatcher"
        },
        "authenticationCache": {
          "$ref": "#/definitions/CacheObjectAuthenticationInfo"
        },
        "authenticationCachingEnabled": {
          "type": "boolean"
        },
        "authenticationCacheName": {
          "type": "string"
        },
        "authorizationCachingEnabled": {
          "type": "boolean"
        },
        "authorizationCache": {
          "$ref": "#/definitions/CacheObjectAuthorizationInfo"
        },
        "authorizationCacheName": {
          "type": "string"
        },
        "permissionResolver": {
          "$ref": "#/definitions/PermissionResolver"
        },
        "rolePermissionResolver": {
          "$ref": "#/definitions/RolePermissionResolver"
        }
      }
    },
    "PermissionResolver": {
      "type": "object"
    },
    "RolePermissionResolver": {
      "type": "object"
    },
    "Password": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valueAsString": {
          "type": "string"
        }
      }
    },
    "RPCSecurityManagerImpl": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/AuthServiceId"
        }
      }
    },
    "RPCSecurityManagerImpl$Companion$WhenMappings": {
      "type": "object"
    },
    "RPCSecurityManagerImplKt$WhenMappings": {
      "type": "object"
    },
    "RPCSecurityManagerWithAdditionalUser": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/AuthServiceId"
        }
      }
    },
    "ShiroAuthorizingSubject": {
      "type": "object",
      "properties": {
        "principal": {
          "type": "string"
        }
      }
    },
    "ClearNetworkCacheCli": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "cmdLineOptions": {
          "$ref": "#/definitions/SharedNodeCmdLineOptions"
        },
        "startup": {
          "$ref": "#/definitions/NodeStartup"
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "GenerateNodeInfoCli": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "cmdLineOptions": {
          "$ref": "#/definitions/SharedNodeCmdLineOptions"
        },
        "startup": {
          "$ref": "#/definitions/NodeStartup"
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "GenerateRpcSslCerts": {
      "type": "object"
    },
    "GenerateRpcSslCertsCli": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "cmdLineOptions": {
          "$ref": "#/definitions/SharedNodeCmdLineOptions"
        },
        "startup": {
          "$ref": "#/definitions/NodeStartup"
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "InitialRegistration": {
      "type": "object",
      "properties": {
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        }
      }
    },
    "InitialRegistrationCli": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "networkRootTrustStorePathParameter": {
          "$ref": "#/definitions/Path"
        },
        "networkRootTrustStorePassword": {
          "type": "string"
        },
        "cmdLineOptions": {
          "$ref": "#/definitions/InitialRegistrationCmdLineOptions"
        },
        "startup": {
          "$ref": "#/definitions/NodeStartup"
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "ValidateConfigurationCli": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbose": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "alias": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "specifiedLogLevel": {
          "type": "string"
        }
      }
    },
    "CatalogAndSchema": {
      "type": "object",
      "properties": {
        "catalogName": {
          "type": "string"
        },
        "schemaName": {
          "type": "string"
        }
      }
    },
    "CheckSum": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContextExpression": {
      "type": "object",
      "properties": {
        "contexts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "DatabaseConnection": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "closed": {
          "type": "boolean"
        },
        "autoCommit": {
          "type": "boolean"
        },
        "catalog": {
          "type": "string"
        },
        "databaseProductName": {
          "type": "string"
        },
        "databaseProductVersion": {
          "type": "string"
        },
        "databaseMajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "databaseMinorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "connectionUserName": {
          "type": "string"
        }
      }
    },
    "DatabaseFunction": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "Labels": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "MigrationDataSource": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/Database"
        },
        "connection": {
          "$ref": "#/definitions/Connection"
        },
        "logWriter": {
          "$ref": "#/definitions/PrintWriter"
        },
        "loginTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "parentLogger": {
          "$ref": "#/definitions/Logger"
        }
      }
    },
    "RanChangeSet": {
      "type": "object",
      "properties": {
        "changeLog": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "lastCheckSum": {
          "$ref": "#/definitions/CheckSum"
        },
        "dateExecuted": {
          "type": "string",
          "format": "date-time"
        },
        "tag": {
          "type": "string"
        },
        "execType": {
          "type": "string",
          "enum": [
            "EXECUTED",
            "FAILED",
            "SKIPPED",
            "RERAN",
            "MARK_RAN"
          ]
        },
        "description": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "orderExecuted": {
          "type": "integer",
          "format": "int32"
        },
        "contextExpression": {
          "$ref": "#/definitions/ContextExpression"
        },
        "labels": {
          "$ref": "#/definitions/Labels"
        },
        "deploymentId": {
          "type": "string"
        }
      }
    },
    "MigrationException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "MigrationNamedCacheFactory": {
      "type": "object"
    },
    "MigrationServicesForResolution": {
      "type": "object",
      "properties": {
        "networkParametersService": {
          "$ref": "#/definitions/NetworkParametersService"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        },
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "attachments": {
          "$ref": "#/definitions/AttachmentStorage"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProvider"
        }
      }
    },
    "VaultMigrationSchema": {
      "type": "object"
    },
    "VaultMigrationSchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "VaultStateIterator": {
      "type": "object",
      "properties": {
        "numStates": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VaultStateMigration": {
      "type": "object",
      "properties": {
        "identityService": {
          "$ref": "#/definitions/PersistentIdentityService"
        },
        "servicesForResolution": {
          "$ref": "#/definitions/MigrationServicesForResolution"
        },
        "cordaDB": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "confirmationMessage": {
          "type": "string"
        }
      }
    },
    "VaultStateMigrationException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "AMQPServerSerializationScheme": {
      "type": "object",
      "properties": {
        "publicKeySerializer": {
          "$ref": "#/definitions/CustomSerializerObject"
        },
        "sff": {
          "$ref": "#/definitions/SerializerFactoryFactory"
        }
      }
    },
    "CustomSerializer": {
      "type": "object",
      "properties": {
        "additionalSerializers": {
          "$ref": "#/definitions/IterableCustomSerializerObject"
        },
        "schemaForDocumentation": {
          "$ref": "#/definitions/Schema"
        },
        "revealSubclassesInSchema": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "typeDescriptor": {
          "$ref": "#/definitions/Symbol"
        }
      }
    },
    "CustomSerializerObject": {
      "type": "object",
      "properties": {
        "additionalSerializers": {
          "$ref": "#/definitions/IterableCustomSerializerObject"
        },
        "schemaForDocumentation": {
          "$ref": "#/definitions/Schema"
        },
        "revealSubclassesInSchema": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "typeDescriptor": {
          "$ref": "#/definitions/Symbol"
        }
      }
    },
    "Descriptor": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/Symbol"
        },
        "code": {
          "$ref": "#/definitions/UnsignedLong"
        },
        "descriptor": {
          "type": "object"
        },
        "described": {
          "type": "object"
        }
      }
    },
    "IterableCustomSerializerObject": {
      "type": "object"
    },
    "Schema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "SerializerFactoryFactory": {
      "type": "object"
    },
    "Symbol": {
      "type": "object"
    },
    "TypeNotation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "descriptor": {
          "$ref": "#/definitions/Descriptor"
        },
        "label": {
          "type": "string"
        },
        "provides": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "described": {
          "type": "object"
        }
      }
    },
    "UnsignedLong": {
      "type": "object"
    },
    "RpcServerCordaFutureSerializer": {
      "type": "object",
      "properties": {
        "additionalSerializers": {
          "$ref": "#/definitions/IterableCustomSerializerObject"
        },
        "typeDescriptor": {
          "$ref": "#/definitions/Symbol"
        },
        "schemaForDocumentation": {
          "$ref": "#/definitions/Schema"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "revealSubclassesInSchema": {
          "type": "boolean"
        }
      }
    },
    "FutureProxy": {
      "type": "object",
      "properties": {
        "observable": {
          "$ref": "#/definitions/ObservableObject"
        }
      }
    },
    "RpcServerObservableSerializer": {
      "type": "object",
      "properties": {
        "additionalSerializers": {
          "$ref": "#/definitions/IterableCustomSerializerObject"
        },
        "typeDescriptor": {
          "$ref": "#/definitions/Symbol"
        },
        "schemaForDocumentation": {
          "$ref": "#/definitions/Schema"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "revealSubclassesInSchema": {
          "type": "boolean"
        }
      }
    },
    "RpcObservableContextKey": {
      "type": "object"
    },
    "CertPathSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "ClassSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "ContractUpgradeFilteredTransactionSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "ContractUpgradeWireTransactionSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "CordaClassResolver": {
      "type": "object",
      "properties": {
        "whitelist": {
          "$ref": "#/definitions/ClassWhitelist"
        }
      }
    },
    "CordaClosureBlacklistSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "CordaClosureSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "CachedFieldNameStrategy": {
      "type": "object"
    },
    "ClassResolver": {
      "type": "object"
    },
    "CordaKryo": {
      "type": "object",
      "properties": {
        "classResolver": {
          "$ref": "#/definitions/ClassResolver"
        },
        "classLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "registrationRequired": {
          "type": "boolean"
        },
        "warnUnregisteredClasses": {
          "type": "boolean"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "context": {
          "$ref": "#/definitions/ObjectMap"
        },
        "graphContext": {
          "$ref": "#/definitions/ObjectMap"
        },
        "referenceResolver": {
          "$ref": "#/definitions/ReferenceResolver"
        },
        "references": {
          "type": "boolean"
        },
        "genericsResolver": {
          "$ref": "#/definitions/GenericsResolver"
        },
        "fieldSerializerConfig": {
          "$ref": "#/definitions/FieldSerializerConfig"
        },
        "taggedFieldSerializerConfig": {
          "$ref": "#/definitions/TaggedFieldSerializerConfig"
        },
        "streamFactory": {
          "$ref": "#/definitions/StreamFactory"
        },
        "nextRegistrationId": {
          "type": "integer",
          "format": "int32"
        },
        "instantiatorStrategy": {
          "$ref": "#/definitions/InstantiatorStrategy"
        },
        "originalToCopyMap": {
          "$ref": "#/definitions/IdentityMap"
        },
        "asmEnabled": {
          "type": "boolean"
        }
      }
    },
    "FieldSerializerConfig": {
      "type": "object",
      "properties": {
        "fieldsCanBeNull": {
          "type": "boolean"
        },
        "setFieldsAsAccessible": {
          "type": "boolean"
        },
        "ignoreSyntheticFields": {
          "type": "boolean"
        },
        "fixedFieldTypes": {
          "type": "boolean"
        },
        "useAsm": {
          "type": "boolean"
        },
        "copyTransient": {
          "type": "boolean"
        },
        "serializeTransient": {
          "type": "boolean"
        },
        "optimizedGenerics": {
          "type": "boolean"
        },
        "cachedFieldNameStrategy": {
          "$ref": "#/definitions/CachedFieldNameStrategy"
        }
      }
    },
    "GenericsResolver": {
      "type": "object"
    },
    "IdentityMap": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Input": {
      "type": "object",
      "properties": {
        "buffer": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        }
      }
    },
    "InputStream": {
      "type": "object"
    },
    "InstantiatorStrategy": {
      "type": "object"
    },
    "ObjectMap": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Output": {
      "type": "object",
      "properties": {
        "buffer": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "outputStream": {
          "$ref": "#/definitions/OutputStream"
        }
      }
    },
    "OutputStream": {
      "type": "object"
    },
    "ReferenceResolver": {
      "type": "object"
    },
    "StreamFactory": {
      "type": "object",
      "properties": {
        "input": {
          "$ref": "#/definitions/Input"
        },
        "output": {
          "$ref": "#/definitions/Output"
        }
      }
    },
    "TaggedFieldSerializerConfig": {
      "type": "object",
      "properties": {
        "fieldsCanBeNull": {
          "type": "boolean"
        },
        "setFieldsAsAccessible": {
          "type": "boolean"
        },
        "ignoreSyntheticFields": {
          "type": "boolean"
        },
        "fixedFieldTypes": {
          "type": "boolean"
        },
        "useAsm": {
          "type": "boolean"
        },
        "copyTransient": {
          "type": "boolean"
        },
        "serializeTransient": {
          "type": "boolean"
        },
        "optimizedGenerics": {
          "type": "boolean"
        },
        "cachedFieldNameStrategy": {
          "$ref": "#/definitions/CachedFieldNameStrategy"
        },
        "ignoreUnknownTags": {
          "type": "boolean"
        }
      }
    },
    "DefaultKryoCustomizer": {
      "type": "object"
    },
    "GetterObject": {
      "type": "object",
      "properties": {
        "external": {
          "type": "boolean"
        },
        "infix": {
          "type": "boolean"
        },
        "inline": {
          "type": "boolean"
        },
        "operator": {
          "type": "boolean"
        },
        "suspend": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "GetterObjectObject": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/KPropertyObject"
        },
        "external": {
          "type": "boolean"
        },
        "infix": {
          "type": "boolean"
        },
        "inline": {
          "type": "boolean"
        },
        "operator": {
          "type": "boolean"
        },
        "suspend": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "ImmutableClassSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        },
        "props": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KProperty1ObjectObject"
          }
        },
        "propsByName": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/KProperty1ObjectObject"
          }
        },
        "constructor": {
          "$ref": "#/definitions/KFunctionObject"
        },
        "klass": {
          "$ref": "#/definitions/KClassObject"
        }
      }
    },
    "KCallable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "suspend": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KCallableObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "suspend": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KClass": {
      "type": "object",
      "properties": {
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "simpleName": {
          "type": "string"
        },
        "constructors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KFunctionObject"
          }
        },
        "abstract": {
          "type": "boolean"
        },
        "final": {
          "type": "boolean"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KCallableObject"
          }
        },
        "sealed": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "qualifiedName": {
          "type": "string"
        },
        "inner": {
          "type": "boolean"
        },
        "nestedClasses": {
          "type": "array"
        },
        "objectInstance": {
          "type": "object"
        },
        "supertypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KType"
          }
        },
        "data": {
          "type": "boolean"
        },
        "sealedSubclasses": {
          "type": "array"
        },
        "companion": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KClassObject": {
      "type": "object",
      "properties": {
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "simpleName": {
          "type": "string"
        },
        "constructors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KFunctionObject"
          }
        },
        "abstract": {
          "type": "boolean"
        },
        "final": {
          "type": "boolean"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KCallableObject"
          }
        },
        "sealed": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "qualifiedName": {
          "type": "string"
        },
        "inner": {
          "type": "boolean"
        },
        "nestedClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KClassObject"
          }
        },
        "objectInstance": {
          "type": "object"
        },
        "supertypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KType"
          }
        },
        "data": {
          "type": "boolean"
        },
        "sealedSubclasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KClassObject"
          }
        },
        "companion": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KClassifier": {
      "type": "object"
    },
    "KFunction": {
      "type": "object",
      "properties": {
        "external": {
          "type": "boolean"
        },
        "infix": {
          "type": "boolean"
        },
        "inline": {
          "type": "boolean"
        },
        "operator": {
          "type": "boolean"
        },
        "suspend": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KFunctionObject": {
      "type": "object",
      "properties": {
        "external": {
          "type": "boolean"
        },
        "infix": {
          "type": "boolean"
        },
        "inline": {
          "type": "boolean"
        },
        "operator": {
          "type": "boolean"
        },
        "suspend": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/KType"
        },
        "kind": {
          "type": "string",
          "enum": [
            "INSTANCE",
            "EXTENSION_RECEIVER",
            "VALUE"
          ]
        },
        "optional": {
          "type": "boolean"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "vararg": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KProperty": {
      "type": "object",
      "properties": {
        "const": {
          "type": "boolean"
        },
        "getter": {
          "$ref": "#/definitions/GetterObject"
        },
        "lateinit": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "suspend": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KProperty1": {
      "type": "object",
      "properties": {
        "getter": {
          "$ref": "#/definitions/GetterObjectObject"
        },
        "const": {
          "type": "boolean"
        },
        "lateinit": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "suspend": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KProperty1ObjectObject": {
      "type": "object",
      "properties": {
        "getter": {
          "$ref": "#/definitions/GetterObjectObject"
        },
        "const": {
          "type": "boolean"
        },
        "lateinit": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "suspend": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KPropertyObject": {
      "type": "object",
      "properties": {
        "const": {
          "type": "boolean"
        },
        "getter": {
          "$ref": "#/definitions/GetterObject"
        },
        "lateinit": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeParameter"
          }
        },
        "returnType": {
          "$ref": "#/definitions/KType"
        },
        "abstract": {
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KParameter"
          }
        },
        "final": {
          "type": "boolean"
        },
        "open": {
          "type": "boolean"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PROTECTED",
            "INTERNAL",
            "PRIVATE"
          ]
        },
        "suspend": {
          "type": "boolean"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KType": {
      "type": "object",
      "properties": {
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KTypeProjection"
          }
        },
        "markedNullable": {
          "type": "boolean"
        },
        "classifier": {
          "$ref": "#/definitions/KClassifier"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Annotation"
          }
        }
      }
    },
    "KTypeParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "upperBounds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KType"
          }
        },
        "variance": {
          "type": "string",
          "enum": [
            "INVARIANT",
            "IN",
            "OUT"
          ]
        },
        "reified": {
          "type": "boolean"
        }
      }
    },
    "KTypeProjection": {
      "type": "object",
      "properties": {
        "variance": {
          "type": "string",
          "enum": [
            "INVARIANT",
            "IN",
            "OUT"
          ]
        },
        "type": {
          "$ref": "#/definitions/KType"
        }
      }
    },
    "InputStreamSerializer": {
      "type": "object",
      "properties": {
        "invokeContext": {
          "$ref": "#/definitions/InvocationContextObject"
        },
        "delegatee": {
          "$ref": "#/definitions/JsonSerializerObject"
        },
        "unwrappingSerializer": {
          "type": "boolean"
        }
      }
    },
    "KryoCheckpointSerializer": {
      "type": "object"
    },
    "KryoCheckpointSerializer$WhenMappings": {
      "type": "object"
    },
    "KryoStreams": {
      "type": "object"
    },
    "LazyMappedListSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "LoggerSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "LoggingWhitelist": {
      "type": "object",
      "properties": {
        "delegate": {
          "$ref": "#/definitions/ClassWhitelist"
        },
        "global": {
          "type": "boolean"
        }
      }
    },
    "NoReferencesSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "NotaryChangeWireTransactionSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "PrivateKeySerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "PublicKeySerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "SerializeAsTokenSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "SerializedBytesSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "SignedTransactionSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "WireTransactionSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "X509CertificateSerializer": {
      "type": "object",
      "properties": {
        "acceptsNull": {
          "type": "boolean"
        },
        "immutable": {
          "type": "boolean"
        }
      }
    },
    "Permissions": {
      "type": "object"
    },
    "FlowAppAuditEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "description": {
          "type": "string"
        },
        "contextData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "auditEventType": {
          "type": "string"
        }
      }
    },
    "FlowErrorAuditEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "description": {
          "type": "string"
        },
        "contextData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "error": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "FlowPermissionAuditEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "description": {
          "type": "string"
        },
        "contextData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "permissionRequested": {
          "type": "string"
        },
        "permissionGranted": {
          "type": "boolean"
        }
      }
    },
    "FlowProgressAuditEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "description": {
          "type": "string"
        },
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "flowProgress": {
          "$ref": "#/definitions/Step"
        },
        "contextData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FlowStartEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "description": {
          "type": "string"
        },
        "contextData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "SystemAuditEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "description": {
          "type": "string"
        },
        "contextData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ConfigHelper": {
      "type": "object"
    },
    "Defaults": {
      "type": "object",
      "properties": {
        "passwordEncryption": {
          "type": "string",
          "enum": [
            "NONE",
            "SHIRO_1_CRYPT"
          ]
        }
      }
    },
    "NodeConfigurationImpl": {
      "type": "object",
      "properties": {
        "certificatesDirectory": {
          "$ref": "#/definitions/Path"
        },
        "signingCertificateStore": {
          "$ref": "#/definitions/FileBasedCertificateStoreSupplier"
        },
        "p2pSslOptions": {
          "$ref": "#/definitions/MutualSslConfiguration"
        },
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        },
        "myLegalName": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        },
        "jmxMonitoringHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "emailAddress": {
          "type": "string"
        },
        "crlCheckSoftFail": {
          "type": "boolean"
        },
        "dataSourceProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "compatibilityZoneURL": {
          "type": "string",
          "format": "url"
        },
        "networkServices": {
          "$ref": "#/definitions/NetworkServicesConfig"
        },
        "tlsCertCrlDistPoint": {
          "type": "string",
          "format": "url"
        },
        "tlsCertCrlIssuer": {
          "$ref": "#/definitions/X500Principal"
        },
        "rpcUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "security": {
          "$ref": "#/definitions/SecurityConfiguration"
        },
        "verifierType": {
          "type": "string",
          "enum": [
            "InMemory"
          ]
        },
        "flowTimeout": {
          "$ref": "#/definitions/FlowTimeoutConfiguration"
        },
        "p2pAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "additionalP2PAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkHostAndPort"
          }
        },
        "messagingServerAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "messagingServerExternal": {
          "type": "boolean"
        },
        "notary": {
          "$ref": "#/definitions/NotaryConfig"
        },
        "certificateChainCheckPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertChainPolicyConfig"
          }
        },
        "devMode": {
          "type": "boolean"
        },
        "noLocalShell": {
          "type": "boolean"
        },
        "devModeOptions": {
          "$ref": "#/definitions/DevModeOptions"
        },
        "useTestClock": {
          "type": "boolean"
        },
        "lazyBridgeStart": {
          "type": "boolean"
        },
        "detectPublicIp": {
          "type": "boolean"
        },
        "additionalNodeInfoPollingFrequencyMsec": {
          "type": "integer",
          "format": "int64"
        },
        "sshd": {
          "$ref": "#/definitions/SSHDConfiguration"
        },
        "database": {
          "$ref": "#/definitions/DatabaseConfig"
        },
        "attachmentCacheBound": {
          "type": "integer",
          "format": "int64"
        },
        "extraNetworkMapKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "flowMonitorPeriodMillis": {
          "$ref": "#/definitions/Duration"
        },
        "flowMonitorSuspensionLoggingThresholdMillis": {
          "$ref": "#/definitions/Duration"
        },
        "cordappDirectories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Path"
          }
        },
        "jmxReporterType": {
          "type": "string",
          "enum": [
            "JOLOKIA",
            "NEW_RELIC"
          ]
        },
        "flowOverrides": {
          "$ref": "#/definitions/FlowOverrideConfig"
        },
        "cordappSignerKeyFingerprintBlacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkParameterAcceptanceSettings": {
          "$ref": "#/definitions/NetworkParameterAcceptanceSettings"
        },
        "transactionCacheSizeBytes": {
          "type": "integer",
          "format": "int64"
        },
        "drainingModePollPeriod": {
          "$ref": "#/definitions/Duration"
        },
        "rpcOptions": {
          "$ref": "#/definitions/NodeRpcOptions"
        },
        "effectiveH2Settings": {
          "$ref": "#/definitions/NodeH2Settings"
        },
        "attachmentContentCacheSizeBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NodeRpcSettings": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "adminAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "standAloneBroker": {
          "type": "boolean"
        },
        "useSsl": {
          "type": "boolean"
        },
        "ssl": {
          "$ref": "#/definitions/BrokerRpcSslOptions"
        }
      }
    },
    "SecurityConfiguration$AuthService$Companion$WhenMappings": {
      "type": "object"
    },
    "SecurityConfiguration$AuthService$DataSource$WhenMappings": {
      "type": "object"
    },
    "BFTSmartConfigSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Definition": {
      "type": "object",
      "properties": {
        "typeName": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/Schema"
        },
        "mandatory": {
          "type": "boolean"
        },
        "sensitive": {
          "type": "boolean"
        }
      }
    },
    "DefinitionObject": {
      "type": "object",
      "properties": {
        "typeName": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/Schema"
        },
        "mandatory": {
          "type": "boolean"
        },
        "sensitive": {
          "type": "boolean"
        }
      }
    },
    "CertChainPolicyConfigSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DatabaseConfigSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DevModeOptionsSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FlowOverridesConfigSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SingleSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FlowTimeoutConfigurationSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NetworkServicesConfigSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NodeH2SettingsSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NodeRpcSettingsSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "BrokerRpcSslOptionsSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NotaryConfigSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RaftConfigSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SSHDConfigurationSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SecurityConfigurationSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "V1NodeConfigurationSpec": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DefinitionObject"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NodeSchedulerService": {
      "type": "object"
    },
    "PersistentScheduledState": {
      "type": "object",
      "properties": {
        "output": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "scheduledAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PersistentScheduledFlowRepository": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        }
      }
    },
    "ScheduledActivityObserver": {
      "type": "object"
    },
    "InMemoryIdentityService": {
      "type": "object",
      "properties": {
        "caCertStore": {
          "$ref": "#/definitions/CertStore"
        },
        "trustAnchor": {
          "$ref": "#/definitions/TrustAnchor"
        },
        "trustRoot": {
          "$ref": "#/definitions/X509Certificate"
        },
        "allIdentities": {
          "$ref": "#/definitions/IterablePartyAndCertificate"
        }
      }
    },
    "PersistentIdentity": {
      "type": "object",
      "properties": {
        "publicKeyHash": {
          "type": "string"
        },
        "identity": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "PersistentIdentityNames": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "publicKeyHash": {
          "type": "string"
        }
      }
    },
    "BasicHSMKeyManagementService": {
      "type": "object",
      "properties": {
        "identityService": {
          "$ref": "#/definitions/PersistentIdentityService"
        },
        "keys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "PersistentKey": {
      "type": "object",
      "properties": {
        "publicKeyHash": {
          "type": "string"
        },
        "publicKey": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "privateKey": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "E2ETestKeyManagementService": {
      "type": "object",
      "properties": {
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "keys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        },
        "keyPairs": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/KeyPair"
          }
        }
      }
    },
    "KeyPair": {
      "type": "object",
      "properties": {
        "public": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        },
        "private": {
          "$ref": "#/definitions/PrivateKey"
        }
      }
    },
    "PrivateKey": {
      "type": "object",
      "properties": {
        "encoded": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "algorithm": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "destroyed": {
          "type": "boolean"
        }
      }
    },
    "PersistentKeyManagementService": {
      "type": "object",
      "properties": {
        "identityService": {
          "$ref": "#/definitions/PersistentIdentityService"
        },
        "keys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        }
      }
    },
    "PublicKeyHashToExternalId": {
      "type": "object",
      "properties": {
        "key": {
          "type": "integer",
          "format": "int64"
        },
        "externalId": {
          "type": "string",
          "format": "uuid"
        },
        "publicKeyHash": {
          "type": "string"
        }
      }
    },
    "BCCryptoService": {
      "type": "object",
      "properties": {
        "certificateStore$node": {
          "$ref": "#/definitions/CertificateStore"
        }
      }
    },
    "ActiveMQServerControl": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "addressMemoryUsage": {
          "type": "integer",
          "format": "int64"
        },
        "uptime": {
          "type": "string"
        },
        "persistenceEnabled": {
          "type": "boolean"
        },
        "maxDiskUsage": {
          "type": "integer",
          "format": "int32"
        },
        "globalMaxSize": {
          "type": "integer",
          "format": "int64"
        },
        "persistDeliveryCountBeforeDelivery": {
          "type": "boolean"
        },
        "scheduledThreadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "threadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "securityInvalidationInterval": {
          "type": "integer",
          "format": "int64"
        },
        "connectionTTLOverride": {
          "type": "integer",
          "format": "int64"
        },
        "asyncConnectionExecutionEnabled": {
          "type": "boolean"
        },
        "incomingInterceptorClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outgoingInterceptorClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idcacheSize": {
          "type": "integer",
          "format": "int32"
        },
        "persistIDCache": {
          "type": "boolean"
        },
        "bindingsDirectory": {
          "type": "string"
        },
        "journalDirectory": {
          "type": "string"
        },
        "journalType": {
          "type": "string"
        },
        "pagingDirectory": {
          "type": "string"
        },
        "journalSyncTransactional": {
          "type": "boolean"
        },
        "journalSyncNonTransactional": {
          "type": "boolean"
        },
        "journalFileSize": {
          "type": "integer",
          "format": "int32"
        },
        "journalMinFiles": {
          "type": "integer",
          "format": "int32"
        },
        "createBindingsDir": {
          "type": "boolean"
        },
        "createJournalDir": {
          "type": "boolean"
        },
        "wildcardRoutingEnabled": {
          "type": "boolean"
        },
        "transactionTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "transactionTimeoutScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "messageExpiryScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "messageExpiryThreadPriority": {
          "type": "integer",
          "format": "int64"
        },
        "securityEnabled": {
          "type": "boolean"
        },
        "largeMessagesDirectory": {
          "type": "string"
        },
        "messageCounterEnabled": {
          "type": "boolean"
        },
        "messageCounterSamplePeriod": {
          "type": "integer",
          "format": "int64"
        },
        "managementAddress": {
          "type": "string"
        },
        "managementNotificationAddress": {
          "type": "string"
        },
        "failoverOnServerShutdown": {
          "type": "boolean"
        },
        "journalCompactMinFiles": {
          "type": "integer",
          "format": "int32"
        },
        "journalCompactPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "diskScanPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "sharedStore": {
          "type": "boolean"
        },
        "backup": {
          "type": "boolean"
        },
        "nodeID": {
          "type": "string"
        },
        "journalMaxIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferSize": {
          "type": "integer",
          "format": "int32"
        },
        "connectorsAsJSON": {
          "type": "string"
        },
        "addressNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queueNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clustered": {
          "type": "boolean"
        },
        "started": {
          "type": "boolean"
        },
        "journalBufferTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "messageCounterMaxDayCount": {
          "type": "integer",
          "format": "int32"
        },
        "connectors": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "addressMemoryUsagePercentage": {
          "type": "integer",
          "format": "int32"
        },
        "divertNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bridgeNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectorServices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectionCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalConnectionCount": {
          "type": "integer",
          "format": "int64"
        },
        "totalMessageCount": {
          "type": "integer",
          "format": "int64"
        },
        "totalMessagesAdded": {
          "type": "integer",
          "format": "int64"
        },
        "totalMessagesAcknowledged": {
          "type": "integer",
          "format": "int64"
        },
        "totalConsumerCount": {
          "type": "integer",
          "format": "int64"
        },
        "uptimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "replicaSync": {
          "type": "boolean"
        }
      }
    },
    "ArtemisMessagingServer": {
      "type": "object",
      "properties": {
        "addresses": {
          "$ref": "#/definitions/BrokerAddresses"
        },
        "serverControl": {
          "$ref": "#/definitions/ActiveMQServerControl"
        },
        "started": {
          "type": "boolean"
        }
      }
    },
    "ActiveMQPrincipal": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "AddressToArtemisQueueResolver": {
      "type": "object"
    },
    "ClientProducer": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/SimpleString"
        },
        "closed": {
          "type": "boolean"
        },
        "blockOnNonDurableSend": {
          "type": "boolean"
        },
        "maxRate": {
          "type": "integer",
          "format": "int32"
        },
        "blockOnDurableSend": {
          "type": "boolean"
        }
      }
    },
    "ClientProtocolManagerFactory": {
      "type": "object",
      "properties": {
        "locator": {
          "$ref": "#/definitions/ServerLocator"
        }
      }
    },
    "ClientSession": {
      "type": "object",
      "properties": {
        "xaresource": {
          "$ref": "#/definitions/XAResource"
        },
        "rollbackOnly": {
          "type": "boolean"
        },
        "xa": {
          "type": "boolean"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "closed": {
          "type": "boolean"
        },
        "sessionFactory": {
          "$ref": "#/definitions/ClientSessionFactory"
        },
        "autoCommitSends": {
          "type": "boolean"
        },
        "autoCommitAcks": {
          "type": "boolean"
        },
        "blockOnAcknowledge": {
          "type": "boolean"
        },
        "transactionTimeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClientSessionFactory": {
      "type": "object",
      "properties": {
        "closed": {
          "type": "boolean"
        },
        "connection": {
          "$ref": "#/definitions/RemotingConnection"
        },
        "connectorConfiguration": {
          "$ref": "#/definitions/TransportConfiguration"
        },
        "serverLocator": {
          "$ref": "#/definitions/ServerLocator"
        }
      }
    },
    "FailureListener": {
      "type": "object"
    },
    "MessagingExecutor": {
      "type": "object",
      "properties": {
        "session": {
          "$ref": "#/definitions/ClientSession"
        },
        "producer": {
          "$ref": "#/definitions/ClientProducer"
        },
        "versionInfo": {
          "$ref": "#/definitions/VersionInfo"
        },
        "resolver": {
          "$ref": "#/definitions/AddressToArtemisQueueResolver"
        },
        "ourSenderUUID": {
          "type": "string"
        }
      }
    },
    "PairTransportConfigurationTransportConfiguration": {
      "type": "object",
      "properties": {
        "a": {
          "$ref": "#/definitions/TransportConfiguration"
        },
        "b": {
          "$ref": "#/definitions/TransportConfiguration"
        }
      }
    },
    "RemotingConnection": {
      "type": "object",
      "properties": {
        "destroyed": {
          "type": "boolean"
        },
        "id": {
          "type": "object"
        },
        "creationTime": {
          "type": "integer",
          "format": "int64"
        },
        "remoteAddress": {
          "type": "string"
        },
        "subject": {
          "$ref": "#/definitions/Subject"
        },
        "client": {
          "type": "boolean"
        },
        "failureListeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureListener"
          }
        },
        "transportConnection": {
          "$ref": "#/definitions/Connection"
        },
        "supportReconnect": {
          "type": "boolean"
        },
        "supportsFlowControl": {
          "type": "boolean"
        },
        "protocolName": {
          "type": "string"
        },
        "clientID": {
          "type": "string"
        },
        "transportLocalAddress": {
          "type": "string"
        }
      }
    },
    "ServerLocator": {
      "type": "object",
      "properties": {
        "closed": {
          "type": "boolean"
        },
        "reconnectAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "scheduledThreadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "threadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "connectionTTL": {
          "type": "integer",
          "format": "int64"
        },
        "clientFailureCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "minLargeMessageSize": {
          "type": "integer",
          "format": "int32"
        },
        "useGlobalPools": {
          "type": "boolean"
        },
        "groupID": {
          "type": "string"
        },
        "callFailoverTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "discoveryGroupConfiguration": {
          "$ref": "#/definitions/DiscoveryGroupConfiguration"
        },
        "blockOnAcknowledge": {
          "type": "boolean"
        },
        "cacheLargeMessagesClient": {
          "type": "boolean"
        },
        "consumerWindowSize": {
          "type": "integer",
          "format": "int32"
        },
        "consumerMaxRate": {
          "type": "integer",
          "format": "int32"
        },
        "producerMaxRate": {
          "type": "integer",
          "format": "int32"
        },
        "blockOnDurableSend": {
          "type": "boolean"
        },
        "blockOnNonDurableSend": {
          "type": "boolean"
        },
        "autoGroup": {
          "type": "boolean"
        },
        "preAcknowledge": {
          "type": "boolean"
        },
        "ackBatchSize": {
          "type": "integer",
          "format": "int32"
        },
        "staticTransportConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportConfiguration"
          }
        },
        "failoverOnInitialConnection": {
          "type": "boolean"
        },
        "connectionLoadBalancingPolicyClassName": {
          "type": "string"
        },
        "initialMessagePacketSize": {
          "type": "integer",
          "format": "int32"
        },
        "useTopologyForLoadBalancing": {
          "type": "boolean"
        },
        "topology": {
          "$ref": "#/definitions/Topology"
        },
        "compressLargeMessage": {
          "type": "boolean"
        },
        "protocolManagerFactory": {
          "$ref": "#/definitions/ClientProtocolManagerFactory"
        },
        "incomingInterceptorList": {
          "type": "string"
        },
        "outgoingInterceptorList": {
          "type": "string"
        },
        "ha": {
          "type": "boolean"
        },
        "maxRetryInterval": {
          "type": "integer",
          "format": "int64"
        },
        "retryInterval": {
          "type": "integer",
          "format": "int64"
        },
        "retryIntervalMultiplier": {
          "type": "number",
          "format": "double"
        },
        "initialConnectAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "confirmationWindowSize": {
          "type": "integer",
          "format": "int32"
        },
        "producerWindowSize": {
          "type": "integer",
          "format": "int32"
        },
        "callTimeout": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Subject": {
      "type": "object",
      "properties": {
        "principals": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Principal"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "publicCredentials": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        },
        "privateCredentials": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Topology": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopologyMemberImpl"
          }
        }
      }
    },
    "TopologyMemberImpl": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/PairTransportConfigurationTransportConfiguration"
        },
        "backupGroupName": {
          "type": "string"
        },
        "scaleDownGroupName": {
          "type": "string"
        },
        "uniqueEventID": {
          "type": "integer",
          "format": "int64"
        },
        "nodeId": {
          "type": "string"
        },
        "live": {
          "$ref": "#/definitions/TransportConfiguration"
        },
        "backup": {
          "$ref": "#/definitions/TransportConfiguration"
        }
      }
    },
    "XAResource": {
      "type": "object",
      "properties": {
        "transactionTimeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AddressedMessage": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message"
        },
        "target": {
          "$ref": "#/definitions/MessageRecipients"
        },
        "sequenceKey": {
          "type": "object"
        }
      }
    },
    "DeduplicationId": {
      "type": "object",
      "properties": {
        "toString": {
          "type": "string"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ByteSequence"
        },
        "topic": {
          "type": "string"
        },
        "uniqueMessageId": {
          "$ref": "#/definitions/DeduplicationId"
        },
        "senderUUID": {
          "type": "string"
        },
        "additionalHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "debugTimestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MessageRecipients": {
      "type": "object"
    },
    "P2PMessageDeduplicator": {
      "type": "object"
    },
    "ProcessedMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "insertionTime": {
          "type": "integer",
          "format": "int64"
        },
        "hash": {
          "type": "string"
        },
        "seqNo": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "P2PMessagingClient": {
      "type": "object",
      "properties": {
        "ourSenderUUID": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/NodeConfiguration"
        },
        "serverAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "messagingExecutor$node": {
          "$ref": "#/definitions/MessagingExecutor"
        },
        "myAddress": {
          "$ref": "#/definitions/SingleMessageRecipient"
        }
      }
    },
    "HandlerRegistration": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string"
        },
        "callback": {
          "type": "object"
        }
      }
    },
    "NetworkMap": {
      "type": "object",
      "properties": {
        "nodeInfoHashes": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        },
        "networkParameterHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "parametersUpdate": {
          "$ref": "#/definitions/ParametersUpdate"
        }
      }
    },
    "NetworkMapResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/NetworkMap"
        },
        "cacheMaxAge": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "ParametersUpdate": {
      "type": "object",
      "properties": {
        "newParametersHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "description": {
          "type": "string"
        },
        "updateDeadline": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Add": {
      "type": "object",
      "properties": {
        "logic": {
          "$ref": "#/definitions/FlowLogicObject"
        }
      }
    },
    "Remove": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "NodeInfoWatcher": {
      "type": "object",
      "properties": {
        "processedNodeInfoHashes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Secure Hash"
          }
        }
      }
    },
    "AbstractPartyDescriptor": {
      "type": "object",
      "properties": {
        "mutabilityPlan": {
          "$ref": "#/definitions/MutabilityPlanAbstractParty"
        },
        "comparator": {
          "$ref": "#/definitions/ComparatorAbstractParty"
        }
      }
    },
    "ComparatorAbstractParty": {
      "type": "object"
    },
    "MutabilityPlan": {
      "type": "object",
      "properties": {
        "mutable": {
          "type": "boolean"
        }
      }
    },
    "MutabilityPlanAbstractParty": {
      "type": "object",
      "properties": {
        "mutable": {
          "type": "boolean"
        }
      }
    },
    "AbstractPartyToX500NameAsStringConverter": {
      "type": "object"
    },
    "DBCheckpoint": {
      "type": "object",
      "properties": {
        "checkpointId": {
          "type": "string"
        },
        "checkpoint": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "DBTransactionStorage": {
      "type": "object",
      "properties": {
        "updates": {
          "$ref": "#/definitions/ObservableSignedTransaction"
        },
        "transactions": {
          "$ref": "#/definitions/IterableSignedTransaction"
        }
      }
    },
    "IterableSignedTransaction": {
      "type": "object"
    },
    "DBTransaction": {
      "type": "object",
      "properties": {
        "txId": {
          "type": "string"
        },
        "stateMachineRunId": {
          "type": "string"
        },
        "transaction": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "DBAttachment": {
      "type": "object",
      "properties": {
        "attId": {
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "insertionDate": {
          "type": "integer",
          "format": "int64"
        },
        "uploader": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "contractClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signers": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE",
            "description": "Base 58 Encoded Public Key"
          }
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HashCheckingStream": {
      "type": "object",
      "properties": {
        "expected": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "expectedSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HashMismatchException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "expected": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "actual": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "DBNodeProperty": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PublicKeyToTextConverter": {
      "type": "object"
    },
    "ArtemisRpcBroker": {
      "type": "object",
      "properties": {
        "addresses": {
          "$ref": "#/definitions/BrokerAddresses"
        },
        "serverControl": {
          "$ref": "#/definitions/ActiveMQServerControl"
        },
        "started": {
          "type": "boolean"
        }
      }
    },
    "CurrentRpcContext": {
      "type": "object"
    },
    "InternalRPCMessagingClient": {
      "type": "object",
      "properties": {
        "sslConfig": {
          "$ref": "#/definitions/MutualSslConfiguration"
        },
        "serverAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "maxMessageSize": {
          "type": "integer",
          "format": "int32"
        },
        "nodeName": {
          "type": "string",
          "description": "CordaX500Name encoded Party"
        },
        "rpcServerConfiguration": {
          "$ref": "#/definitions/RPCServerConfiguration"
        }
      }
    },
    "RPCServerConfiguration": {
      "type": "object",
      "properties": {
        "rpcThreadPoolSize": {
          "type": "integer",
          "format": "int32"
        },
        "reapInterval": {
          "$ref": "#/definitions/Duration"
        },
        "deduplicationCacheExpiry": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "ObservableSubscription": {
      "type": "object",
      "properties": {
        "subscription": {
          "$ref": "#/definitions/Subscription"
        }
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "unsubscribed": {
          "type": "boolean"
        }
      }
    },
    "RPCServer": {
      "type": "object"
    },
    "Buffer": {
      "type": "object",
      "properties": {
        "container": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageAndContext"
          }
        }
      }
    },
    "CacheInvocationIdObservableSubscription": {
      "type": "object"
    },
    "MessageAndContext": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/RpcReply"
        },
        "context": {
          "$ref": "#/definitions/ObservableContext"
        }
      }
    },
    "ObservableContext": {
      "type": "object",
      "properties": {
        "observableMap": {
          "$ref": "#/definitions/CacheInvocationIdObservableSubscription"
        },
        "clientAddressToObservables": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/InvocationId"
            }
          }
        },
        "deduplicationIdentity": {
          "type": "string"
        },
        "clientAddress": {
          "$ref": "#/definitions/SimpleString"
        }
      }
    },
    "RpcReply": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/InvocationId"
        },
        "result": {
          "$ref": "#/definitions/TryObject"
        },
        "deduplicationIdentity": {
          "type": "string"
        }
      }
    },
    "None": {
      "type": "object"
    },
    "Send": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "clientAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "serializationContext": {
          "$ref": "#/definitions/SerializationContext"
        },
        "message": {
          "$ref": "#/definitions/ServerToClient"
        }
      }
    },
    "ServerToClient": {
      "type": "object",
      "properties": {
        "deduplicationIdentity": {
          "type": "string"
        }
      }
    },
    "Stop": {
      "type": "object"
    },
    "Function1StringPairStringSetRole": {
      "type": "object"
    },
    "RolesAdderOnLogin": {
      "type": "object",
      "properties": {
        "systemUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "$ref": "#/definitions/Function1StringPairStringSetRole"
        }
      }
    },
    "RpcAuthContext": {
      "type": "object",
      "properties": {
        "invocation": {
          "$ref": "#/definitions/InvocationContext"
        },
        "principal": {
          "type": "string"
        }
      }
    },
    "RpcBrokerConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "persistenceEnabled": {
          "type": "boolean"
        },
        "journalDatasync": {
          "type": "boolean"
        },
        "persistDeliveryCountBeforeDelivery": {
          "type": "boolean"
        },
        "scheduledThreadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "threadPoolMaxSize": {
          "type": "integer",
          "format": "int32"
        },
        "securityInvalidationInterval": {
          "type": "integer",
          "format": "int64"
        },
        "securityEnabled": {
          "type": "boolean"
        },
        "gracefulShutdownEnabled": {
          "type": "boolean"
        },
        "gracefulShutdownTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "connectionTTLOverride": {
          "type": "integer",
          "format": "int64"
        },
        "asyncConnectionExecutionEnabled": {
          "type": "boolean"
        },
        "messageExpiryScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "messageExpiryThreadPriority": {
          "type": "integer",
          "format": "int32"
        },
        "persistIDCache": {
          "type": "boolean"
        },
        "incomingInterceptorClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outgoingInterceptorClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bridgeConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BridgeConfiguration"
          }
        },
        "divertConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DivertConfiguration"
          }
        },
        "clusterConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterConnectionConfiguration"
          }
        },
        "queueConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreQueueConfiguration"
          }
        },
        "addressConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreAddressConfiguration"
          }
        },
        "broadcastGroupConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BroadcastGroupConfiguration"
          }
        },
        "discoveryGroupConfigurations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DiscoveryGroupConfiguration"
          }
        },
        "pagingDirectory": {
          "type": "string"
        },
        "largeMessagesDirectory": {
          "type": "string"
        },
        "bindingsDirectory": {
          "type": "string"
        },
        "createBindingsDir": {
          "type": "boolean"
        },
        "journalDirectory": {
          "type": "string"
        },
        "createJournalDir": {
          "type": "boolean"
        },
        "journalType": {
          "type": "string",
          "enum": [
            "NIO",
            "ASYNCIO",
            "MAPPED"
          ]
        },
        "journalSyncTransactional": {
          "type": "boolean"
        },
        "journalSyncNonTransactional": {
          "type": "boolean"
        },
        "journalCompactMinFiles": {
          "type": "integer",
          "format": "int32"
        },
        "journalCompactPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "journalFileOpenTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "journalFileSize": {
          "type": "integer",
          "format": "int32"
        },
        "journalPoolFiles": {
          "type": "integer",
          "format": "int32"
        },
        "journalMinFiles": {
          "type": "integer",
          "format": "int32"
        },
        "journalMaxIO_AIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferTimeout_AIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferSize_AIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalMaxIO_NIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferTimeout_NIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalBufferSize_NIO": {
          "type": "integer",
          "format": "int32"
        },
        "logJournalWriteRate": {
          "type": "boolean"
        },
        "wildcardConfiguration": {
          "$ref": "#/definitions/WildcardConfiguration"
        },
        "messageCounterEnabled": {
          "type": "boolean"
        },
        "messageCounterSamplePeriod": {
          "type": "integer",
          "format": "int64"
        },
        "messageCounterMaxDayHistory": {
          "type": "integer",
          "format": "int32"
        },
        "transactionTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "transactionTimeoutScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "managementAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "managementNotificationAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "clusterUser": {
          "type": "string"
        },
        "clusterPassword": {
          "type": "string"
        },
        "serverDumpInterval": {
          "type": "integer",
          "format": "int64"
        },
        "failoverOnServerShutdown": {
          "type": "boolean"
        },
        "memoryWarningThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "memoryMeasureInterval": {
          "type": "integer",
          "format": "int64"
        },
        "groupingHandlerConfiguration": {
          "$ref": "#/definitions/GroupingHandlerConfiguration"
        },
        "addressesSettings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AddressSettings"
          }
        },
        "resourceLimitSettings": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceLimitSettings"
          }
        },
        "securitySettingPlugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySettingPlugin"
          }
        },
        "brokerPlugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveMQServerPlugin"
          }
        },
        "securityRoleNameMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        },
        "connectorServiceConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorServiceConfiguration"
          }
        },
        "maskPassword": {
          "type": "boolean"
        },
        "passwordCodec": {
          "type": "string"
        },
        "resolveProtocols": {
          "type": "boolean"
        },
        "journalLockAcquisitionTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "storeConfiguration": {
          "$ref": "#/definitions/StoreConfiguration"
        },
        "populateValidatedUser": {
          "type": "boolean"
        },
        "connectionTtlCheckInterval": {
          "type": "integer",
          "format": "int64"
        },
        "configurationUrl": {
          "type": "string",
          "format": "url"
        },
        "configurationFileRefreshPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "globalMaxSize": {
          "type": "integer",
          "format": "int64"
        },
        "amqpUseCoreSubscriptionNaming": {
          "type": "boolean"
        },
        "maxDiskUsage": {
          "type": "integer",
          "format": "int32"
        },
        "diskScanPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "systemPropertyPrefix": {
          "type": "string"
        },
        "networkCheckList": {
          "type": "string"
        },
        "networkCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "networkCheckTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "networkCheckNIC": {
          "type": "string"
        },
        "networkCheckPingCommand": {
          "type": "string"
        },
        "networkCheckPing6Command": {
          "type": "string"
        },
        "internalNamingPrefix": {
          "type": "string"
        },
        "criticalAnalyzer": {
          "type": "boolean"
        },
        "criticalAnalyzerPolicy": {
          "type": "string",
          "enum": [
            "HALT",
            "SHUTDOWN",
            "LOG"
          ]
        },
        "criticalAnalyzerTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "criticalAnalyzerCheckPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "loginListener": {
          "$ref": "#/definitions/Function1StringUnit"
        },
        "fileDeployerScanPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "acceptorConfigurations": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TransportConfiguration"
          }
        },
        "connectorConfigurations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TransportConfiguration"
          }
        },
        "idcacheSize": {
          "type": "integer",
          "format": "int32"
        },
        "bindingsLocation": {
          "type": "file"
        },
        "pageMaxConcurrentIO": {
          "type": "integer",
          "format": "int32"
        },
        "journalLocation": {
          "type": "file"
        },
        "pagingLocation": {
          "type": "file"
        },
        "wildcardRoutingEnabled": {
          "type": "boolean"
        },
        "jmxmanagementEnabled": {
          "type": "boolean"
        },
        "jmxdomain": {
          "type": "string"
        },
        "jmxuseBrokerName": {
          "type": "boolean"
        },
        "largeMessagesLocation": {
          "type": "file"
        },
        "securityRoles": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "brokerInstance": {
          "type": "file"
        },
        "checkForLiveServer": {
          "type": "boolean"
        },
        "hapolicyConfiguration": {
          "$ref": "#/definitions/HAPolicyConfiguration"
        },
        "networkCheckURLList": {
          "type": "string"
        },
        "clustered": {
          "type": "boolean"
        },
        "jdbc": {
          "type": "boolean"
        }
      }
    },
    "ContractStateAndRef": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/ContractState"
        },
        "ref": {
          "$ref": "#/definitions/StateRef"
        }
      }
    },
    "NodeCore": {
      "type": "object"
    },
    "NodeCoreV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "PersistentStateService": {
      "type": "object"
    },
    "AcknowledgeMessages": {
      "type": "object",
      "properties": {
        "deduplicationHandlers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeduplicationHandler"
          }
        }
      }
    },
    "DeduplicationHandler": {
      "type": "object",
      "properties": {
        "externalCause": {
          "$ref": "#/definitions/ExternalEvent"
        }
      }
    },
    "ExternalEvent": {
      "type": "object",
      "properties": {
        "deduplicationHandler": {
          "$ref": "#/definitions/DeduplicationHandler"
        }
      }
    },
    "AddSessionBinding": {
      "type": "object",
      "properties": {
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "sessionId": {
          "$ref": "#/definitions/SessionId"
        }
      }
    },
    "CancelFlowTimeout": {
      "type": "object",
      "properties": {
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "CommitTransaction": {
      "type": "object",
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        },
        "txId": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        },
        "requestingParty": {
          "type": "string"
        },
        "requestSignature": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "timeWindow": {
          "$ref": "#/definitions/TimeWindow"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateRef"
          }
        }
      }
    },
    "CreateTransaction": {
      "type": "object"
    },
    "ExecuteAsyncOperation": {
      "type": "object",
      "properties": {
        "deduplicationId": {
          "type": "string"
        },
        "operation": {
          "$ref": "#/definitions/FlowAsyncOperationObject"
        }
      }
    },
    "FlowAsyncOperation": {
      "type": "object"
    },
    "FlowAsyncOperationObject": {
      "type": "object"
    },
    "Checkpoint": {
      "type": "object",
      "properties": {
        "invocationContext": {
          "$ref": "#/definitions/InvocationContext"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "sessions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SessionState"
          }
        },
        "subFlowStack": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubFlow"
          }
        },
        "flowState": {
          "$ref": "#/definitions/FlowState"
        },
        "errorState": {
          "$ref": "#/definitions/ErrorState"
        },
        "numberOfSuspends": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ErrorState": {
      "type": "object"
    },
    "FlowState": {
      "type": "object"
    },
    "PersistCheckpoint": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "checkpoint": {
          "$ref": "#/definitions/Checkpoint"
        },
        "checkpointUpdate": {
          "type": "boolean"
        }
      }
    },
    "SessionState": {
      "type": "object",
      "properties": {
        "deduplicationSeed": {
          "type": "string"
        }
      }
    },
    "SubFlow": {
      "type": "object",
      "properties": {
        "subFlowVersion": {
          "$ref": "#/definitions/SubFlowVersion"
        },
        "enabledTimedFlow": {
          "type": "boolean"
        }
      }
    },
    "SubFlowVersion": {
      "type": "object",
      "properties": {
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PersistDeduplicationFacts": {
      "type": "object",
      "properties": {
        "deduplicationHandlers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeduplicationHandler"
          }
        }
      }
    },
    "DataSessionMessage": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "ErrorSessionMessage": {
      "type": "object",
      "properties": {
        "flowException": {
          "$ref": "#/definitions/FlowException"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FlowError": {
      "type": "object",
      "properties": {
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "exception": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "Initiated": {
      "type": "object",
      "properties": {
        "peerParty": {
          "$ref": "#/definitions/Party"
        },
        "peerFlowInfo": {
          "$ref": "#/definitions/FlowInfo"
        },
        "receivedMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSessionMessage"
          }
        },
        "initiatedState": {
          "$ref": "#/definitions/InitiatedSessionState"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlowError"
          }
        },
        "deduplicationSeed": {
          "type": "string"
        }
      }
    },
    "InitiatedSessionState": {
      "type": "object"
    },
    "PropagateErrors": {
      "type": "object",
      "properties": {
        "errorMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorSessionMessage"
          }
        },
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Initiated"
          }
        },
        "senderUUID": {
          "type": "string"
        }
      }
    },
    "ReleaseSoftLocks": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "RemoveCheckpoint": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "FlowRemovalReason": {
      "type": "object"
    },
    "RemoveFlow": {
      "type": "object",
      "properties": {
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "removalReason": {
          "$ref": "#/definitions/FlowRemovalReason"
        },
        "lastState": {
          "$ref": "#/definitions/StateMachineState"
        }
      }
    },
    "StateMachineState": {
      "type": "object",
      "properties": {
        "checkpoint": {
          "$ref": "#/definitions/Checkpoint"
        },
        "flowLogic": {
          "$ref": "#/definitions/FlowLogicObject"
        },
        "pendingDeduplicationHandlers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeduplicationHandler"
          }
        },
        "senderUUID": {
          "type": "string"
        },
        "removed": {
          "type": "boolean"
        },
        "flowResumed": {
          "type": "boolean"
        },
        "transactionTracked": {
          "type": "boolean"
        },
        "anyCheckpointPersisted": {
          "type": "boolean"
        },
        "startIdempotent": {
          "type": "boolean"
        }
      }
    },
    "RemoveSessionBindings": {
      "type": "object",
      "properties": {
        "sessionIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SessionId"
          }
        }
      }
    },
    "RetryFlowFromSafePoint": {
      "type": "object"
    },
    "RollbackTransaction": {
      "type": "object"
    },
    "Event": {
      "type": "object"
    },
    "ScheduleEvent": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "ScheduleFlowTimeout": {
      "type": "object",
      "properties": {
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "ExistingSessionMessage": {
      "type": "object",
      "properties": {
        "recipientSessionId": {
          "$ref": "#/definitions/SessionId"
        },
        "payload": {
          "$ref": "#/definitions/ExistingSessionMessagePayload"
        }
      }
    },
    "ExistingSessionMessagePayload": {
      "type": "object"
    },
    "SendExisting": {
      "type": "object",
      "properties": {
        "peerParty": {
          "$ref": "#/definitions/Party"
        },
        "message": {
          "$ref": "#/definitions/ExistingSessionMessage"
        },
        "deduplicationId": {
          "$ref": "#/definitions/SenderDeduplicationId"
        }
      }
    },
    "SenderDeduplicationId": {
      "type": "object",
      "properties": {
        "deduplicationId": {
          "$ref": "#/definitions/DeduplicationId"
        },
        "senderUUID": {
          "type": "string"
        }
      }
    },
    "InitialSessionMessage": {
      "type": "object",
      "properties": {
        "initiatorSessionId": {
          "$ref": "#/definitions/SessionId"
        },
        "initiationEntropy": {
          "type": "integer",
          "format": "int64"
        },
        "initiatorFlowClassName": {
          "type": "string"
        },
        "flowVersion": {
          "type": "integer",
          "format": "int32"
        },
        "appName": {
          "type": "string"
        },
        "firstPayload": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "SendInitial": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/Party"
        },
        "initialise": {
          "$ref": "#/definitions/InitialSessionMessage"
        },
        "deduplicationId": {
          "$ref": "#/definitions/SenderDeduplicationId"
        }
      }
    },
    "SignalFlowHasStarted": {
      "type": "object",
      "properties": {
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "SleepUntil": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TrackTransaction": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "ActionExecutorImpl": {
      "type": "object"
    },
    "ConfirmSessionMessage": {
      "type": "object",
      "properties": {
        "initiatedSessionId": {
          "$ref": "#/definitions/SessionId"
        },
        "initiatedFlowInfo": {
          "$ref": "#/definitions/FlowInfo"
        }
      }
    },
    "CountUpDownLatch": {
      "type": "object"
    },
    "EndSessionMessage": {
      "type": "object"
    },
    "Clean": {
      "type": "object"
    },
    "Errored": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlowError"
          }
        },
        "propagatedIndex": {
          "type": "integer",
          "format": "int32"
        },
        "propagating": {
          "type": "boolean"
        }
      }
    },
    "AsyncOperationCompletion": {
      "type": "object",
      "properties": {
        "returnValue": {
          "type": "object"
        }
      }
    },
    "DeliverSessionMessage": {
      "type": "object",
      "properties": {
        "sessionMessage": {
          "$ref": "#/definitions/ExistingSessionMessage"
        },
        "deduplicationHandler": {
          "$ref": "#/definitions/DeduplicationHandler"
        },
        "sender": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "DoRemainingWork": {
      "type": "object"
    },
    "EnterSubFlow": {
      "type": "object",
      "properties": {
        "subFlowVersion": {
          "$ref": "#/definitions/SubFlowVersion"
        },
        "enabledTimedFlow": {
          "type": "boolean"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/SignedDataNotaryError"
        }
      }
    },
    "FlowFinish": {
      "type": "object",
      "properties": {
        "returnValue": {
          "type": "object"
        },
        "softLocksId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "InitiateFlow": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "LeaveSubFlow": {
      "type": "object"
    },
    "SoftShutdown": {
      "type": "object"
    },
    "StartErrorPropagation": {
      "type": "object"
    },
    "FlowIORequest": {
      "type": "object"
    },
    "FlowIORequestObject": {
      "type": "object"
    },
    "Suspend": {
      "type": "object",
      "properties": {
        "ioRequest": {
          "$ref": "#/definitions/FlowIORequestObject"
        },
        "maySkipCheckpoint": {
          "type": "boolean"
        },
        "fiber": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "TransactionCommitted": {
      "type": "object",
      "properties": {
        "transaction": {
          "$ref": "#/definitions/SignedTransaction"
        }
      }
    },
    "FlowLogicRefImpl": {
      "type": "object",
      "properties": {
        "flowLogicClassName": {
          "type": "string"
        },
        "args": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "FlowMessagingImpl": {
      "type": "object",
      "properties": {
        "serviceHub": {
          "$ref": "#/definitions/ServiceHubInternal"
        }
      }
    },
    "ServiceHubInternal": {
      "type": "object",
      "properties": {
        "networkMapCache": {
          "$ref": "#/definitions/NetworkMapCacheInternal"
        },
        "configuration": {
          "$ref": "#/definitions/NodeConfiguration"
        },
        "validatedTransactions": {
          "$ref": "#/definitions/WritableTransactionStorage"
        },
        "attachments": {
          "$ref": "#/definitions/AttachmentStorageInternal"
        },
        "vaultService": {
          "$ref": "#/definitions/VaultServiceInternal"
        },
        "rpcFlows": {
          "type": "array"
        },
        "schemaService": {
          "$ref": "#/definitions/SchemaService"
        },
        "stateMachineRecordedTransactionMapping": {
          "$ref": "#/definitions/StateMachineRecordedTransactionMappingStorage"
        },
        "nodeProperties": {
          "$ref": "#/definitions/NodePropertiesStore"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "monitoringService": {
          "$ref": "#/definitions/MonitoringService"
        },
        "auditService": {
          "$ref": "#/definitions/AuditService"
        },
        "networkService": {
          "$ref": "#/definitions/MessagingService"
        },
        "networkMapUpdater": {
          "$ref": "#/definitions/NetworkMapUpdater"
        },
        "cacheFactory": {
          "$ref": "#/definitions/NamedCacheFactory"
        },
        "cordappProvider": {
          "$ref": "#/definitions/CordappProviderInternal"
        },
        "keyManagementService": {
          "$ref": "#/definitions/KeyManagementService"
        },
        "contractUpgradeService": {
          "$ref": "#/definitions/ContractUpgradeService"
        },
        "clock": {
          "$ref": "#/definitions/Clock"
        },
        "transactionVerifierService": {
          "$ref": "#/definitions/TransactionVerifierService"
        },
        "myInfo": {
          "$ref": "#/definitions/NodeInfo"
        },
        "appContext": {
          "$ref": "#/definitions/CordappContext"
        },
        "networkParametersService": {
          "$ref": "#/definitions/NetworkParametersService"
        },
        "identityService": {
          "$ref": "#/definitions/IdentityService"
        },
        "networkParameters": {
          "$ref": "#/definitions/NetworkParameters"
        }
      }
    },
    "FlowMonitor": {
      "type": "object",
      "properties": {
        "started": {
          "type": "boolean"
        }
      }
    },
    "FlowPermissionException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "originalErrorId": {
          "type": "integer",
          "format": "int64"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "ErrorFinish": {
      "type": "object",
      "properties": {
        "flowErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlowError"
          }
        }
      }
    },
    "OrderlyFinish": {
      "type": "object",
      "properties": {
        "flowReturnValue": {
          "type": "object"
        }
      }
    },
    "FlowSessionImpl": {
      "type": "object",
      "properties": {
        "counterparty": {
          "$ref": "#/definitions/Party"
        },
        "sourceSessionId": {
          "$ref": "#/definitions/SessionId"
        },
        "counterpartyFlowInfo": {
          "$ref": "#/definitions/FlowInfo"
        }
      }
    },
    "Explicit": {
      "type": "object"
    },
    "Started": {
      "type": "object",
      "properties": {
        "flowIORequest": {
          "$ref": "#/definitions/FlowIORequestObject"
        },
        "frozenFiber": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "FlowStart": {
      "type": "object"
    },
    "Unstarted": {
      "type": "object",
      "properties": {
        "flowStart": {
          "$ref": "#/definitions/FlowStart"
        },
        "frozenFlowLogic": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "ActionExecutor": {
      "type": "object"
    },
    "Channel": {
      "type": "object",
      "properties": {
        "closed": {
          "type": "boolean"
        }
      }
    },
    "ChannelEvent": {
      "type": "object",
      "properties": {
        "closed": {
          "type": "boolean"
        }
      }
    },
    "Executor": {
      "type": "object"
    },
    "FiberScheduler": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "executor": {
          "$ref": "#/definitions/Executor"
        }
      }
    },
    "FibersMonitor": {
      "type": "object"
    },
    "FlowStateMachineImpl": {
      "type": "object",
      "properties": {
        "scheduler": {
          "$ref": "#/definitions/FiberScheduler"
        },
        "task": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "NEW",
            "STARTED",
            "RUNNING",
            "WAITING",
            "TIMED_WAITING",
            "TERMINATED"
          ]
        },
        "interruptStack": {
          "$ref": "#/definitions/InterruptedException"
        },
        "interrupted": {
          "type": "boolean"
        },
        "target": {
          "$ref": "#/definitions/SuspendableCallableUnit"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "noLocals": {
          "type": "boolean"
        },
        "uncaughtExceptionHandler": {
          "$ref": "#/definitions/UncaughtExceptionHandler"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "logic": {
          "$ref": "#/definitions/FlowLogicObject"
        },
        "context": {
          "$ref": "#/definitions/InvocationContext"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHubInternal"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "stateMachine": {
          "$ref": "#/definitions/StateMachine"
        },
        "resultFuture": {
          "$ref": "#/definitions/CordaFutureObject"
        },
        "ourSenderUUID": {
          "type": "string"
        },
        "transientValues$node": {
          "$ref": "#/definitions/TransientReferenceTransientValues"
        },
        "transientState$node": {
          "$ref": "#/definitions/TransientReferenceStateMachineState"
        },
        "hasSoftLockedStates$node": {
          "type": "boolean"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "alive": {
          "type": "boolean"
        },
        "cancelled": {
          "type": "boolean"
        },
        "blocker": {
          "type": "object"
        },
        "done": {
          "type": "boolean"
        },
        "terminated": {
          "type": "boolean"
        },
        "fiber": {
          "type": "boolean"
        },
        "underlying": {
          "type": "object"
        },
        "monitor": {
          "$ref": "#/definitions/FibersMonitor"
        }
      }
    },
    "Function2": {
      "type": "object"
    },
    "Function2StateMachineRunIdLongUnit": {
      "type": "object"
    },
    "InterruptedException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "SecureRandom": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "algorithm": {
          "type": "string"
        }
      }
    },
    "StateMachine": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "secureRandom": {
          "$ref": "#/definitions/SecureRandom"
        }
      }
    },
    "SuspendableCallable": {
      "type": "object"
    },
    "SuspendableCallableUnit": {
      "type": "object"
    },
    "TransientReference": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        }
      }
    },
    "TransientReferenceStateMachineState": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/StateMachineState"
        }
      }
    },
    "TransientReferenceTransientValues": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/TransientValues"
        }
      }
    },
    "TransientValues": {
      "type": "object",
      "properties": {
        "eventQueue": {
          "$ref": "#/definitions/ChannelEvent"
        },
        "resultFuture": {
          "$ref": "#/definitions/CordaFutureObject"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "transitionExecutor": {
          "$ref": "#/definitions/TransitionExecutor"
        },
        "actionExecutor": {
          "$ref": "#/definitions/ActionExecutor"
        },
        "stateMachine": {
          "$ref": "#/definitions/StateMachine"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHubInternal"
        },
        "checkpointSerializationContext": {
          "$ref": "#/definitions/CheckpointSerializationContext"
        },
        "unfinishedFibers": {
          "$ref": "#/definitions/ReusableLatch"
        },
        "waitTimeUpdateHook": {
          "$ref": "#/definitions/Function2StateMachineRunIdLongUnit"
        }
      }
    },
    "TransitionExecutor": {
      "type": "object"
    },
    "UncaughtExceptionHandler": {
      "type": "object"
    },
    "FlowTimeoutException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "Ended": {
      "type": "object"
    },
    "Live": {
      "type": "object",
      "properties": {
        "peerSinkSessionId": {
          "$ref": "#/definitions/SessionId"
        }
      }
    },
    "RejectSessionMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SessionRejectException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "NotAFlow": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "NotRegistered": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "UnknownClass": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "initiatorFlowClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "Initiating": {
      "type": "object",
      "properties": {
        "flowInfo": {
          "$ref": "#/definitions/FlowInfo"
        },
        "subFlowVersion": {
          "$ref": "#/definitions/SubFlowVersion"
        },
        "enabledTimedFlow": {
          "type": "boolean"
        }
      }
    },
    "PairDeduplicationIdExistingSessionMessagePayload": {
      "type": "object",
      "properties": {
        "first": {
          "$ref": "#/definitions/DeduplicationId"
        },
        "second": {
          "$ref": "#/definitions/ExistingSessionMessagePayload"
        }
      }
    },
    "Uninitiated": {
      "type": "object",
      "properties": {
        "party": {
          "$ref": "#/definitions/Party"
        },
        "initiatingSubFlow": {
          "$ref": "#/definitions/Initiating"
        },
        "sourceSessionId": {
          "$ref": "#/definitions/SessionId"
        },
        "additionalEntropy": {
          "type": "integer",
          "format": "int64"
        },
        "deduplicationSeed": {
          "type": "string"
        }
      }
    },
    "ExecutorService": {
      "type": "object",
      "properties": {
        "shutdown": {
          "type": "boolean"
        },
        "terminated": {
          "type": "boolean"
        }
      }
    },
    "SingleThreadedStateMachineManager": {
      "type": "object",
      "properties": {
        "flowHospital": {
          "$ref": "#/definitions/StaffedFlowHospital"
        },
        "changes": {
          "$ref": "#/definitions/ObservableChange"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHubInternal"
        },
        "executor": {
          "$ref": "#/definitions/ExecutorService"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        },
        "allStateMachines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlowLogicObject"
          }
        }
      }
    },
    "DeadlockNurse": {
      "type": "object"
    },
    "DoctorTimeout": {
      "type": "object"
    },
    "DuplicateInsertSpecialist": {
      "type": "object"
    },
    "FinalityDoctor": {
      "type": "object"
    },
    "Flow": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "suspendCount": {
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        },
        "by": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Staff"
          }
        },
        "outcome": {
          "type": "string",
          "enum": [
            "DISCHARGE",
            "OVERNIGHT_OBSERVATION",
            "UNTREATABLE"
          ]
        }
      }
    },
    "FlowMedicalHistory": {
      "type": "object",
      "properties": {
        "records$node": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flow"
          }
        }
      }
    },
    "Staff": {
      "type": "object"
    },
    "SessionInit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "outcome": {
          "type": "string",
          "enum": [
            "DISCHARGE",
            "OVERNIGHT_OBSERVATION",
            "UNTREATABLE"
          ]
        },
        "initiatorFlowClassName": {
          "type": "string"
        },
        "flowVersion": {
          "type": "integer",
          "format": "int32"
        },
        "appName": {
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/Party"
        },
        "error": {
          "$ref": "#/definitions/Throwable"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "StaffedFlowHospital$WhenMappings": {
      "type": "object"
    },
    "Inlined": {
      "type": "object",
      "properties": {
        "subFlowVersion": {
          "$ref": "#/definitions/SubFlowVersion"
        },
        "enabledTimedFlow": {
          "type": "boolean"
        }
      }
    },
    "CorDappFlow": {
      "type": "object",
      "properties": {
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        },
        "corDappName": {
          "type": "string"
        },
        "corDappHash": {
          "type": "string",
          "description": "Base 58 Encoded Secure Hash"
        }
      }
    },
    "CoreFlow": {
      "type": "object",
      "properties": {
        "platformVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TransitionExecutorImpl": {
      "type": "object",
      "properties": {
        "secureRandom": {
          "$ref": "#/definitions/SecureRandom"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        }
      }
    },
    "DumpHistoryOnErrorInterceptor": {
      "type": "object",
      "properties": {
        "delegate": {
          "$ref": "#/definitions/TransitionExecutor"
        }
      }
    },
    "FiberDeserializationChecker": {
      "type": "object"
    },
    "Check": {
      "type": "object",
      "properties": {
        "serializedFiber": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "Finish": {
      "type": "object"
    },
    "FiberDeserializationCheckingInterceptor": {
      "type": "object",
      "properties": {
        "fiberDeserializationChecker": {
          "$ref": "#/definitions/FiberDeserializationChecker"
        },
        "delegate": {
          "$ref": "#/definitions/TransitionExecutor"
        }
      }
    },
    "HospitalisingInterceptor": {
      "type": "object"
    },
    "MetricActionInterceptor": {
      "type": "object",
      "properties": {
        "metrics": {
          "$ref": "#/definitions/MetricRegistry"
        },
        "delegate": {
          "$ref": "#/definitions/ActionExecutor"
        }
      }
    },
    "MetricInterceptor": {
      "type": "object",
      "properties": {
        "metrics": {
          "$ref": "#/definitions/MetricRegistry"
        },
        "delegate": {
          "$ref": "#/definitions/TransitionExecutor"
        }
      }
    },
    "PrintingInterceptor": {
      "type": "object",
      "properties": {
        "delegate": {
          "$ref": "#/definitions/TransitionExecutor"
        }
      }
    },
    "Action": {
      "type": "object"
    },
    "FlowContinuation": {
      "type": "object"
    },
    "TransitionDiagnosticRecord": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "flowId": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "previousState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "nextState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "event": {
          "$ref": "#/definitions/Event"
        },
        "transition": {
          "$ref": "#/definitions/TransitionResult"
        },
        "continuation": {
          "$ref": "#/definitions/FlowContinuation"
        }
      }
    },
    "TransitionResult": {
      "type": "object",
      "properties": {
        "newState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        },
        "continuation": {
          "$ref": "#/definitions/FlowContinuation"
        }
      }
    },
    "CannotFindSessionException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "DeliverSessionMessageTransition": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/TransitionContext"
        },
        "startingState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "event": {
          "$ref": "#/definitions/DeliverSessionMessage"
        }
      }
    },
    "TransitionContext": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/StateMachineRunId"
        },
        "secureRandom": {
          "$ref": "#/definitions/SecureRandom"
        }
      }
    },
    "DoRemainingWorkTransition": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/TransitionContext"
        },
        "startingState": {
          "$ref": "#/definitions/StateMachineState"
        }
      }
    },
    "ErrorFlowTransition": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/TransitionContext"
        },
        "startingState": {
          "$ref": "#/definitions/StateMachineState"
        }
      }
    },
    "Abort": {
      "type": "object"
    },
    "ProcessEvents": {
      "type": "object"
    },
    "Resume": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        }
      }
    },
    "Throw": {
      "type": "object",
      "properties": {
        "throwable": {
          "$ref": "#/definitions/Throwable"
        }
      }
    },
    "StartedFlowTransition": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/TransitionContext"
        },
        "startingState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "started": {
          "$ref": "#/definitions/Started"
        }
      }
    },
    "PollResult": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "example": "736F6D654279746573",
            "description": "Hex encoded Byte Array"
          }
        },
        "newSessionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SessionState"
          }
        }
      }
    },
    "TopLevelTransition": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/TransitionContext"
        },
        "startingState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "event": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "TransitionBuilder": {
      "type": "object",
      "properties": {
        "currentState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        },
        "context": {
          "$ref": "#/definitions/TransitionContext"
        },
        "errored": {
          "type": "boolean"
        }
      }
    },
    "UnexpectedEventInState": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "UnstartedFlowTransition": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/TransitionContext"
        },
        "startingState": {
          "$ref": "#/definitions/StateMachineState"
        },
        "unstarted": {
          "$ref": "#/definitions/Unstarted"
        }
      }
    },
    "NodeNotarySchema": {
      "type": "object"
    },
    "NodeNotarySchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "FlowSession": {
      "type": "object",
      "properties": {
        "counterparty": {
          "$ref": "#/definitions/Party"
        },
        "counterpartyFlowInfo": {
          "$ref": "#/definitions/FlowInfo"
        }
      }
    },
    "NonValidatingNotaryFlow": {
      "type": "object",
      "properties": {
        "progressTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "otherSideSession": {
          "$ref": "#/definitions/FlowSession"
        },
        "service": {
          "$ref": "#/definitions/SinglePartyNotaryService"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHub"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "stateMachine": {
          "$ref": "#/definitions/FlowStateMachineObject"
        },
        "ourIdentityAndCert": {
          "$ref": "#/definitions/PartyAndCertificate"
        },
        "runId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "SinglePartyNotaryService": {
      "type": "object",
      "properties": {
        "services": {
          "$ref": "#/definitions/ServiceHub"
        },
        "notaryIdentityKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "PathManager": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/Path"
        }
      }
    },
    "PersistentUniquenessProvider": {
      "type": "object",
      "properties": {
        "clock": {
          "$ref": "#/definitions/Clock"
        },
        "database": {
          "$ref": "#/definitions/CordaPersistence"
        }
      }
    },
    "BaseComittedState": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "consumingTxHash": {
          "type": "string"
        }
      }
    },
    "CommittedState": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "index": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CommittedTransaction": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string"
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "consumingTxHash": {
          "type": "string"
        },
        "partyName": {
          "type": "string"
        },
        "requestSignature": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "requestDate": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SimpleNotaryService": {
      "type": "object",
      "properties": {
        "services": {
          "$ref": "#/definitions/ServiceHubInternal"
        },
        "notaryIdentityKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "ValidatingNotaryFlow": {
      "type": "object",
      "properties": {
        "progressTracker": {
          "$ref": "#/definitions/ProgressTracker"
        },
        "otherSideSession": {
          "$ref": "#/definitions/FlowSession"
        },
        "service": {
          "$ref": "#/definitions/SinglePartyNotaryService"
        },
        "serviceHub": {
          "$ref": "#/definitions/ServiceHub"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "ourIdentity": {
          "$ref": "#/definitions/Party"
        },
        "stateMachine": {
          "$ref": "#/definitions/FlowStateMachineObject"
        },
        "ourIdentityAndCert": {
          "$ref": "#/definitions/PartyAndCertificate"
        },
        "runId": {
          "$ref": "#/definitions/StateMachineRunId"
        }
      }
    },
    "DBContractUpgrade": {
      "type": "object",
      "properties": {
        "stateRef": {
          "type": "string"
        },
        "upgradedContractClassName": {
          "type": "string"
        }
      }
    },
    "AbstractQueryCriteriaParser$WhenMappings": {
      "type": "object"
    },
    "AttributeDBAttachmentObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "declaringType": {
          "$ref": "#/definitions/ManagedTypeDBAttachment"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        }
      }
    },
    "Bindable": {
      "type": "object",
      "properties": {
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "BindableDBAttachment": {
      "type": "object",
      "properties": {
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "BindableObject": {
      "type": "object",
      "properties": {
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "EntityTypeDBAttachment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "supertype": {
          "$ref": "#/definitions/IdentifiableTypeObject"
        },
        "idClassAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "idType": {
          "$ref": "#/definitions/TypeObject"
        },
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeDBAttachmentObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeDBAttachmentObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeDBAttachmentObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "ExpressionBoolean": {
      "type": "object",
      "properties": {
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "FetchDBAttachmentObject": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/FetchParentObjectDBAttachment"
        },
        "attribute": {
          "$ref": "#/definitions/AttributeObjectObject"
        },
        "joinType": {
          "type": "string",
          "enum": [
            "INNER",
            "LEFT",
            "RIGHT"
          ]
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "FetchObjectObject": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/FetchParentObjectObject"
        },
        "attribute": {
          "$ref": "#/definitions/AttributeObjectObject"
        },
        "joinType": {
          "type": "string",
          "enum": [
            "INNER",
            "LEFT",
            "RIGHT"
          ]
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "FetchParent": {
      "type": "object",
      "properties": {
        "fetches": {
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "FetchParentObjectDBAttachment": {
      "type": "object",
      "properties": {
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchDBAttachmentObject"
          }
        }
      }
    },
    "FetchParentObjectObject": {
      "type": "object",
      "properties": {
        "fetches": {
          "type": "array",
          "uniqueItems": true
        }
      }
    },
    "From": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true
        },
        "correlated": {
          "type": "boolean"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "FromDBAttachmentDBAttachment": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinDBAttachmentObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromDBAttachmentDBAttachment"
        },
        "model": {
          "$ref": "#/definitions/BindableDBAttachment"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchDBAttachmentObject"
          }
        }
      }
    },
    "FromDBAttachmentObject": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinObjectObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromDBAttachmentObject"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "FromObjectDBAttachment": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinDBAttachmentObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromObjectDBAttachment"
        },
        "model": {
          "$ref": "#/definitions/BindableDBAttachment"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchDBAttachmentObject"
          }
        }
      }
    },
    "FromObjectObject": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromObjectObject"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "HibernateAttachmentQueryCriteriaParser": {
      "type": "object",
      "properties": {
        "criteriaBuilder": {
          "$ref": "#/definitions/CriteriaBuilder"
        },
        "root": {
          "$ref": "#/definitions/RootDBAttachment"
        }
      }
    },
    "Join": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/FromObjectObject"
        },
        "attribute": {
          "$ref": "#/definitions/AttributeObjectObject"
        },
        "on": {
          "$ref": "#/definitions/Predicate"
        },
        "joinType": {
          "type": "string",
          "enum": [
            "INNER",
            "LEFT",
            "RIGHT"
          ]
        },
        "joins": {
          "type": "array",
          "uniqueItems": true
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromObjectObject"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "JoinDBAttachmentObject": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/FromObjectDBAttachment"
        },
        "attribute": {
          "$ref": "#/definitions/AttributeObjectObject"
        },
        "on": {
          "$ref": "#/definitions/Predicate"
        },
        "joinType": {
          "type": "string",
          "enum": [
            "INNER",
            "LEFT",
            "RIGHT"
          ]
        },
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinObjectObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromDBAttachmentObject"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "JoinObjectObject": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/FromObjectObject"
        },
        "attribute": {
          "$ref": "#/definitions/AttributeObjectObject"
        },
        "on": {
          "$ref": "#/definitions/Predicate"
        },
        "joinType": {
          "type": "string",
          "enum": [
            "INNER",
            "LEFT",
            "RIGHT"
          ]
        },
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinObjectObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromObjectObject"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "ManagedTypeDBAttachment": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeDBAttachmentObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeDBAttachmentObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeDBAttachmentObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "PathObject": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "PluralAttributeDBAttachmentObjectObject": {
      "type": "object",
      "properties": {
        "elementType": {
          "$ref": "#/definitions/TypeObject"
        },
        "collectionType": {
          "type": "string",
          "enum": [
            "COLLECTION",
            "SET",
            "LIST",
            "MAP"
          ]
        },
        "name": {
          "type": "string"
        },
        "declaringType": {
          "$ref": "#/definitions/ManagedTypeDBAttachment"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "Predicate": {
      "type": "object",
      "properties": {
        "negated": {
          "type": "boolean"
        },
        "operator": {
          "type": "string",
          "enum": [
            "AND",
            "OR"
          ]
        },
        "expressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressionBoolean"
          }
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "Root": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/EntityTypeObject"
        },
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinObjectObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromObjectObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "RootDBAttachment": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/EntityTypeDBAttachment"
        },
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinDBAttachmentObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromDBAttachmentDBAttachment"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchDBAttachmentObject"
          }
        }
      }
    },
    "Selection": {
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/Criteria"
        }
      }
    },
    "SelectionObject": {
      "type": "object",
      "properties": {
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "SingularAttributeDBAttachmentObject": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeObject"
        },
        "optional": {
          "type": "boolean"
        },
        "id": {
          "type": "boolean"
        },
        "version": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "declaringType": {
          "$ref": "#/definitions/ManagedTypeDBAttachment"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "HibernateAttachmentQueryCriteriaParser$WhenMappings": {
      "type": "object"
    },
    "AttributeVaultStatesObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "declaringType": {
          "$ref": "#/definitions/ManagedTypeVaultStates"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        }
      }
    },
    "BindableVaultStates": {
      "type": "object",
      "properties": {
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "CriteriaQuery": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ParameterExpressionObject"
          }
        },
        "orderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        },
        "roots": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/RootObject"
          }
        },
        "groupList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressionObject"
          }
        },
        "groupRestriction": {
          "$ref": "#/definitions/Predicate"
        },
        "selection": {
          "$ref": "#/definitions/SelectionObject"
        },
        "distinct": {
          "type": "boolean"
        },
        "restriction": {
          "$ref": "#/definitions/Predicate"
        }
      }
    },
    "CriteriaQueryTuple": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ParameterExpressionObject"
          }
        },
        "orderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        },
        "roots": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/RootObject"
          }
        },
        "groupList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressionObject"
          }
        },
        "groupRestriction": {
          "$ref": "#/definitions/Predicate"
        },
        "selection": {
          "$ref": "#/definitions/SelectionTuple"
        },
        "distinct": {
          "type": "boolean"
        },
        "restriction": {
          "$ref": "#/definitions/Predicate"
        }
      }
    },
    "EntityTypeVaultStates": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "supertype": {
          "$ref": "#/definitions/IdentifiableTypeObject"
        },
        "idClassAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "idType": {
          "$ref": "#/definitions/TypeObject"
        },
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeVaultStatesObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeVaultStatesObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeVaultStatesObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "ExpressionObject": {
      "type": "object",
      "properties": {
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "FetchParentObjectVaultStates": {
      "type": "object",
      "properties": {
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchVaultStatesObject"
          }
        }
      }
    },
    "FetchVaultStatesObject": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/FetchParentObjectVaultStates"
        },
        "attribute": {
          "$ref": "#/definitions/AttributeObjectObject"
        },
        "joinType": {
          "type": "string",
          "enum": [
            "INNER",
            "LEFT",
            "RIGHT"
          ]
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "FromObjectVaultStates": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinVaultStatesObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromObjectVaultStates"
        },
        "model": {
          "$ref": "#/definitions/BindableVaultStates"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchVaultStatesObject"
          }
        }
      }
    },
    "FromVaultStatesObject": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinObjectObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromVaultStatesObject"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "FromVaultStatesVaultStates": {
      "type": "object",
      "properties": {
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinVaultStatesObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromVaultStatesVaultStates"
        },
        "model": {
          "$ref": "#/definitions/BindableVaultStates"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchVaultStatesObject"
          }
        }
      }
    },
    "HibernateQueryCriteriaParser": {
      "type": "object",
      "properties": {
        "stateTypes": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "contractStateTypeMappings": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        },
        "criteriaBuilder": {
          "$ref": "#/definitions/CriteriaBuilder"
        },
        "criteriaQuery": {
          "$ref": "#/definitions/CriteriaQueryTuple"
        },
        "vaultStates": {
          "$ref": "#/definitions/RootVaultStates"
        }
      }
    },
    "JoinVaultStatesObject": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/FromObjectVaultStates"
        },
        "attribute": {
          "$ref": "#/definitions/AttributeObjectObject"
        },
        "on": {
          "$ref": "#/definitions/Predicate"
        },
        "joinType": {
          "type": "string",
          "enum": [
            "INNER",
            "LEFT",
            "RIGHT"
          ]
        },
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinObjectObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromVaultStatesObject"
        },
        "model": {
          "$ref": "#/definitions/BindableObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "ManagedTypeVaultStates": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeObjectObject"
          }
        },
        "declaredAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttributeVaultStatesObject"
          }
        },
        "singularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeObjectObject"
          }
        },
        "declaredSingularAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SingularAttributeVaultStatesObject"
          }
        },
        "pluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeObjectObjectObject"
          }
        },
        "declaredPluralAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/PluralAttributeVaultStatesObjectObject"
          }
        },
        "persistenceType": {
          "type": "string",
          "enum": [
            "ENTITY",
            "EMBEDDABLE",
            "MAPPED_SUPERCLASS",
            "BASIC"
          ]
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "expression": {
          "$ref": "#/definitions/ExpressionObject"
        },
        "ascending": {
          "type": "boolean"
        }
      }
    },
    "ParameterExpression": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "ParameterExpressionObject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "PluralAttributeVaultStatesObjectObject": {
      "type": "object",
      "properties": {
        "elementType": {
          "$ref": "#/definitions/TypeObject"
        },
        "collectionType": {
          "type": "string",
          "enum": [
            "COLLECTION",
            "SET",
            "LIST",
            "MAP"
          ]
        },
        "name": {
          "type": "string"
        },
        "declaringType": {
          "$ref": "#/definitions/ManagedTypeVaultStates"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "RootObject": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/EntityTypeObject"
        },
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinObjectObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromObjectObject"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchObjectObject"
          }
        }
      }
    },
    "RootVaultStates": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/EntityTypeVaultStates"
        },
        "joins": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JoinVaultStatesObject"
          }
        },
        "correlated": {
          "type": "boolean"
        },
        "correlationParent": {
          "$ref": "#/definitions/FromVaultStatesVaultStates"
        },
        "parentPath": {
          "$ref": "#/definitions/PathObject"
        },
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        },
        "fetches": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/FetchVaultStatesObject"
          }
        }
      }
    },
    "SelectionTuple": {
      "type": "object",
      "properties": {
        "compoundSelectionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectionObject"
          }
        },
        "compoundSelection": {
          "type": "boolean"
        },
        "alias": {
          "type": "string"
        }
      }
    },
    "SingularAttributeVaultStatesObject": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeObject"
        },
        "optional": {
          "type": "boolean"
        },
        "id": {
          "type": "boolean"
        },
        "version": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "declaringType": {
          "$ref": "#/definitions/ManagedTypeVaultStates"
        },
        "collection": {
          "type": "boolean"
        },
        "persistentAttributeType": {
          "type": "string",
          "enum": [
            "MANY_TO_ONE",
            "ONE_TO_ONE",
            "BASIC",
            "EMBEDDED",
            "MANY_TO_MANY",
            "ONE_TO_MANY",
            "ELEMENT_COLLECTION"
          ]
        },
        "javaMember": {
          "$ref": "#/definitions/Member"
        },
        "association": {
          "type": "boolean"
        },
        "bindableType": {
          "type": "string",
          "enum": [
            "SINGULAR_ATTRIBUTE",
            "PLURAL_ATTRIBUTE",
            "ENTITY_TYPE"
          ]
        }
      }
    },
    "HibernateQueryCriteriaParser$WhenMappings": {
      "type": "object"
    },
    "NodeVaultService": {
      "type": "object",
      "properties": {
        "updates": {
          "$ref": "#/definitions/ObservableUpdateContractState"
        },
        "rawUpdates": {
          "$ref": "#/definitions/ObservableUpdateContractState"
        }
      }
    },
    "NodeVaultService$WhenMappings": {
      "type": "object"
    },
    "VaultSchema": {
      "type": "object"
    },
    "VaultSchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "PersistentParty": {
      "type": "object",
      "properties": {
        "compositeKey": {
          "$ref": "#/definitions/PersistentStateRefAndKey"
        },
        "x500Name": {
          "$ref": "#/definitions/AbstractParty"
        }
      }
    },
    "PersistentStateRefAndKey": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "publicKeyHash": {
          "type": "string"
        }
      }
    },
    "StateToExternalId": {
      "type": "object",
      "properties": {
        "compositeKey": {
          "$ref": "#/definitions/PersistentStateRefAndKey"
        },
        "externalId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "VaultFungibleStates": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "owner": {
          "$ref": "#/definitions/AbstractParty"
        },
        "quantity": {
          "type": "integer",
          "format": "int64"
        },
        "issuer": {
          "$ref": "#/definitions/AbstractParty"
        },
        "issuerRef": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "VaultLinearStates": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "externalId": {
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "VaultStates": {
      "type": "object",
      "properties": {
        "stateRef": {
          "$ref": "#/definitions/PersistentStateRef"
        },
        "notary": {
          "$ref": "#/definitions/Party"
        },
        "contractStateClassName": {
          "type": "string"
        },
        "stateStatus": {
          "type": "string",
          "enum": [
            "UNCONSUMED",
            "CONSUMED",
            "ALL"
          ]
        },
        "recordedTime": {
          "type": "integer",
          "format": "int64"
        },
        "consumedTime": {
          "type": "integer",
          "format": "int64"
        },
        "lockId": {
          "type": "string"
        },
        "relevancyStatus": {
          "type": "string",
          "enum": [
            "RELEVANT",
            "NOT_RELEVANT",
            "ALL"
          ]
        },
        "lockUpdateTime": {
          "type": "integer",
          "format": "int64"
        },
        "constraintType": {
          "type": "string",
          "enum": [
            "ALWAYS_ACCEPT",
            "HASH",
            "CZ_WHITELISTED",
            "SIGNATURE"
          ]
        },
        "constraintData": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "VaultTxnNote": {
      "type": "object",
      "properties": {
        "seqNo": {
          "type": "integer",
          "format": "int32"
        },
        "txId": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "AddressUtils": {
      "type": "object"
    },
    "AppendOnlyPersistentMap": {
      "type": "object",
      "properties": {
        "toPersistentEntityKey": {
          "$ref": "#/definitions/Function1ObjectObject"
        },
        "fromPersistentEntity": {
          "$ref": "#/definitions/Function1ObjectPairObjectObject"
        },
        "toPersistentEntity": {
          "$ref": "#/definitions/Function2ObjectObjectObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Function1ObjectObject": {
      "type": "object"
    },
    "Function1ObjectPairObjectObject": {
      "type": "object"
    },
    "Function2ObjectObjectObject": {
      "type": "object"
    },
    "Committed": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "present": {
          "type": "boolean"
        },
        "peekableValue": {
          "type": "object"
        }
      }
    },
    "InFlight": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "present": {
          "type": "boolean"
        },
        "peekableValue": {
          "type": "object"
        }
      }
    },
    "Missing": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "present": {
          "type": "boolean"
        },
        "peekableValue": {
          "type": "object"
        }
      }
    },
    "Unknown": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "resolved": {
          "type": "boolean"
        },
        "present": {
          "type": "boolean"
        },
        "peekableValue": {
          "type": "object"
        }
      }
    },
    "DefaultNamedCacheFactory": {
      "type": "object"
    },
    "DemoClock": {
      "type": "object",
      "properties": {
        "mutations": {
          "$ref": "#/definitions/ObservableLong"
        },
        "zone": {
          "$ref": "#/definitions/ZoneId"
        }
      }
    },
    "DiffPath": {
      "type": "object",
      "properties": {
        "path": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "a": {
          "type": "object"
        },
        "b": {
          "type": "object"
        }
      }
    },
    "Last": {
      "type": "object",
      "properties": {
        "a": {
          "type": "object"
        },
        "b": {
          "type": "object"
        }
      }
    },
    "DiffTree": {
      "type": "object"
    },
    "PairStringDiffTree": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "second": {
          "$ref": "#/definitions/DiffTree"
        }
      }
    },
    "InfrequentlyMutatedCache": {
      "type": "object"
    },
    "AtomicInteger": {
      "type": "object",
      "properties": {
        "andIncrement": {
          "type": "integer",
          "format": "int32"
        },
        "andDecrement": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Invalidated": {
      "type": "object",
      "properties": {
        "invalidators": {
          "$ref": "#/definitions/AtomicInteger"
        }
      }
    },
    "Valid": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        }
      }
    },
    "JVMAgentRegistry": {
      "type": "object",
      "properties": {
        "loadedAgents": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NamedThreadFactory": {
      "type": "object"
    },
    "NodeBuildProperties": {
      "type": "object",
      "properties": {
        "jolokia_AGENT_VERSION": {
          "type": "string"
        }
      }
    },
    "LoadingCache": {
      "type": "object"
    },
    "LoadingCacheObjectObject": {
      "type": "object"
    },
    "NonInvalidatingCache": {
      "type": "object",
      "properties": {
        "cache": {
          "$ref": "#/definitions/LoadingCacheObjectObject"
        }
      }
    },
    "NonInvalidatingCacheLoader": {
      "type": "object",
      "properties": {
        "loadFunction": {
          "$ref": "#/definitions/Function1ObjectObject"
        }
      }
    },
    "NonInvalidatingUnboundCache": {
      "type": "object",
      "properties": {
        "cache": {
          "$ref": "#/definitions/LoadingCacheObjectObject"
        }
      }
    },
    "NonInvalidatingWeightBasedCache": {
      "type": "object",
      "properties": {
        "cache": {
          "$ref": "#/definitions/LoadingCacheObjectObject"
        }
      }
    },
    "NotaryLoader": {
      "type": "object",
      "properties": {
        "builtInNotary": {
          "$ref": "#/definitions/CordappImpl"
        }
      }
    },
    "ObjectDiffer": {
      "type": "object"
    },
    "ExplicitRemoval": {
      "type": "object"
    },
    "PersistentMap$ExplicitRemoval$WhenMappings": {
      "type": "object"
    },
    "WeightBasedAppendOnlyPersistentMap": {
      "type": "object",
      "properties": {
        "toPersistentEntityKey": {
          "$ref": "#/definitions/Function1ObjectObject"
        },
        "fromPersistentEntity": {
          "$ref": "#/definitions/Function1ObjectPairObjectObject"
        },
        "toPersistentEntity": {
          "$ref": "#/definitions/Function2ObjectObjectObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Advertiser": {
      "type": "object"
    },
    "Appender": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "handler": {
          "$ref": "#/definitions/ErrorHandler"
        },
        "layout": {
          "$ref": "#/definitions/LayoutSerializable"
        },
        "state": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "STARTING",
            "STARTED",
            "STOPPING",
            "STOPPED"
          ]
        },
        "started": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        }
      }
    },
    "AppenderRef": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string"
        },
        "level": {
          "$ref": "#/definitions/Level"
        },
        "filter": {
          "$ref": "#/definitions/Filter"
        }
      }
    },
    "AsyncLoggerConfigDelegate": {
      "type": "object"
    },
    "AsyncLoggerContextSelectorNoThreadLocal": {
      "type": "object",
      "properties": {
        "loggerContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoggerContext"
          }
        }
      }
    },
    "Configuration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loggers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LoggerConfig"
          }
        },
        "rootLogger": {
          "$ref": "#/definitions/LoggerConfig"
        },
        "scheduler": {
          "$ref": "#/definitions/ConfigurationScheduler"
        },
        "appenders": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Appender"
          }
        },
        "asyncLoggerConfigDelegate": {
          "$ref": "#/definitions/AsyncLoggerConfigDelegate"
        },
        "pluginPackages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "strSubstitutor": {
          "$ref": "#/definitions/StrSubstitutor"
        },
        "advertiser": {
          "$ref": "#/definitions/Advertiser"
        },
        "shutdownHookEnabled": {
          "type": "boolean"
        },
        "shutdownTimeoutMillis": {
          "type": "integer",
          "format": "int64"
        },
        "configurationSource": {
          "$ref": "#/definitions/ConfigurationSource"
        },
        "customLevels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomLevelConfig"
          }
        },
        "scriptManager": {
          "$ref": "#/definitions/ScriptManager"
        },
        "watchManager": {
          "$ref": "#/definitions/WatchManager"
        },
        "nanoClock": {
          "$ref": "#/definitions/NanoClock"
        },
        "loggerContext": {
          "$ref": "#/definitions/LoggerContext"
        },
        "filter": {
          "$ref": "#/definitions/Filter"
        },
        "state": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "STARTING",
            "STARTED",
            "STOPPING",
            "STOPPED"
          ]
        },
        "started": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        }
      }
    },
    "ConfigurationScheduler": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "STARTING",
            "STARTED",
            "STOPPING",
            "STOPPED"
          ]
        },
        "executorServiceSet": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "started": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        },
        "starting": {
          "type": "boolean"
        },
        "stopping": {
          "type": "boolean"
        }
      }
    },
    "ConfigurationSource": {
      "type": "object",
      "properties": {
        "file": {
          "type": "file"
        },
        "url": {
          "type": "string",
          "format": "url"
        },
        "location": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "uri": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "CustomLevelConfig": {
      "type": "object",
      "properties": {
        "levelName": {
          "type": "string"
        },
        "intLevel": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ErrorHandler": {
      "type": "object"
    },
    "FileWatcher": {
      "type": "object"
    },
    "IteratorFilter": {
      "type": "object"
    },
    "Layout": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "header": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "contentFormat": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "footer": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "LayoutSerializable": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "header": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "contentFormat": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "footer": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "LogEventFactory": {
      "type": "object"
    },
    "LoggerConfig": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "STARTING",
            "STARTED",
            "STOPPING",
            "STOPPED"
          ]
        },
        "filter": {
          "$ref": "#/definitions/Filter"
        },
        "appenderRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppenderRef"
          }
        },
        "appenders": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Appender"
          }
        },
        "name": {
          "type": "string"
        },
        "logEventFactory": {
          "$ref": "#/definitions/LogEventFactory"
        },
        "level": {
          "$ref": "#/definitions/Level"
        },
        "additive": {
          "type": "boolean"
        },
        "includeLocation": {
          "type": "boolean"
        },
        "parent": {
          "$ref": "#/definitions/LoggerConfig"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "propertiesRequireLookup": {
          "type": "boolean"
        },
        "reliabilityStrategy": {
          "$ref": "#/definitions/ReliabilityStrategy"
        },
        "propertyList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        },
        "started": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "starting": {
          "type": "boolean"
        },
        "stopping": {
          "type": "boolean"
        }
      }
    },
    "LoggerContext": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "STARTING",
            "STARTED",
            "STOPPING",
            "STOPPED"
          ]
        },
        "configuration": {
          "$ref": "#/definitions/Configuration"
        },
        "externalContext": {
          "type": "object"
        },
        "configLocation": {
          "type": "string",
          "format": "uri"
        },
        "name": {
          "type": "string"
        },
        "loggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Logger"
          }
        },
        "rootLogger": {
          "$ref": "#/definitions/Logger"
        },
        "initialized": {
          "type": "boolean"
        },
        "started": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        },
        "starting": {
          "type": "boolean"
        },
        "stopping": {
          "type": "boolean"
        }
      }
    },
    "MessageFactory": {
      "type": "object"
    },
    "NanoClock": {
      "type": "object"
    },
    "ReliabilityStrategy": {
      "type": "object"
    },
    "ScriptManager": {
      "type": "object"
    },
    "StrLookup": {
      "type": "object"
    },
    "StrMatcher": {
      "type": "object"
    },
    "StrSubstitutor": {
      "type": "object",
      "properties": {
        "escapeChar": {
          "type": "string"
        },
        "valueDelimiterMatcher": {
          "$ref": "#/definitions/StrMatcher"
        },
        "variableResolver": {
          "$ref": "#/definitions/StrLookup"
        },
        "enableSubstitutionInVariables": {
          "type": "boolean"
        },
        "variablePrefixMatcher": {
          "$ref": "#/definitions/StrMatcher"
        },
        "variableSuffixMatcher": {
          "$ref": "#/definitions/StrMatcher"
        }
      }
    },
    "WatchManager": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "INITIALIZED",
            "STARTING",
            "STARTED",
            "STOPPING",
            "STOPPED"
          ]
        },
        "watchers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FileWatcher"
          }
        },
        "intervalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean"
        },
        "started": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        },
        "starting": {
          "type": "boolean"
        },
        "stopping": {
          "type": "boolean"
        }
      }
    },
    "CertificateRequestException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "CertificateResponse": {
      "type": "object",
      "properties": {
        "pollInterval": {
          "$ref": "#/definitions/Duration"
        },
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/X509Certificate"
          }
        }
      }
    },
    "HTTPNetworkRegistrationService": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/NetworkServicesConfig"
        },
        "versionInfo": {
          "$ref": "#/definitions/VersionInfo"
        }
      }
    },
    "NetworkRegistrationHelper": {
      "type": "object"
    },
    "NodeRegistrationException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "NodeRegistrationHelper": {
      "type": "object"
    },
    "RPCApi": {
      "type": "object",
      "properties": {
        "rpc_CLIENT_BINDING_REMOVAL_FILTER_EXPRESSION": {
          "type": "string"
        },
        "rpc_CLIENT_BINDING_ADDITION_FILTER_EXPRESSION": {
          "type": "string"
        }
      }
    },
    "RPCApi$ClientToServer$Companion$WhenMappings": {
      "type": "object"
    },
    "ObservablesClosed": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvocationId"
          }
        }
      }
    },
    "RpcRequest": {
      "type": "object",
      "properties": {
        "clientAddress": {
          "$ref": "#/definitions/SimpleString"
        },
        "methodName": {
          "type": "string"
        },
        "serialisedArguments": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "replyId": {
          "$ref": "#/definitions/InvocationId"
        },
        "sessionId": {
          "$ref": "#/definitions/SessionId"
        },
        "externalTrace": {
          "$ref": "#/definitions/Trace"
        },
        "impersonatedActor": {
          "$ref": "#/definitions/Actor"
        }
      }
    },
    "RpcRequestOrObservableIdKey": {
      "type": "object"
    },
    "RPCApi$ServerToClient$Companion$WhenMappings": {
      "type": "object"
    },
    "FailedToDeserializeReply": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "id": {
          "$ref": "#/definitions/InvocationId"
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "OnNext",
            "OnError",
            "OnCompleted"
          ]
        },
        "throwable": {
          "$ref": "#/definitions/Throwable"
        },
        "value": {
          "type": "object"
        },
        "onNext": {
          "type": "boolean"
        },
        "onError": {
          "type": "boolean"
        },
        "onCompleted": {
          "type": "boolean"
        }
      }
    },
    "NotificationObject": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "OnNext",
            "OnError",
            "OnCompleted"
          ]
        },
        "throwable": {
          "$ref": "#/definitions/Throwable"
        },
        "value": {
          "type": "object"
        },
        "onNext": {
          "type": "boolean"
        },
        "onError": {
          "type": "boolean"
        },
        "onCompleted": {
          "type": "boolean"
        }
      }
    },
    "Observation": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/InvocationId"
        },
        "content": {
          "$ref": "#/definitions/NotificationObject"
        },
        "deduplicationIdentity": {
          "type": "string"
        }
      }
    },
    "DuplicateAttachmentException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "file": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "otherFile": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "DuplicateContractClassException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "InternalNodeException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "errorId": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "NonRpcFlowException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "OutdatedNetworkParameterHashException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "RejectedCommandException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "BFTSmart": {
      "type": "object"
    },
    "SignedData": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "sig": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "SignedDataNotaryError": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        },
        "sig": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "Signatures": {
      "type": "object",
      "properties": {
        "txSignatures": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "736F6D654279746573",
            "description": "Hex encoded Byte Array"
          }
        }
      }
    },
    "CommitRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/NotarisationPayload"
        },
        "callerIdentity": {
          "$ref": "#/definitions/Party"
        }
      }
    },
    "Signature": {
      "type": "object",
      "properties": {
        "txSignature": {
          "type": "string",
          "description": "Hex encoded Byte Array"
        }
      }
    },
    "BFTSmartConfigInternal": {
      "type": "object",
      "properties": {
        "exposeRaces": {
          "type": "boolean"
        },
        "clusterSize": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "$ref": "#/definitions/Path"
        }
      }
    },
    "BFTSmartNotarySchema": {
      "type": "object"
    },
    "BFTSmartNotarySchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "BFTSmartNotaryService": {
      "type": "object",
      "properties": {
        "services": {
          "$ref": "#/definitions/ServiceHubInternal"
        },
        "notaryIdentityKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "RaftNotarySchema": {
      "type": "object"
    },
    "RaftNotarySchemaV1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "migrationResource": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "mappedTypes": {
          "$ref": "#/definitions/IterableClass"
        }
      }
    },
    "RaftNotaryService": {
      "type": "object",
      "properties": {
        "services": {
          "$ref": "#/definitions/ServiceHubInternal"
        },
        "notaryIdentityKey": {
          "type": "string",
          "description": "Base 58 Encoded Public Key"
        }
      }
    },
    "RaftTransactionCommitLog": {
      "type": "object"
    },
    "Commands": {
      "type": "object"
    },
    "Get": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/StateRef"
        }
      }
    },
    "CordaKryoSerializer": {
      "type": "object"
    },
    "RaftUniquenessProvider": {
      "type": "object"
    },
    "AuthenticationPlugin": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "AuthenticationPluginString": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "CordaAuthenticationPlugin": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "configurationCapabilities": {
          "$ref": "#/definitions/IterablePropertyDescriptorObject"
        },
        "name": {
          "type": "string"
        },
        "implementation": {
          "$ref": "#/definitions/AuthenticationPluginString"
        }
      }
    },
    "IterablePropertyDescriptorObject": {
      "type": "object"
    },
    "ANSIProgressRenderer": {
      "type": "object"
    },
    "AnnotationIntrospector": {
      "type": "object"
    },
    "ArrayBuilders": {
      "type": "object",
      "properties": {
        "booleanBuilder": {
          "$ref": "#/definitions/BooleanBuilder"
        },
        "byteBuilder": {
          "$ref": "#/definitions/ByteBuilder"
        },
        "shortBuilder": {
          "$ref": "#/definitions/ShortBuilder"
        },
        "intBuilder": {
          "$ref": "#/definitions/IntBuilder"
        },
        "longBuilder": {
          "$ref": "#/definitions/LongBuilder"
        },
        "floatBuilder": {
          "$ref": "#/definitions/FloatBuilder"
        },
        "doubleBuilder": {
          "$ref": "#/definitions/DoubleBuilder"
        }
      }
    },
    "Base64Variant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "paddingChar": {
          "type": "string"
        },
        "paddingByte": {
          "type": "string",
          "format": "byte"
        },
        "maxLineLength": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BooleanBuilder": {
      "type": "object"
    },
    "ByteBuilder": {
      "type": "object"
    },
    "CharacterEscapes": {
      "type": "object",
      "properties": {
        "escapeCodesForAscii": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ClassIntrospector": {
      "type": "object"
    },
    "ContextAttributes": {
      "type": "object"
    },
    "CordaSSHAuthInfo": {
      "type": "object",
      "properties": {
        "successful": {
          "type": "boolean"
        },
        "rpcOps": {
          "$ref": "#/definitions/CordaRPCOps"
        },
        "ansiProgressRenderer": {
          "$ref": "#/definitions/ANSIProgressRenderer"
        },
        "ssh": {
          "type": "boolean"
        },
        "yamlInputMapper": {
          "$ref": "#/definitions/ObjectMapper"
        }
      }
    },
    "DateFormat": {
      "type": "object",
      "properties": {
        "calendar": {
          "type": "string",
          "format": "date-time"
        },
        "numberFormat": {
          "$ref": "#/definitions/NumberFormat"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "lenient": {
          "type": "boolean"
        }
      }
    },
    "DeserializationConfig": {
      "type": "object",
      "properties": {
        "problemHandlers": {
          "$ref": "#/definitions/LinkedNodeDeserializationProblemHandler"
        },
        "nodeFactory": {
          "$ref": "#/definitions/JsonNodeFactory"
        },
        "deserializationFeatures": {
          "type": "integer",
          "format": "int32"
        },
        "attributes": {
          "$ref": "#/definitions/ContextAttributes"
        },
        "subtypeResolver": {
          "$ref": "#/definitions/SubtypeResolver"
        },
        "defaultVisibilityChecker": {
          "$ref": "#/definitions/VisibilityCheckerObject"
        },
        "defaultSetterInfo": {
          "$ref": "#/definitions/Value"
        },
        "defaultMergeable": {
          "type": "boolean"
        },
        "rootName": {
          "type": "string"
        },
        "fullRootName": {
          "$ref": "#/definitions/PropertyName"
        },
        "defaultPropertyInclusion": {
          "$ref": "#/definitions/Value"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "annotationProcessingEnabled": {
          "type": "boolean"
        },
        "classIntrospector": {
          "$ref": "#/definitions/ClassIntrospector"
        },
        "propertyNamingStrategy": {
          "$ref": "#/definitions/PropertyNamingStrategy"
        },
        "handlerInstantiator": {
          "$ref": "#/definitions/HandlerInstantiator"
        },
        "dateFormat": {
          "$ref": "#/definitions/DateFormat"
        },
        "base64Variant": {
          "$ref": "#/definitions/Base64Variant"
        },
        "typeFactory": {
          "$ref": "#/definitions/TypeFactory"
        },
        "annotationIntrospector": {
          "$ref": "#/definitions/AnnotationIntrospector"
        }
      }
    },
    "DeserializationContext": {
      "type": "object",
      "properties": {
        "factory": {
          "$ref": "#/definitions/DeserializerFactory"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "base64Variant": {
          "$ref": "#/definitions/Base64Variant"
        },
        "nodeFactory": {
          "$ref": "#/definitions/JsonNodeFactory"
        },
        "parser": {
          "$ref": "#/definitions/JsonParser"
        },
        "contextualType": {
          "$ref": "#/definitions/JavaType"
        },
        "arrayBuilders": {
          "$ref": "#/definitions/ArrayBuilders"
        },
        "typeFactory": {
          "$ref": "#/definitions/TypeFactory"
        },
        "deserializationFeatures": {
          "type": "integer",
          "format": "int32"
        },
        "annotationIntrospector": {
          "$ref": "#/definitions/AnnotationIntrospector"
        },
        "config": {
          "$ref": "#/definitions/DeserializationConfig"
        }
      }
    },
    "DeserializerFactory": {
      "type": "object"
    },
    "DoubleBuilder": {
      "type": "object"
    },
    "FilterProvider": {
      "type": "object"
    },
    "FloatBuilder": {
      "type": "object"
    },
    "FormatSchema": {
      "type": "object",
      "properties": {
        "schemaType": {
          "type": "string"
        }
      }
    },
    "HandlerInstantiator": {
      "type": "object"
    },
    "InjectableValues": {
      "type": "object"
    },
    "InputDecorator": {
      "type": "object"
    },
    "IntBuilder": {
      "type": "object"
    },
    "JsonFactory": {
      "type": "object",
      "properties": {
        "codec": {
          "$ref": "#/definitions/ObjectCodec"
        },
        "formatName": {
          "type": "string"
        },
        "inputDecorator": {
          "$ref": "#/definitions/InputDecorator"
        },
        "characterEscapes": {
          "$ref": "#/definitions/CharacterEscapes"
        },
        "outputDecorator": {
          "$ref": "#/definitions/OutputDecorator"
        },
        "rootValueSeparator": {
          "type": "string"
        }
      }
    },
    "JsonGenerator": {
      "type": "object",
      "properties": {
        "closed": {
          "type": "boolean"
        },
        "schema": {
          "$ref": "#/definitions/FormatSchema"
        },
        "codec": {
          "$ref": "#/definitions/ObjectCodec"
        },
        "characterEscapes": {
          "$ref": "#/definitions/CharacterEscapes"
        },
        "highestEscapedChar": {
          "type": "integer",
          "format": "int32"
        },
        "outputTarget": {
          "type": "object"
        },
        "currentValue": {
          "type": "object"
        },
        "featureMask": {
          "type": "integer",
          "format": "int32"
        },
        "formatFeatures": {
          "type": "integer",
          "format": "int32"
        },
        "outputBuffered": {
          "type": "integer",
          "format": "int32"
        },
        "outputContext": {
          "$ref": "#/definitions/JsonStreamContext"
        },
        "prettyPrinter": {
          "$ref": "#/definitions/PrettyPrinter"
        }
      }
    },
    "JsonLocation": {
      "type": "object",
      "properties": {
        "byteOffset": {
          "type": "integer",
          "format": "int64"
        },
        "charOffset": {
          "type": "integer",
          "format": "int64"
        },
        "columnNr": {
          "type": "integer",
          "format": "int32"
        },
        "sourceRef": {
          "type": "object"
        },
        "lineNr": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "JsonNodeFactory": {
      "type": "object"
    },
    "JsonParser": {
      "type": "object",
      "properties": {
        "naN": {
          "type": "boolean"
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "floatValue": {
          "type": "number",
          "format": "float"
        },
        "intValue": {
          "type": "integer",
          "format": "int32"
        },
        "closed": {
          "type": "boolean"
        },
        "text": {
          "type": "string"
        },
        "expectedStartArrayToken": {
          "type": "boolean"
        },
        "schema": {
          "$ref": "#/definitions/FormatSchema"
        },
        "textLength": {
          "type": "integer",
          "format": "int32"
        },
        "numberType": {
          "type": "string",
          "enum": [
            "INT",
            "LONG",
            "BIG_INTEGER",
            "FLOAT",
            "DOUBLE",
            "BIG_DECIMAL"
          ]
        },
        "typeId": {
          "type": "object"
        },
        "currentLocation": {
          "$ref": "#/definitions/JsonLocation"
        },
        "tokenLocation": {
          "$ref": "#/definitions/JsonLocation"
        },
        "codec": {
          "$ref": "#/definitions/ObjectCodec"
        },
        "currentName": {
          "type": "string"
        },
        "nonBlockingInputFeeder": {
          "$ref": "#/definitions/NonBlockingInputFeeder"
        },
        "inputSource": {
          "type": "object"
        },
        "currentValue": {
          "type": "object"
        },
        "parsingContext": {
          "$ref": "#/definitions/JsonStreamContext"
        },
        "featureMask": {
          "type": "integer",
          "format": "int32"
        },
        "formatFeatures": {
          "type": "integer",
          "format": "int32"
        },
        "expectedStartObjectToken": {
          "type": "boolean"
        },
        "lastClearedToken": {
          "type": "string",
          "enum": [
            "NOT_AVAILABLE",
            "START_OBJECT",
            "END_OBJECT",
            "START_ARRAY",
            "END_ARRAY",
            "FIELD_NAME",
            "VALUE_EMBEDDED_OBJECT",
            "VALUE_STRING",
            "VALUE_NUMBER_INT",
            "VALUE_NUMBER_FLOAT",
            "VALUE_TRUE",
            "VALUE_FALSE",
            "VALUE_NULL"
          ]
        },
        "textCharacters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "textOffset": {
          "type": "integer",
          "format": "int32"
        },
        "byteValue": {
          "type": "string",
          "format": "byte"
        },
        "shortValue": {
          "type": "integer",
          "format": "int32"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "binaryValue": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "valueAsDouble": {
          "type": "number",
          "format": "double"
        },
        "valueAsBoolean": {
          "type": "boolean"
        },
        "objectId": {
          "type": "object"
        },
        "currentToken": {
          "type": "string",
          "enum": [
            "NOT_AVAILABLE",
            "START_OBJECT",
            "END_OBJECT",
            "START_ARRAY",
            "END_ARRAY",
            "FIELD_NAME",
            "VALUE_EMBEDDED_OBJECT",
            "VALUE_STRING",
            "VALUE_NUMBER_INT",
            "VALUE_NUMBER_FLOAT",
            "VALUE_TRUE",
            "VALUE_FALSE",
            "VALUE_NULL"
          ]
        },
        "valueAsInt": {
          "type": "integer",
          "format": "int32"
        },
        "valueAsLong": {
          "type": "integer",
          "format": "int64"
        },
        "valueAsString": {
          "type": "string"
        },
        "bigIntegerValue": {
          "type": "integer"
        },
        "currentTokenId": {
          "type": "integer",
          "format": "int32"
        },
        "decimalValue": {
          "type": "number"
        },
        "longValue": {
          "type": "integer",
          "format": "int64"
        },
        "embeddedObject": {
          "type": "object"
        },
        "numberValue": {
          "$ref": "#/definitions/Number"
        }
      }
    },
    "JsonStreamContext": {
      "type": "object",
      "properties": {
        "parent": {
          "$ref": "#/definitions/JsonStreamContext"
        },
        "currentName": {
          "type": "string"
        },
        "currentValue": {
          "type": "object"
        },
        "typeDesc": {
          "type": "string"
        },
        "entryCount": {
          "type": "integer",
          "format": "int32"
        },
        "currentIndex": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinkedNode": {
      "type": "object"
    },
    "LinkedNodeDeserializationProblemHandler": {
      "type": "object"
    },
    "LongBuilder": {
      "type": "object"
    },
    "NonBlockingInputFeeder": {
      "type": "object"
    },
    "Number": {
      "type": "object"
    },
    "NumberFormat": {
      "type": "object",
      "properties": {
        "groupingUsed": {
          "type": "boolean"
        },
        "parseIntegerOnly": {
          "type": "boolean"
        },
        "maximumIntegerDigits": {
          "type": "integer",
          "format": "int32"
        },
        "minimumIntegerDigits": {
          "type": "integer",
          "format": "int32"
        },
        "maximumFractionDigits": {
          "type": "integer",
          "format": "int32"
        },
        "minimumFractionDigits": {
          "type": "integer",
          "format": "int32"
        },
        "roundingMode": {
          "type": "string",
          "enum": [
            "UP",
            "DOWN",
            "CEILING",
            "FLOOR",
            "HALF_UP",
            "HALF_DOWN",
            "HALF_EVEN",
            "UNNECESSARY"
          ]
        },
        "currency": {
          "type": "string",
          "description": "3 digit ISO 4217 code of the currency"
        }
      }
    },
    "ObjectCodec": {
      "type": "object",
      "properties": {
        "factory": {
          "$ref": "#/definitions/JsonFactory"
        },
        "jsonFactory": {
          "$ref": "#/definitions/JsonFactory"
        }
      }
    },
    "ObjectMapper": {
      "type": "object",
      "properties": {
        "factory": {
          "$ref": "#/definitions/JsonFactory"
        },
        "propertyNamingStrategy": {
          "$ref": "#/definitions/PropertyNamingStrategy"
        },
        "subtypeResolver": {
          "$ref": "#/definitions/SubtypeResolver"
        },
        "dateFormat": {
          "$ref": "#/definitions/DateFormat"
        },
        "nodeFactory": {
          "$ref": "#/definitions/JsonNodeFactory"
        },
        "serializationConfig": {
          "$ref": "#/definitions/SerializationConfig"
        },
        "deserializationConfig": {
          "$ref": "#/definitions/DeserializationConfig"
        },
        "deserializationContext": {
          "$ref": "#/definitions/DeserializationContext"
        },
        "serializerFactory": {
          "$ref": "#/definitions/SerializerFactory"
        },
        "serializerProvider": {
          "$ref": "#/definitions/SerializerProvider"
        },
        "serializerProviderInstance": {
          "$ref": "#/definitions/SerializerProvider"
        },
        "visibilityChecker": {
          "$ref": "#/definitions/VisibilityCheckerObject"
        },
        "typeFactory": {
          "$ref": "#/definitions/TypeFactory"
        },
        "jsonFactory": {
          "$ref": "#/definitions/JsonFactory"
        },
        "injectableValues": {
          "$ref": "#/definitions/InjectableValues"
        }
      }
    },
    "OutputDecorator": {
      "type": "object"
    },
    "PrettyPrinter": {
      "type": "object"
    },
    "PropertyNamingStrategy": {
      "type": "object"
    },
    "SerializationConfig": {
      "type": "object",
      "properties": {
        "filterProvider": {
          "$ref": "#/definitions/FilterProvider"
        },
        "serializationInclusion": {
          "type": "string",
          "enum": [
            "ALWAYS",
            "NON_NULL",
            "NON_ABSENT",
            "NON_EMPTY",
            "NON_DEFAULT",
            "CUSTOM",
            "USE_DEFAULTS"
          ]
        },
        "serializationFeatures": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPrettyPrinter": {
          "$ref": "#/definitions/PrettyPrinter"
        },
        "attributes": {
          "$ref": "#/definitions/ContextAttributes"
        },
        "subtypeResolver": {
          "$ref": "#/definitions/SubtypeResolver"
        },
        "defaultVisibilityChecker": {
          "$ref": "#/definitions/VisibilityCheckerObject"
        },
        "defaultSetterInfo": {
          "$ref": "#/definitions/Value"
        },
        "defaultMergeable": {
          "type": "boolean"
        },
        "rootName": {
          "type": "string"
        },
        "fullRootName": {
          "$ref": "#/definitions/PropertyName"
        },
        "defaultPropertyInclusion": {
          "$ref": "#/definitions/Value"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "annotationProcessingEnabled": {
          "type": "boolean"
        },
        "classIntrospector": {
          "$ref": "#/definitions/ClassIntrospector"
        },
        "propertyNamingStrategy": {
          "$ref": "#/definitions/PropertyNamingStrategy"
        },
        "handlerInstantiator": {
          "$ref": "#/definitions/HandlerInstantiator"
        },
        "dateFormat": {
          "$ref": "#/definitions/DateFormat"
        },
        "base64Variant": {
          "$ref": "#/definitions/Base64Variant"
        },
        "typeFactory": {
          "$ref": "#/definitions/TypeFactory"
        },
        "annotationIntrospector": {
          "$ref": "#/definitions/AnnotationIntrospector"
        }
      }
    },
    "SerializerFactory": {
      "type": "object"
    },
    "SerializerProvider": {
      "type": "object",
      "properties": {
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "generator": {
          "$ref": "#/definitions/JsonGenerator"
        },
        "defaultNullKeySerializer": {
          "$ref": "#/definitions/JsonSerializerObject"
        },
        "filterProvider": {
          "$ref": "#/definitions/FilterProvider"
        },
        "defaultNullValueSerializer": {
          "$ref": "#/definitions/JsonSerializerObject"
        },
        "typeFactory": {
          "$ref": "#/definitions/TypeFactory"
        },
        "annotationIntrospector": {
          "$ref": "#/definitions/AnnotationIntrospector"
        },
        "config": {
          "$ref": "#/definitions/SerializationConfig"
        }
      }
    },
    "ShortBuilder": {
      "type": "object"
    },
    "SubtypeResolver": {
      "type": "object"
    },
    "VisibilityChecker": {
      "type": "object"
    },
    "VisibilityCheckerObject": {
      "type": "object"
    },
    "FlowShellCommand": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/RuntimeContext"
        },
        "log": {
          "$ref": "#/definitions/Logger"
        },
        "unmatched": {
          "type": "string"
        },
        "ssh": {
          "type": "boolean"
        }
      }
    },
    "RuntimeContext": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "session": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "FlowWatchPrintingSubscriber": {
      "type": "object",
      "properties": {
        "future": {
          "$ref": "#/definitions/OpenFutureUnit"
        },
        "unsubscribed": {
          "type": "boolean"
        }
      }
    },
    "OpenFutureUnit": {
      "type": "object",
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "HashLookupShellCommand": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/RuntimeContext"
        },
        "log": {
          "$ref": "#/definitions/Logger"
        },
        "unmatched": {
          "type": "string"
        },
        "ssh": {
          "type": "boolean"
        }
      }
    },
    "InputStreamDeserializer": {
      "type": "object",
      "properties": {
        "cachable": {
          "type": "boolean"
        },
        "delegatee": {
          "$ref": "#/definitions/JsonDeserializerObject"
        },
        "knownPropertyNames": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nullValue": {
          "$ref": "#/definitions/InputStream"
        },
        "nullAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyValue": {
          "type": "object"
        },
        "objectIdReader": {
          "$ref": "#/definitions/ObjectIdReader"
        }
      }
    },
    "InvocationContextObject": {
      "type": "object",
      "properties": {
        "writer": {
          "$ref": "#/definitions/RenderPrintWriter"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "session": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RenderPrintWriter": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      }
    },
    "CountDownLatch": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InteractiveShell": {
      "type": "object",
      "properties": {
        "latch": {
          "$ref": "#/definitions/CountDownLatch"
        }
      }
    },
    "NoApplicableConstructor": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "originalExceptionClassName": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "originalMessage": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "IterableCRaSHPluginObject": {
      "type": "object"
    },
    "PluginContext": {
      "type": "object",
      "properties": {
        "loader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "version": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "executor": {
          "$ref": "#/definitions/ExecutorService"
        },
        "propertyManager": {
          "$ref": "#/definitions/PropertyManager"
        },
        "plugins": {
          "$ref": "#/definitions/IterableCRaSHPluginObject"
        }
      }
    },
    "PropertyManager": {
      "type": "object"
    },
    "ShellLifecycle": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/PluginContext"
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InteractiveShell$WhenMappings": {
      "type": "object"
    },
    "InteractiveShellCommand": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/RuntimeContext"
        },
        "log": {
          "$ref": "#/definitions/Logger"
        },
        "unmatched": {
          "type": "string"
        },
        "ssh": {
          "type": "boolean"
        }
      }
    },
    "ObservableSerializer": {
      "type": "object",
      "properties": {
        "delegatee": {
          "$ref": "#/definitions/JsonSerializerObject"
        },
        "unwrappingSerializer": {
          "type": "boolean"
        }
      }
    },
    "OutputFormatCommand": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/RuntimeContext"
        },
        "log": {
          "$ref": "#/definitions/Logger"
        },
        "unmatched": {
          "type": "string"
        },
        "ssh": {
          "type": "boolean"
        }
      }
    },
    "RunShellCommand": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/RuntimeContext"
        },
        "log": {
          "$ref": "#/definitions/Logger"
        },
        "unmatched": {
          "type": "string"
        },
        "ssh": {
          "type": "boolean"
        }
      }
    },
    "ShellConfiguration": {
      "type": "object",
      "properties": {
        "commandsDirectory": {
          "$ref": "#/definitions/Path"
        },
        "cordappsDirectory": {
          "$ref": "#/definitions/Path"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "hostAndPort": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "ssl": {
          "$ref": "#/definitions/ClientRpcSslOptions"
        },
        "sshdPort": {
          "type": "integer",
          "format": "int32"
        },
        "sshHostKeyDirectory": {
          "$ref": "#/definitions/Path"
        },
        "noLocalShell": {
          "type": "boolean"
        }
      }
    },
    "StartShellCommand": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/RuntimeContext"
        },
        "log": {
          "$ref": "#/definitions/Logger"
        },
        "unmatched": {
          "type": "string"
        },
        "ssh": {
          "type": "boolean"
        }
      }
    },
    "UniqueIdentifierDeserializer": {
      "type": "object",
      "properties": {
        "cachable": {
          "type": "boolean"
        },
        "delegatee": {
          "$ref": "#/definitions/JsonDeserializerObject"
        },
        "knownPropertyNames": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nullValue": {
          "$ref": "#/definitions/UniqueIdentifier"
        },
        "nullAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyAccessPattern": {
          "type": "string",
          "enum": [
            "ALWAYS_NULL",
            "CONSTANT",
            "DYNAMIC"
          ]
        },
        "emptyValue": {
          "type": "object"
        },
        "objectIdReader": {
          "$ref": "#/definitions/ObjectIdReader"
        }
      }
    },
    "InputTreeStep": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ProgressStep": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "parentIndex": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CRaSHANSIProgressRenderer": {
      "type": "object",
      "properties": {
        "renderPrintWriter": {
          "$ref": "#/definitions/RenderPrintWriter"
        }
      }
    },
    "StdoutANSIProgressRenderer": {
      "type": "object"
    },
    "ArgsParser": {
      "type": "object"
    },
    "CmdLineOptions": {
      "type": "object",
      "properties": {
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        },
        "configFile": {
          "$ref": "#/definitions/Path"
        },
        "help": {
          "type": "boolean"
        },
        "loggingLevel": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE"
          ]
        },
        "logToConsole": {
          "type": "boolean"
        }
      }
    },
    "WebServer": {
      "type": "object"
    },
    "WebServerConfig": {
      "type": "object",
      "properties": {
        "runAs": {
          "$ref": "#/definitions/User"
        },
        "baseDirectory": {
          "$ref": "#/definitions/Path"
        },
        "config": {
          "$ref": "#/definitions/Config"
        },
        "trustStorePath": {
          "type": "string"
        },
        "trustStorePassword": {
          "type": "string"
        },
        "myLegalName": {
          "type": "string"
        },
        "keyStorePassword": {
          "type": "string"
        },
        "keyStorePath": {
          "type": "string"
        },
        "rpcAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "webAddress": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "useHTTPS": {
          "type": "boolean"
        }
      }
    },
    "AllDeals": {
      "type": "object"
    },
    "Deal": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string"
        }
      }
    },
    "Criteria": {
      "type": "object"
    },
    "CordaConverterProvider": {
      "type": "object"
    },
    "CordaX500NameConverter": {
      "type": "object"
    },
    "APIServerImpl": {
      "type": "object",
      "properties": {
        "rpcOps": {
          "$ref": "#/definitions/CordaRPCOps"
        }
      }
    },
    "AllExceptionMapper": {
      "type": "object"
    },
    "NodeWebServer": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/NetworkHostAndPort"
        },
        "config": {
          "$ref": "#/definitions/WebServerConfig"
        },
        "pluginRegistries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebServerPluginRegistry"
          }
        }
      }
    },
    "WebServerPluginRegistry": {
      "type": "object",
      "properties": {
        "webApis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionCordaRPCOpsObject"
          }
        },
        "staticServeDirs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AttachmentDownloadServlet": {
      "type": "object",
      "properties": {
        "initParameterNames": {
          "$ref": "#/definitions/EnumerationString"
        },
        "servletConfig": {
          "$ref": "#/definitions/ServletConfig"
        },
        "servletInfo": {
          "type": "string"
        },
        "servletContext": {
          "$ref": "#/definitions/ServletContext"
        },
        "servletName": {
          "type": "string"
        }
      }
    },
    "EnumerationServlet": {
      "type": "object"
    },
    "FilterRegistration": {
      "type": "object",
      "properties": {
        "urlPatternMappings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "servletNameMappings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "initParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "JspConfigDescriptor": {
      "type": "object",
      "properties": {
        "jspPropertyGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JspPropertyGroupDescriptor"
          }
        },
        "taglibs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaglibDescriptor"
          }
        }
      }
    },
    "JspPropertyGroupDescriptor": {
      "type": "object",
      "properties": {
        "buffer": {
          "type": "string"
        },
        "deferredSyntaxAllowedAsLiteral": {
          "type": "string"
        },
        "urlPatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "elIgnored": {
          "type": "string"
        },
        "isXml": {
          "type": "string"
        },
        "pageEncoding": {
          "type": "string"
        },
        "scriptingInvalid": {
          "type": "string"
        },
        "includePreludes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeCodas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trimDirectiveWhitespaces": {
          "type": "string"
        },
        "defaultContentType": {
          "type": "string"
        },
        "errorOnUndeclaredNamespace": {
          "type": "string"
        }
      }
    },
    "ServletConfig": {
      "type": "object",
      "properties": {
        "initParameterNames": {
          "$ref": "#/definitions/EnumerationString"
        },
        "servletContext": {
          "$ref": "#/definitions/ServletContext"
        },
        "servletName": {
          "type": "string"
        }
      }
    },
    "ServletContext": {
      "type": "object",
      "properties": {
        "classLoader": {
          "$ref": "#/definitions/ClassLoader"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "initParameterNames": {
          "$ref": "#/definitions/EnumerationString"
        },
        "minorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "effectiveMajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "effectiveMinorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "servlets": {
          "$ref": "#/definitions/EnumerationServlet"
        },
        "servletNames": {
          "$ref": "#/definitions/EnumerationString"
        },
        "serverInfo": {
          "type": "string"
        },
        "attributeNames": {
          "$ref": "#/definitions/EnumerationString"
        },
        "servletContextName": {
          "type": "string"
        },
        "servletRegistrations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ServletRegistration"
          }
        },
        "filterRegistrations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FilterRegistration"
          }
        },
        "sessionCookieConfig": {
          "$ref": "#/definitions/SessionCookieConfig"
        },
        "defaultSessionTrackingModes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "COOKIE",
              "URL",
              "SSL"
            ]
          }
        },
        "effectiveSessionTrackingModes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "COOKIE",
              "URL",
              "SSL"
            ]
          }
        },
        "jspConfigDescriptor": {
          "$ref": "#/definitions/JspConfigDescriptor"
        },
        "virtualServerName": {
          "type": "string"
        },
        "contextPath": {
          "type": "string"
        }
      }
    },
    "ServletRegistration": {
      "type": "object",
      "properties": {
        "runAsRole": {
          "type": "string"
        },
        "mappings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "initParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SessionCookieConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "secure": {
          "type": "boolean"
        },
        "maxAge": {
          "type": "integer",
          "format": "int32"
        },
        "httpOnly": {
          "type": "boolean"
        }
      }
    },
    "TaglibDescriptor": {
      "type": "object",
      "properties": {
        "taglibURI": {
          "type": "string"
        },
        "taglibLocation": {
          "type": "string"
        }
      }
    },
    "CorDappInfoServlet": {
      "type": "object",
      "properties": {
        "plugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebServerPluginRegistry"
          }
        },
        "rpc": {
          "$ref": "#/definitions/CordaRPCOps"
        },
        "initParameterNames": {
          "$ref": "#/definitions/EnumerationString"
        },
        "servletConfig": {
          "$ref": "#/definitions/ServletConfig"
        },
        "servletInfo": {
          "type": "string"
        },
        "servletContext": {
          "$ref": "#/definitions/ServletContext"
        },
        "servletName": {
          "type": "string"
        }
      }
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "DataUploadServlet": {
      "type": "object",
      "properties": {
        "initParameterNames": {
          "$ref": "#/definitions/EnumerationString"
        },
        "servletConfig": {
          "$ref": "#/definitions/ServletConfig"
        },
        "servletInfo": {
          "type": "string"
        },
        "servletContext": {
          "$ref": "#/definitions/ServletContext"
        },
        "servletName": {
          "type": "string"
        }
      }
    },
    "ObjectMapperConfig": {
      "type": "object",
      "properties": {
        "defaultObjectMapper": {
          "$ref": "#/definitions/ObjectMapper"
        }
      }
    },
    "ResponseFilter": {
      "type": "object"
    }
  }
}
