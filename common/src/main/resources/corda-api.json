{
  "openapi": "3.0.1",
  "info": {
    "title": "",
    "description": "",
    "contact": {},
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/rest"
    }
  ],
  "paths": {
    "/network/nodes": {
      "get": {
        "tags": [
          "network"
        ],
        "description": "",
        "parameters": [
          {
            "name": "host-and-port",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x500-name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/io.bluebank.braid.corda.services.SimpleNodeInfo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/network/notaries": {
      "get": {
        "tags": [
          "network"
        ],
        "description": "",
        "parameters": [
          {
            "name": "x500-name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/net.corda.core.identity.Party"
                  }
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/network/nodes/self": {
      "get": {
        "tags": [
          "network"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io.bluebank.braid.corda.services.SimpleNodeInfo"
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/flows": {
      "get": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Authorise": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generated.net.corda.core.flows.ContractUpgradeFlow_AuthorisePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "empty response"
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Deauthorise": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generated.net.corda.core.flows.ContractUpgradeFlow_DeauthorisePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "empty response"
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashExitFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generated.net.corda.finance.flows.CashExitFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueAndPaymentFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generated.net.corda.finance.flows.CashIssueAndPaymentFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generated.net.corda.finance.flows.CashIssueFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashPaymentFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generated.net.corda.finance.flows.CashPaymentFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result"
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    },
    "/cordapps/corda-finance-workflows/flows/net.corda.finance.internal.CashConfigDataFlow": {
      "post": {
        "tags": [
          "cordapps"
        ],
        "description": "",
        "parameters": [],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/generated.net.corda.finance.internal.CashConfigDataFlowPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/net.corda.finance.internal.CashConfiguration"
                }
              }
            }
          },
          "500": {
            "description": "server failure"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "io.bluebank.braid.corda.services.SimpleNodeInfo": {
        "required": [
          "addresses",
          "legalIdentities"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.utilities.NetworkHostAndPort"
            }
          },
          "legalIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.Party"
            }
          }
        }
      },
      "net.corda.core.identity.Party": {
        "required": [
          "name",
          "owningKey"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "CordaX500Name encoded Party",
            "example": "O=Bank A, L=London, C=GB"
          },
          "owningKey": {
            "type": "string",
            "description": "Base 58 Encoded Public Key",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.utilities.NetworkHostAndPort": {
        "required": [
          "host",
          "port"
        ],
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "generated.net.corda.core.flows.ContractUpgradeFlow_AuthorisePayload": {
        "type": "object",
        "properties": {
          "stateAndRef": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateAndRefObject"
          },
          "upgradedContractClass": {
            "type": "string",
            "description": "Java class name",
            "example": "java.lang.Object"
          }
        }
      },
      "net.corda.core.contracts.AttachmentConstraint": {
        "type": "object"
      },
      "net.corda.core.contracts.StateAndRefObject": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/net.corda.core.contracts.TransactionStateObject"
          },
          "ref": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.contracts.StateRef": {
        "required": [
          "index",
          "txhash"
        ],
        "type": "object",
        "properties": {
          "txhash": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "net.corda.core.contracts.TransactionStateObject": {
        "required": [
          "contract",
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "contract": {
            "type": "string"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "encumbrance": {
            "type": "integer",
            "format": "int32"
          },
          "constraint": {
            "$ref": "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "generated.net.corda.core.flows.ContractUpgradeFlow_DeauthorisePayload": {
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.contracts.ContractState": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          }
        }
      },
      "net.corda.core.contracts.StateAndRef": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
          },
          "ref": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState": {
        "required": [
          "contract"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/net.corda.core.contracts.ContractState"
          },
          "contract": {
            "type": "string"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "encumbrance": {
            "type": "integer",
            "format": "int32"
          },
          "constraint": {
            "$ref": "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "net.corda.core.identity.AbstractParty": {
        "required": [
          "owningKey"
        ],
        "type": "object",
        "properties": {
          "owningKey": {
            "type": "string",
            "description": "Base 58 Encoded Public Key",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.transactions.CoreTransaction": {
        "required": [
          "id",
          "inputs",
          "outputStates",
          "outputs",
          "references"
        ],
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "networkParametersHash": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
            }
          },
          "outputStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.ContractState"
            }
          },
          "id": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.transactions.SignedTransaction": {
        "required": [
          "missingSigners",
          "notaryChangeTransaction",
          "references",
          "signatures"
        ],
        "type": "object",
        "properties": {
          "signatures": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Hex encoded Byte Array",
              "example": "736F6D654279746573"
            }
          },
          "coreTransaction": {
            "$ref": "#/components/schemas/net.corda.core.transactions.CoreTransaction"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "networkParametersHash": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "notaryChangeTransaction": {
            "type": "boolean"
          },
          "missingSigners": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Base 58 Encoded Public Key",
              "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Result": {
        "type": "object",
        "properties": {
          "stx": {
            "$ref": "#/components/schemas/net.corda.core.transactions.SignedTransaction"
          },
          "recipient": {
            "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
          }
        }
      },
      "AmountCurrency": {
        "required": [
          "displayTokenSize",
          "quantity",
          "token"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "total amount in minor units",
            "format": "int32",
            "example": 100
          },
          "displayTokenSize": {
            "type": "number",
            "example": 0.01
          },
          "token": {
            "type": "string",
            "example": "GBP"
          }
        }
      },
      "generated.net.corda.finance.flows.CashExitFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issuerRef": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          }
        }
      },
      "generated.net.corda.finance.flows.CashIssueAndPaymentFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issueRef": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          },
          "recipient": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous": {
            "type": "boolean"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "generated.net.corda.finance.flows.CashIssueFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issuerBankPartyRef": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "generated.net.corda.finance.flows.CashPaymentFlowPayload": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "recipient": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous": {
            "type": "boolean"
          },
          "issuerConstraint": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.Party"
            }
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "net.corda.finance.internal.CashConfiguration": {
        "required": [
          "issuableCurrencies",
          "supportedCurrencies"
        ],
        "type": "object",
        "properties": {
          "issuableCurrencies": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "3 digit ISO 4217 code of the currency",
              "example": "GBP"
            }
          },
          "supportedCurrencies": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "3 digit ISO 4217 code of the currency",
              "example": "GBP"
            }
          }
        }
      },
      "generated.net.corda.finance.internal.CashConfigDataFlowPayload": {
        "type": "object"
      },
      "net.corda.core.context.Actor": {
        "required": [
          "owningLegalIdentity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/net.corda.core.context.Actor_Id"
          },
          "serviceId": {
            "$ref": "#/components/schemas/net.corda.core.context.AuthServiceId"
          },
          "owningLegalIdentity": {
            "type": "string",
            "description": "CordaX500Name encoded Party",
            "example": "O=Bank A, L=London, C=GB"
          }
        }
      },
      "net.corda.core.context.Actor_Id": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "net.corda.core.context.AuthServiceId": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "net.corda.core.context.InvocationContext": {
        "type": "object",
        "properties": {
          "origin": {
            "$ref": "#/components/schemas/net.corda.core.context.InvocationOrigin"
          },
          "trace": {
            "$ref": "#/components/schemas/net.corda.core.context.Trace"
          },
          "actor": {
            "$ref": "#/components/schemas/net.corda.core.context.Actor"
          },
          "externalTrace": {
            "$ref": "#/components/schemas/net.corda.core.context.Trace"
          },
          "impersonatedActor": {
            "$ref": "#/components/schemas/net.corda.core.context.Actor"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin": {
        "type": "object"
      },
      "net.corda.core.context.Trace": {
        "type": "object",
        "properties": {
          "invocationId": {
            "$ref": "#/components/schemas/net.corda.core.context.Trace_InvocationId"
          },
          "sessionId": {
            "$ref": "#/components/schemas/net.corda.core.context.Trace_SessionId"
          }
        }
      },
      "net.corda.core.context.Trace_InvocationId": {
        "required": [
          "timestamp",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "entityType": {
            "type": "string"
          }
        }
      },
      "net.corda.core.context.Trace_SessionId": {
        "required": [
          "timestamp",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "entityType": {
            "type": "string"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Peer": {
        "required": [
          "party"
        ],
        "type": "object",
        "properties": {
          "party": {
            "type": "string",
            "description": "CordaX500Name encoded Party",
            "example": "O=Bank A, L=London, C=GB"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_RPC": {
        "type": "object",
        "properties": {
          "actor": {
            "$ref": "#/components/schemas/net.corda.core.context.Actor"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Scheduled": {
        "type": "object",
        "properties": {
          "scheduledState": {
            "$ref": "#/components/schemas/net.corda.core.contracts.ScheduledStateRef"
          }
        }
      },
      "net.corda.core.contracts.ScheduledStateRef": {
        "required": [
          "scheduledAt"
        ],
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "scheduledAt": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Service": {
        "required": [
          "owningLegalIdentity",
          "serviceClassName"
        ],
        "type": "object",
        "properties": {
          "serviceClassName": {
            "type": "string"
          },
          "owningLegalIdentity": {
            "type": "string",
            "description": "CordaX500Name encoded Party",
            "example": "O=Bank A, L=London, C=GB"
          }
        }
      },
      "net.corda.core.context.InvocationOrigin_Shell": {
        "type": "object"
      },
      "net.corda.core.contracts.AmountTransfer": {
        "required": [
          "destination",
          "quantityDelta",
          "source",
          "token"
        ],
        "type": "object",
        "properties": {
          "quantityDelta": {
            "type": "integer",
            "format": "int64"
          },
          "destination": {
            "type": "object"
          }
        }
      },
      "net.corda.core.contracts.LinearPointer": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "pointer": {
            "$ref": "#/components/schemas/net.corda.core.contracts.UniqueIdentifier"
          },
          "type": {
            "type": "string",
            "description": "Java class name",
            "example": "java.lang.Object"
          }
        }
      },
      "net.corda.core.contracts.UniqueIdentifier": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "net.corda.core.contracts.StaticPointer": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "pointer": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "type": {
            "type": "string",
            "description": "Java class name",
            "example": "java.lang.Object"
          }
        }
      },
      "net.corda.core.contracts.TransactionState": {
        "required": [
          "contract"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/net.corda.core.contracts.ContractState"
          },
          "contract": {
            "type": "string"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "encumbrance": {
            "type": "integer",
            "format": "int32"
          },
          "constraint": {
            "$ref": "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "net.corda.core.contracts.TransactionVerificationException_InvalidAttachmentException": {
        "required": [
          "attachmentHash",
          "txId"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "attachmentHash": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "originalExceptionClassName": {
            "type": "string"
          },
          "originalErrorId": {
            "type": "integer",
            "format": "int64"
          },
          "errorId": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "originalMessage": {
            "type": "string"
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      },
      "net.corda.core.contracts.TransactionVerificationException_PackageOwnershipException": {
        "required": [
          "attachmentHash",
          "invalidClassName",
          "packageName",
          "txId"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "attachmentHash": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "invalidClassName": {
            "type": "string"
          },
          "packageName": {
            "type": "string"
          },
          "originalExceptionClassName": {
            "type": "string"
          },
          "originalErrorId": {
            "type": "integer",
            "format": "int64"
          },
          "errorId": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "originalMessage": {
            "type": "string"
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Acceptor_Companion_APPROVING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Change": {
        "type": "object"
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Acceptor_Companion_VERIFYING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Instigator_Companion_NOTARY": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Instigator_Companion_SIGNING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.AbstractStateReplacementFlow_Proposal": {
        "required": [
          "modification"
        ],
        "type": "object",
        "properties": {
          "stateRef": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "modification": {
            "type": "object"
          }
        }
      },
      "net.corda.core.flows.CollectSignaturesFlow_Companion_COLLECTING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.CollectSignaturesFlow_Companion_VERIFYING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.FinalityFlow_Companion_BROADCASTING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.FinalityFlow_Companion_NOTARISING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.FlowInfo": {
        "required": [
          "appName",
          "flowVersion"
        ],
        "type": "object",
        "properties": {
          "flowVersion": {
            "type": "integer",
            "format": "int32"
          },
          "appName": {
            "type": "string"
          }
        }
      },
      "net.corda.core.flows.IllegalFlowLogicException": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "msg": {
            "type": "string",
            "writeOnly": true
          },
          "message": {
            "type": "string"
          },
          "localizedMessage": {
            "type": "string"
          }
        }
      },
      "net.corda.core.flows.NotarisationPayload": {
        "required": [
          "transaction"
        ],
        "type": "object",
        "properties": {
          "transaction": {
            "type": "object"
          },
          "requestSignature": {
            "$ref": "#/components/schemas/net.corda.core.flows.NotarisationRequestSignature"
          },
          "coreTransaction": {
            "$ref": "#/components/schemas/net.corda.core.transactions.CoreTransaction"
          },
          "signedTransaction": {
            "$ref": "#/components/schemas/net.corda.core.transactions.SignedTransaction"
          }
        }
      },
      "net.corda.core.flows.NotarisationRequestSignature": {
        "required": [
          "digitalSignature",
          "platformVersion"
        ],
        "type": "object",
        "properties": {
          "digitalSignature": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          },
          "platformVersion": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "net.corda.core.flows.NotarisationRequest": {
        "required": [
          "statesToConsume",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "statesToConsume": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "transactionId": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.flows.NotarisationResponse": {
        "required": [
          "signatures"
        ],
        "type": "object",
        "properties": {
          "signatures": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Hex encoded Byte Array",
              "example": "736F6D654279746573"
            }
          }
        }
      },
      "net.corda.core.flows.NotaryError_Conflict": {
        "required": [
          "consumedStates",
          "txId"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "consumedStates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/net.corda.core.flows.StateConsumptionDetails"
            }
          }
        }
      },
      "net.corda.core.flows.StateConsumptionDetails": {
        "required": [
          "hashOfTransactionId",
          "type"
        ],
        "type": "object",
        "properties": {
          "hashOfTransactionId": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "type": {
            "type": "string",
            "enum": [
              "INPUT_STATE",
              "REFERENCE_INPUT_STATE"
            ]
          }
        }
      },
      "net.corda.core.flows.NotaryError_General": {
        "required": [
        ],
        "type": "object",
        "properties": {
        }
      },
      "net.corda.core.flows.NotaryError_RequestSignatureInvalid": {
        "required": [
        ],
        "type": "object",
        "properties": {
        }
      },
      "net.corda.core.contracts.TimeWindow": {
        "type": "object",
        "properties": {
          "untilTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "midpoint": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "fromTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          }
        }
      },
      "net.corda.core.flows.NotaryError_TimeWindowInvalid": {
        "required": [
          "currentTime"
        ],
        "type": "object",
        "properties": {
          "currentTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "txTimeWindow": {
            "$ref": "#/components/schemas/net.corda.core.contracts.TimeWindow"
          }
        }
      },
      "net.corda.core.flows.NotaryError_TransactionInvalid": {
        "required": [
        ],
        "type": "object",
        "properties": {
        }
      },
      "net.corda.core.flows.NotaryError_WrongNotary": {
        "type": "object"
      },
      "net.corda.core.flows.NotaryFlow_Client_Companion_REQUESTING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.NotaryFlow_Client_Companion_VALIDATING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.SignTransactionFlow_Companion_RECEIVING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.SignTransactionFlow_Companion_SIGNING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.SignTransactionFlow_Companion_VERIFYING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.WaitTimeUpdate": {
        "required": [
          "waitTime"
        ],
        "type": "object",
        "properties": {
          "waitTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Duration"
          }
        }
      },
      "net.corda.core.flows.WithReferencedStatesFlow_Companion_ATTEMPT": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.WithReferencedStatesFlow_Companion_RETRYING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.flows.WithReferencedStatesFlow_Companion_SUCCESS": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.messaging.DataFeed": {
        "required": [
          "snapshot"
        ],
        "type": "object",
        "properties": {
          "snapshot": {
            "type": "object"
          }
        }
      },
      "net.corda.core.concurrent.CordaFutureObject": {
        "type": "object",
        "properties": {
          "done": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          }
        }
      },
      "net.corda.core.flows.StateMachineRunId": {
        "required": [
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "net.corda.core.messaging.FlowHandleImpl": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "returnValue": {
            "$ref": "#/components/schemas/net.corda.core.concurrent.CordaFutureObject"
          }
        }
      },
      "Pair": {
        "required": [
          "first",
          "second"
        ],
        "type": "object",
        "properties": {
          "first": {
            "type": [
              "object",
              "any"
            ]
          },
          "second": {
            "type": [
              "object",
              "any"
            ]
          }
        }
      },
      "net.corda.core.messaging.FlowProgressHandleImpl": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "returnValue": {
            "$ref": "#/components/schemas/net.corda.core.concurrent.CordaFutureObject"
          },
          "stepsTreeIndexFeed": {
            "$ref": "#/components/schemas/net.corda.core.messaging.DataFeed"
          },
          "stepsTreeFeed": {
            "$ref": "#/components/schemas/net.corda.core.messaging.DataFeed"
          }
        }
      },
      "net.corda.core.messaging.ParametersUpdateInfo": {
        "required": [
          "description",
          "hash",
          "updateDeadline"
        ],
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          },
          "parameters": {
            "$ref": "#/components/schemas/net.corda.core.node.NetworkParameters"
          },
          "description": {
            "type": "string"
          },
          "updateDeadline": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          }
        }
      },
      "net.corda.core.node.NetworkParameters": {
        "required": [
          "epoch",
          "eventHorizon",
          "maxMessageSize",
          "maxTransactionSize",
          "minimumPlatformVersion",
          "modifiedTime",
          "notaries",
          "packageOwnership",
          "whitelistedContractImplementations"
        ],
        "type": "object",
        "properties": {
          "minimumPlatformVersion": {
            "type": "integer",
            "format": "int32"
          },
          "notaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.NotaryInfo"
            }
          },
          "maxMessageSize": {
            "type": "integer",
            "format": "int32"
          },
          "maxTransactionSize": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "epoch": {
            "type": "integer",
            "format": "int32"
          },
          "whitelistedContractImplementations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Base 58 Encoded Secure Hash",
                "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
              }
            }
          },
          "eventHorizon": {
            "type": "string",
            "description": "JSR310 encoded time representation of Duration"
          },
          "packageOwnership": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Base 58 Encoded Public Key",
              "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          }
        }
      },
      "net.corda.core.node.NotaryInfo": {
        "required": [
          "validating"
        ],
        "type": "object",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "validating": {
            "type": "boolean"
          }
        }
      },
      "net.corda.core.flows.FlowInitiator": {
        "type": "object",
        "properties": {
          "invocationContext": {
            "$ref": "#/components/schemas/net.corda.core.context.InvocationContext"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "net.corda.core.messaging.StateMachineInfo": {
        "required": [
          "flowLogicClassName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "flowLogicClassName": {
            "type": "string"
          },
          "initiator": {
            "$ref": "#/components/schemas/net.corda.core.flows.FlowInitiator"
          },
          "progressTrackerStepAndUpdates": {
            "$ref": "#/components/schemas/net.corda.core.messaging.DataFeed"
          },
          "invocationContext": {
            "$ref": "#/components/schemas/net.corda.core.context.InvocationContext"
          }
        }
      },
      "net.corda.core.messaging.StateMachineTransactionMapping": {
        "required": [
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "stateMachineRunId": {
            "$ref": "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "transactionId": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.messaging.StateMachineUpdate_Added": {
        "type": "object",
        "properties": {
          "stateMachineInfo": {
            "$ref": "#/components/schemas/net.corda.core.messaging.StateMachineInfo"
          },
          "id": {
            "$ref": "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          }
        }
      },
      "net.corda.core.messaging.StateMachineUpdate_Removed": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/net.corda.core.flows.StateMachineRunId"
          },
          "result": {
            "$ref": "#/components/schemas/net.corda.core.utilities.TryObject"
          }
        }
      },
      "net.corda.core.utilities.TryObject": {
        "required": [
          "failure",
          "orThrow",
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "orThrow": {
            "type": "object"
          },
          "failure": {
            "type": "boolean"
          }
        }
      },
      "net.corda.core.identity.PartyAndCertificate": {
        "required": [
          "certPath",
          "certificate",
          "name",
          "owningKey"
        ],
        "type": "object",
        "properties": {
          "certPath": {
            "type": "string",
            "description": "X509 encoded certificate PKI path",
            "format": "byte"
          },
          "certificate": {
            "type": "string",
            "description": "X509 encoded certificate",
            "format": "byte"
          },
          "party": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "name": {
            "type": "string",
            "description": "CordaX500Name encoded Party",
            "example": "O=Bank A, L=London, C=GB"
          },
          "owningKey": {
            "type": "string",
            "description": "Base 58 Encoded Public Key",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.node.NodeInfo": {
        "required": [
          "addresses",
          "legalIdentities",
          "legalIdentitiesAndCerts",
          "platformVersion",
          "serial"
        ],
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.utilities.NetworkHostAndPort"
            }
          },
          "legalIdentitiesAndCerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.PartyAndCertificate"
            }
          },
          "platformVersion": {
            "type": "integer",
            "format": "int32"
          },
          "serial": {
            "type": "integer",
            "format": "int64"
          },
          "legalIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.Party"
            }
          }
        }
      },
      "net.corda.core.node.services.NetworkMapCache_MapChange_Added": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/net.corda.core.node.NodeInfo"
          }
        }
      },
      "net.corda.core.node.services.NetworkMapCache_MapChange_Modified": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/net.corda.core.node.NodeInfo"
          },
          "previousNode": {
            "$ref": "#/components/schemas/net.corda.core.node.NodeInfo"
          }
        }
      },
      "net.corda.core.node.services.NetworkMapCache_MapChange_Removed": {
        "type": "object",
        "properties": {
          "node": {
            "$ref": "#/components/schemas/net.corda.core.node.NodeInfo"
          }
        }
      },
      "net.corda.core.node.services.Vault": {
        "required": [
          "states"
        ],
        "type": "object",
        "properties": {
          "states": {
            "type": "object"
          }
        }
      },
      "net.corda.core.node.services.Vault_ConstraintInfo": {
        "type": "object",
        "properties": {
          "constraint": {
            "$ref": "#/components/schemas/net.corda.core.contracts.AttachmentConstraint"
          }
        }
      },
      "net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/net.corda.core.contracts.TransactionStateNet.corda.core.contracts.ContractState"
          },
          "ref": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          }
        }
      },
      "net.corda.core.node.services.Vault_Page": {
        "required": [
          "otherResults",
          "stateTypes",
          "states",
          "statesMetadata",
          "totalStatesAvailable"
        ],
        "type": "object",
        "properties": {
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "statesMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.Vault_StateMetadata"
            }
          },
          "totalStatesAvailable": {
            "type": "integer",
            "format": "int64"
          },
          "stateTypes": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "otherResults": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "net.corda.core.node.services.Vault_StateMetadata": {
        "required": [
          "contractStateClassName",
          "recordedTime",
          "status"
        ],
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
          },
          "contractStateClassName": {
            "type": "string"
          },
          "recordedTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "consumedTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "lockId": {
            "type": "string"
          },
          "lockUpdateTime": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintInfo": {
            "$ref": "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
          }
        }
      },
      "net.corda.core.node.services.Vault_Update": {
        "required": [
          "consumed",
          "empty",
          "produced",
          "references",
          "type"
        ],
        "type": "object",
        "properties": {
          "consumed": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "produced": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "flowId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "GENERAL",
              "NOTARY_CHANGE",
              "CONTRACT_UPGRADE"
            ]
          },
          "references": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateAndRefNet.corda.core.contracts.ContractState"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria_AndComposition": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          },
          "b": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria_AttachmentsQueryCriteria": {
        "type": "object",
        "properties": {
          "uploaderCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateString"
          },
          "filenameCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateString"
          },
          "uploadDateCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateInstant"
          },
          "contractClassNamesCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateListString"
          },
          "signersCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateListPublicKey"
          },
          "isSignedCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateBoolean"
          },
          "versionCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateInteger"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicateBoolean": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateInstant": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateInteger": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateListPublicKey": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateListString": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.ColumnPredicateString": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.AttachmentQueryCriteria_OrComposition": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          },
          "b": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentSort": {
        "required": [
          "columns"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.vault.AttachmentSort_AttachmentSortColumn"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.AttachmentSort_AttachmentSortColumn": {
        "required": [
          "direction",
          "sortAttribute"
        ],
        "type": "object",
        "properties": {
          "sortAttribute": {
            "type": "string",
            "enum": [
              "INSERTION_DATE",
              "UPLOADER",
              "FILENAME",
              "VERSION"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "net.corda.core.node.services.vault.Builder": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.Column": {
        "required": [
          "declaringClass",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "declaringClass": {
            "type": "string",
            "description": "Java class name",
            "example": "java.lang.Object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_AggregateFunction": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "COUNT",
              "AVG",
              "MIN",
              "MAX",
              "SUM"
            ]
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_Between": {
        "required": [
          "rightFromLiteral",
          "rightToLiteral"
        ],
        "type": "object",
        "properties": {
          "rightToLiteral": {
            "type": "object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_BinaryComparison": {
        "required": [
          "operator",
          "rightLiteral"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL"
            ]
          },
          "rightLiteral": {
            "type": "object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_CollectionExpression": {
        "required": [
          "operator",
          "rightLiteral"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "IN",
              "NOT_IN",
              "IN_IGNORE_CASE",
              "NOT_IN_IGNORE_CASE"
            ]
          },
          "rightLiteral": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_EqualityComparison": {
        "required": [
          "operator",
          "rightLiteral"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "EQUAL",
              "NOT_EQUAL",
              "EQUAL_IGNORE_CASE",
              "NOT_EQUAL_IGNORE_CASE"
            ]
          },
          "rightLiteral": {
            "type": "object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_Likeness": {
        "required": [
          "operator",
          "rightLiteral"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "LIKE",
              "NOT_LIKE",
              "LIKE_IGNORE_CASE",
              "NOT_LIKE_IGNORE_CASE"
            ]
          },
          "rightLiteral": {
            "type": "string"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicate_NullExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "IS_NULL",
              "NOT_NULL"
            ]
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnObjectObject": {
        "required": [
          "declaringClass",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "declaringClass": {
            "type": "string",
            "description": "Java class name",
            "example": "java.lang.Object"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicateObject": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.CriteriaExpression_AggregateFunctionExpression": {
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnObjectObject"
          },
          "predicate": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateObject"
          },
          "groupByColumns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnObjectObject"
            }
          },
          "orderBy": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.CriteriaExpression_BinaryLogical": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "left": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean"
          },
          "right": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean"
          },
          "operator": {
            "type": "string",
            "enum": [
              "AND",
              "OR"
            ]
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpression_ColumnPredicateExpression": {
        "type": "object",
        "properties": {
          "column": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnObjectObject"
          },
          "predicate": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateObject"
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpression_Not": {
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionObjectBoolean"
          }
        }
      },
      "net.corda.core.node.services.vault.PageSpecification": {
        "required": [
          "default",
          "pageNumber",
          "pageSize"
        ],
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.QueryCriteria_AndComposition": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          },
          "b": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.ColumnPredicateLong": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.QueryCriteria_FungibleAssetQueryCriteria": {
        "required": [
          "constraintTypes",
          "constraints",
          "relevancyStatus",
          "status"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "quantity": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateLong"
          },
          "issuer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "issuerRef": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Hex encoded Byte Array",
              "example": "736F6D654279746573"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "contractStateTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Java class name",
              "example": "java.lang.Object"
            }
          },
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_FungibleStateQueryCriteria": {
        "required": [
          "constraintTypes",
          "constraints",
          "relevancyStatus",
          "status"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "quantity": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateLong"
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "contractStateTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Java class name",
              "example": "java.lang.Object"
            }
          },
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_LinearStateQueryCriteria": {
        "required": [
          "constraintTypes",
          "constraints",
          "relevancyStatus",
          "status"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "uuid": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "externalId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "contractStateTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Java class name",
              "example": "java.lang.Object"
            }
          },
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_OrComposition": {
        "type": "object",
        "properties": {
          "a": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          },
          "b": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria"
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_SoftLockingCondition": {
        "required": [
          "lockIds",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "UNLOCKED_ONLY",
              "LOCKED_ONLY",
              "SPECIFIED",
              "UNLOCKED_AND_SPECIFIED"
            ]
          },
          "lockIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_TimeCondition": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RECORDED",
              "CONSUMED"
            ]
          },
          "predicate": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.ColumnPredicateInstant"
          }
        }
      },
      "net.corda.core.node.services.vault.CriteriaExpressionNet.corda.core.schemas.StatePersistableBoolean": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.QueryCriteria_VaultCustomQueryCriteria": {
        "required": [
          "constraintTypes",
          "constraints",
          "relevancyStatus",
          "status"
        ],
        "type": "object",
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.CriteriaExpressionNet.corda.core.schemas.StatePersistableBoolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "contractStateTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Java class name",
              "example": "java.lang.Object"
            }
          },
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.QueryCriteria_VaultQueryCriteria": {
        "required": [
          "constraintTypes",
          "constraints",
          "relevancyStatus",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "UNCONSUMED",
              "CONSUMED",
              "ALL"
            ]
          },
          "contractStateTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Java class name",
              "example": "java.lang.Object"
            }
          },
          "stateRefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.contracts.StateRef"
            }
          },
          "notary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "softLockingCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_SoftLockingCondition"
          },
          "timeCondition": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_TimeCondition"
          },
          "relevancyStatus": {
            "type": "string",
            "enum": [
              "RELEVANT",
              "NOT_RELEVANT",
              "ALL"
            ]
          },
          "constraintTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALWAYS_ACCEPT",
                "HASH",
                "CZ_WHITELISTED",
                "SIGNATURE"
              ]
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo"
            }
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.Sort": {
        "required": [
          "columns"
        ],
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.node.services.vault.Sort_SortColumn"
            }
          }
        }
      },
      "net.corda.core.node.services.vault.SortAttribute": {
        "type": "object"
      },
      "net.corda.core.node.services.vault.Sort_SortColumn": {
        "required": [
          "direction"
        ],
        "type": "object",
        "properties": {
          "sortAttribute": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.SortAttribute"
          },
          "direction": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "net.corda.core.node.services.vault.SortAttribute_Custom": {
        "required": [
          "entityStateClass",
          "entityStateColumnName"
        ],
        "type": "object",
        "properties": {
          "entityStateClass": {
            "type": "string",
            "description": "Java class name",
            "example": "java.lang.Object"
          },
          "entityStateColumnName": {
            "type": "string"
          }
        }
      },
      "net.corda.core.node.services.vault.SortAttribute_Standard": {
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/net.corda.core.node.services.vault.Sort_Attribute"
          }
        }
      },
      "net.corda.core.node.services.vault.Sort_Attribute": {
        "type": "object"
      },
      "net.corda.core.schemas.CommonSchemaV1_FungibleState": {
        "required": [
          "issuerRef",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "issuer": {
            "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "issuerRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "stateRef": {
            "$ref": "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          }
        }
      },
      "net.corda.core.schemas.PersistentStateRef": {
        "required": [
          "index",
          "txId"
        ],
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "net.corda.core.schemas.CommonSchemaV1_LinearState": {
        "required": [
          "uuid"
        ],
        "type": "object",
        "properties": {
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          },
          "externalId": {
            "type": "string"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "stateRef": {
            "$ref": "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          }
        }
      },
      "net.corda.core.transactions.ComponentGroup": {
        "required": [
          "components",
          "groupIndex"
        ],
        "type": "object",
        "properties": {
          "groupIndex": {
            "type": "integer",
            "format": "int32"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Hex encoded Byte Array",
              "example": "736F6D654279746573"
            }
          }
        }
      },
      "net.corda.core.transactions.ContractUpgradeFilteredTransaction_FilteredComponent": {
        "required": [
          "component",
          "nonce"
        ],
        "type": "object",
        "properties": {
          "component": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          },
          "nonce": {
            "type": "string",
            "description": "Base 58 Encoded Secure Hash",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker": {
        "required": [
          "allSteps",
          "allStepsLabels",
          "hasEnded",
          "stepIndex",
          "steps",
          "stepsTreeIndex",
          "topLevelTracker"
        ],
        "type": "object",
        "properties": {
          "inputSteps": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
            }
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
            }
          },
          "stepIndex": {
            "type": "integer",
            "format": "int32"
          },
          "stepsTreeIndex": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "currentStep": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "allStepsLabels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pair"
            }
          },
          "hasEnded": {
            "type": "boolean"
          },
          "currentStepRecursive": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          },
          "topLevelTracker": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "allSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
            }
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Change_Position": {
        "type": "object",
        "properties": {
          "tracker": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "newStep": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          },
          "progressTracker": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Step": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Change_Rendering": {
        "type": "object",
        "properties": {
          "tracker": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "ofStep": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          },
          "progressTracker": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          }
        }
      },
      "net.corda.core.utilities.ProgressTracker_Change_Structural": {
        "type": "object",
        "properties": {
          "tracker": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          },
          "parent": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Step"
          },
          "progressTracker": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker"
          }
        }
      },
      "net.corda.finance.contracts.BusinessCalendar": {
        "required": [
          "holidayDates"
        ],
        "type": "object",
        "properties": {
          "holidayDates": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "JSR310 encoded time representation of LocalDate"
            }
          }
        }
      },
      "net.corda.finance.contracts.Commodity": {
        "required": [
          "commodityCode",
          "defaultFractionDigits",
          "displayName",
          "displayTokenSize"
        ],
        "type": "object",
        "properties": {
          "commodityCode": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "defaultFractionDigits": {
            "type": "integer",
            "format": "int32"
          },
          "displayTokenSize": {
            "type": "number"
          }
        }
      },
      "net.corda.finance.contracts.Expression": {
        "required": [
          "expr"
        ],
        "type": "object",
        "properties": {
          "expr": {
            "type": "string"
          }
        }
      },
      "net.corda.finance.contracts.FixOf": {
        "required": [
          "forDay",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "forDay": {
            "type": "string",
            "description": "JSR310 encoded time representation of LocalDate"
          },
          "ofTenor": {
            "$ref": "#/components/schemas/net.corda.finance.contracts.Tenor"
          }
        }
      },
      "net.corda.finance.contracts.Tenor": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Issued": {
        "required": [
          "_productType",
          "issuer",
          "product"
        ],
        "type": "object",
        "properties": {
          "issuer": {
            "required": [
              "party",
              "reference"
            ],
            "type": "object",
            "properties": {
              "party": {
                "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
              },
              "reference": {
                "type": "string",
                "description": "Hex encoded Byte Array",
                "example": "736F6D654279746573"
              }
            }
          },
          "product": {
            "type": "object"
          },
          "_productType": {
            "type": "string",
            "example": "java.util.Currency"
          }
        }
      },
      "net.corda.core.contracts.PartyAndReference": {
        "required": [
          "party",
          "reference"
        ],
        "type": "object",
        "properties": {
          "party": {
            "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "reference": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          }
        }
      },
      "net.corda.finance.contracts.asset.Obligation_Terms": {
        "required": [
          "acceptableContracts",
          "acceptableIssuedProducts",
          "dueBefore",
          "product",
          "timeTolerance"
        ],
        "type": "object",
        "properties": {
          "acceptableContracts": {
            "uniqueItems": true,
            "required": [
              "empty",
              "size"
            ],
            "type": "array",
            "properties": {
              "elements": {
                "uniqueItems": true,
                "type": "array",
                "writeOnly": true,
                "items": {
                  "type": "string",
                  "description": "Base 58 Encoded Secure Hash",
                  "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              }
            },
            "items": {
              "type": "string",
              "description": "Base 58 Encoded Secure Hash",
              "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
            }
          },
          "acceptableIssuedProducts": {
            "uniqueItems": true,
            "required": [
              "empty",
              "size"
            ],
            "type": "array",
            "properties": {
              "elements": {
                "uniqueItems": true,
                "type": "array",
                "writeOnly": true,
                "items": {
                  "$ref": "#/components/schemas/Issued"
                }
              },
              "empty": {
                "type": "boolean"
              },
              "size": {
                "type": "integer",
                "format": "int32"
              }
            },
            "items": {
              "$ref": "#/components/schemas/Issued"
            }
          },
          "dueBefore": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "timeTolerance": {
            "type": "string",
            "description": "JSR310 encoded time representation of Duration"
          },
          "product": {
            "type": "object"
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_FINALISING_TX": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_GENERATING_ID": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_GENERATING_TX": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.AbstractCashFlow_Companion_SIGNING_TX": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.CashExitFlow_ExitRequest": {
        "required": [
          "amount",
          "issuerRef"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issuerRef": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          }
        }
      },
      "net.corda.finance.flows.CashIssueAndPaymentFlow_IssueAndPaymentRequest": {
        "required": [
          "amount",
          "anonymous",
          "issueRef"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issueRef": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          },
          "recipient": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous": {
            "type": "boolean"
          }
        }
      },
      "net.corda.finance.flows.CashIssueFlow_IssueRequest": {
        "required": [
          "amount",
          "issueRef"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "issueRef": {
            "type": "string",
            "description": "Hex encoded Byte Array",
            "example": "736F6D654279746573"
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "net.corda.finance.flows.CashPaymentFlow_PaymentRequest": {
        "required": [
          "amount",
          "anonymous",
          "issuerConstraint"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "recipient": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "anonymous": {
            "type": "boolean"
          },
          "issuerConstraint": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.Party"
            }
          },
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          }
        }
      },
      "net.corda.finance.contracts.DealState": {
        "required": [
          "participants"
        ],
        "type": "object",
        "properties": {
          "linearId": {
            "$ref": "#/components/schemas/net.corda.core.contracts.UniqueIdentifier"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_AutoOffer": {
        "type": "object",
        "properties": {
          "notary": {
            "$ref": "#/components/schemas/net.corda.core.identity.Party"
          },
          "dealBeingOffered": {
            "$ref": "#/components/schemas/net.corda.finance.contracts.DealState"
          }
        }
      },
      "net.corda.core.identity.AnonymousParty": {
        "required": [
          "owningKey"
        ],
        "type": "object",
        "properties": {
          "owningKey": {
            "type": "string",
            "description": "Base 58 Encoded Public Key",
            "example": "GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE"
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Handshake": {
        "required": [
          "payload"
        ],
        "type": "object",
        "properties": {
          "payload": {
            "type": "object"
          },
          "primaryIdentity": {
            "$ref": "#/components/schemas/net.corda.core.identity.AnonymousParty"
          },
          "secondaryIdentity": {
            "$ref": "#/components/schemas/net.corda.core.identity.AnonymousParty"
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Primary_Companion_GENERATING_ID": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Primary_Companion_SENDING_PROPOSAL": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_COLLECTING_SIGNATURES": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_RECEIVING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_RECORDING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_SIGNING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyDealFlow_Secondary_Companion_VERIFYING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_COLLECTING_SIGNATURES": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_RECEIVING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_RECORDING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_SIGNING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Buyer_VERIFYING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Seller_Companion_AWAITING_PROPOSAL": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_Seller_Companion_VERIFYING_AND_SIGNING": {
        "required": [
          "extraAuditData",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "changes": {
            "$ref": "#/components/schemas/net.corda.core.utilities.ProgressTracker_Change"
          },
          "extraAuditData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "net.corda.finance.flows.TwoPartyTradeFlow_SellerTradeInfo": {
        "required": [
          "price"
        ],
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/AmountCurrency"
          },
          "payToIdentity": {
            "$ref": "#/components/schemas/net.corda.core.identity.PartyAndCertificate"
          }
        }
      },
      "net.corda.finance.schemas.CashSchemaV1": {
        "required": [
          "mappedTypes",
          "migrationResource",
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "migrationResource": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "mappedTypes": {
            "type": "object"
          }
        }
      },
      "net.corda.finance.schemas.CashSchemaV1_PersistentCashState": {
        "required": [
          "currency",
          "issuerPartyHash",
          "issuerRef",
          "pennies"
        ],
        "type": "object",
        "properties": {
          "owner": {
            "$ref": "#/components/schemas/net.corda.core.identity.AbstractParty"
          },
          "pennies": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "issuerPartyHash": {
            "type": "string"
          },
          "issuerRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "stateRef": {
            "$ref": "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          }
        }
      },
      "net.corda.finance.schemas.CommercialPaperSchemaV1": {
        "required": [
          "mappedTypes",
          "migrationResource",
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "migrationResource": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "mappedTypes": {
            "type": "object"
          }
        }
      },
      "net.corda.finance.schemas.CommercialPaperSchemaV1_PersistentCommercialPaperState": {
        "required": [
          "currency",
          "faceValue",
          "faceValueIssuerPartyHash",
          "faceValueIssuerRef",
          "issuancePartyHash",
          "issuanceRef",
          "maturity",
          "ownerHash"
        ],
        "type": "object",
        "properties": {
          "issuancePartyHash": {
            "type": "string"
          },
          "issuanceRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "ownerHash": {
            "type": "string"
          },
          "maturity": {
            "type": "string",
            "description": "JSR310 encoded time representation of Instant"
          },
          "faceValue": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "faceValueIssuerPartyHash": {
            "type": "string"
          },
          "faceValueIssuerRef": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "stateRef": {
            "$ref": "#/components/schemas/net.corda.core.schemas.PersistentStateRef"
          }
        }
      }
    }
  }
}
